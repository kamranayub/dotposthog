openapi: 3.0.3
info:
  description: ""
  title: PostHog API
servers:
- url: /
paths:
  /capture/:
    post:
      description: |
        > Note: Timestamp is optional. If not set, it'll automatically be set to the current time.

        Capture an event. Events are the core of PostHog, and are what you use
        to track user behavior, and then analyze and visualize in
        PostHog.
      parameters:
      - explode: true
        in: query
        name: ip
        required: false
        schema:
          description: |
            The IP address of the user. This is used to geolocate the user.
          format: ipv4
          type: string
        style: form
      - description: |
          The compression method used to compress the request body.
        explode: true
        in: query
        name: compression
        required: false
        schema:
          enum:
          - gzip-js
          - gzip
          - lz64
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              api_key: <ph_project_api_key>
              event: "[event name]"
              properties:
                distinct_id: "[your users' distinct id]"
                key1: value1
                key2: value2
              timestamp: "[optional timestamp in ISO 8601 format]"
            schema:
              $ref: '#/components/schemas/EventCaptureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCaptureRequest'
          text/plain:
            examples:
              gzip_event:
                summary: |
                  Gzipped request body as per the
                  application/json schema.
        description: |
          Provides a method to capture events. Events are the core of PostHog,
          and are what you use to track user behavior, and then analyze and
          visualize in PostHog.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsCaptureResponse'
          description: |
            On successful capture of an event or events, we notify you with a
            200 response. A 200 response guarantees that the event was persisted
            by PostHog, but does not guarantee that it will be processed
            successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsCaptureUnauthenticatedResponse'
          description: |
            If you send an invalid API key, we will return a 401 response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsCaptureClientErrorResponse'
          description: |
            If you send an invalid request, we will return a 400 response. This
            can happen if you send an invalid JSON payload among
            other things.
      summary: Sending an event
  /batch/:
    post:
      description: |
        You can send multiple events in one go with the Batch API.

        There is no limit on the number of events you can send in a
        batch, but the entire request body must be less than 20MB by
        default (see API overview).

        > Note: Timestamp is optional. If not set, it'll automatically
        be set to the current time.
      parameters:
      - explode: true
        in: query
        name: ip
        required: false
        schema:
          description: |
            The IP address of the user. This is used to geolocate the user.
          format: ipv4
          type: string
        style: form
      - description: |
          The compression method used to compress the request body.
        explode: true
        in: query
        name: compression
        required: false
        schema:
          enum:
          - gzip-js
          - gzip
          - lz64
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              api_key: <ph_project_api_key>
              batch:
              - event: "[event name]"
                properties:
                  distinct_id: "[your users' distinct id]"
                  key1: value1
                  key2: value2
                timestamp: "[optional timestamp in ISO 8601 format]"
            schema:
              $ref: '#/components/schemas/EventsCaptureRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventsCaptureRequest'
          text/plain:
            examples:
              gzip_event:
                summary: |
                  Gzipped request body as per the
                  application/json schema.
        description: |
          Provides a method to capture events. Events are the core of PostHog,
          and are what you use to track user behavior, and then analyze and
          visualize in PostHog.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsCaptureResponse'
          description: |
            On successful capture of an event or events, we notify you with a
            200 response. A 200 response guarantees that the event was persisted
            by PostHog, but does not guarantee that it will be processed
            successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsCaptureUnauthenticatedResponse'
          description: |
            If you send an invalid API key, we will return a 401 response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsCaptureClientErrorResponse'
          description: |
            If you send an invalid request, we will return a 400 response. This
            can happen if you send an invalid JSON payload among
            other things.
      summary: Sending multiple events
  /api/organizations/{parent_lookup_organization_id}/domains/:
    get:
      operationId: domains_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationDomainList'
          description: ""
      tags:
      - organizations
      - domains
    post:
      operationId: domains_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
          description: ""
      tags:
      - organizations
      - domains
  /api/organizations/{parent_lookup_organization_id}/domains/{id}/:
    delete:
      operationId: domains_destroy
      parameters:
      - description: A UUID string identifying this domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - domains
    get:
      operationId: domains_retrieve
      parameters:
      - description: A UUID string identifying this domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
          description: ""
      tags:
      - organizations
      - domains
    patch:
      operationId: domains_partial_update
      parameters:
      - description: A UUID string identifying this domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationDomain'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
          description: ""
      tags:
      - organizations
      - domains
    put:
      operationId: domains_update
      parameters:
      - description: A UUID string identifying this domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
          description: ""
      tags:
      - organizations
      - domains
  /api/organizations/{parent_lookup_organization_id}/domains/{id}/verify/:
    post:
      operationId: domains_verify_create
      parameters:
      - description: A UUID string identifying this domain.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationDomain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDomain'
          description: ""
      tags:
      - organizations
      - domains
  /api/organizations/{parent_lookup_organization_id}/feature_flags/{feature_flag_key}/:
    get:
      description: Retrieves all feature flags for a given organization and key.
      operationId: feature_flags_retrieve
      parameters:
      - explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - organizations
      - feature_flags
  /api/organizations/{parent_lookup_organization_id}/feature_flags/copy_flags/:
    post:
      description: Retrieves all feature flags for a given organization and key.
      operationId: feature_flags_copy_flags_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - organizations
      - feature_flags
  /api/organizations/{parent_lookup_organization_id}/invites/:
    get:
      operationId: invites_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationInviteList'
          description: ""
      tags:
      - organizations
      - invites
    post:
      operationId: invites_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
          description: ""
      tags:
      - organizations
      - invites
  /api/organizations/{parent_lookup_organization_id}/invites/{id}/:
    delete:
      operationId: invites_destroy
      parameters:
      - description: A UUID string identifying this organization invite.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - invites
  /api/organizations/{parent_lookup_organization_id}/invites/bulk/:
    post:
      operationId: invites_bulk_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationInvite'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvite'
          description: ""
      tags:
      - organizations
      - invites
  /api/organizations/{parent_lookup_organization_id}/members/:
    get:
      operationId: members_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationMemberList'
          description: ""
      tags:
      - organizations
      - members
  /api/organizations/{parent_lookup_organization_id}/members/{user__uuid}/:
    delete:
      operationId: members_destroy
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user__uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - members
    patch:
      operationId: members_partial_update
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user__uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationMember'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ""
      tags:
      - organizations
      - members
    put:
      operationId: members_update
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user__uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationMember'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: ""
      tags:
      - organizations
      - members
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/:
    get:
      operationId: pipeline_transformations_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
    post:
      operationId: pipeline_transformations_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/:
    delete:
      operationId: pipeline_transformations_destroy
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - pipeline_transformations
    get:
      operationId: pipeline_transformations_retrieve
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
    patch:
      operationId: pipeline_transformations_partial_update
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
    put:
      operationId: pipeline_transformations_update
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/check_for_updates/:
    get:
      operationId: pipeline_transformations_check_for_updates_retrieve
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/source/:
    get:
      operationId: pipeline_transformations_source_retrieve
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/update_source/:
    patch:
      operationId: pipeline_transformations_update_source_partial_update
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/upgrade/:
    post:
      operationId: pipeline_transformations_upgrade_create
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/activity/:
    get:
      operationId: pipeline_transformations_activity_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/repository/:
    get:
      operationId: pipeline_transformations_repository_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/pipeline_transformations/unused/:
    get:
      operationId: pipeline_transformations_unused_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - pipeline_transformations
  /api/organizations/{parent_lookup_organization_id}/plugins/:
    get:
      operationId: plugins_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginList'
          description: ""
      tags:
      - organizations
      - plugins
    post:
      operationId: plugins_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/:
    delete:
      operationId: plugins_destroy
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - plugins
    get:
      operationId: plugins_retrieve
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
    patch:
      operationId: plugins_partial_update
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
    put:
      operationId: plugins_update
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/check_for_updates/:
    get:
      operationId: plugins_check_for_updates_retrieve
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/source/:
    get:
      operationId: plugins_source_retrieve
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/update_source/:
    patch:
      operationId: plugins_update_source_partial_update
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/{id}/upgrade/:
    post:
      operationId: plugins_upgrade_create
      parameters:
      - description: A unique integer value identifying this plugin.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plugin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plugin'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/activity/:
    get:
      operationId: plugins_activity_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/repository/:
    get:
      operationId: plugins_repository_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/plugins/unused/:
    get:
      operationId: plugins_unused_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: ""
      tags:
      - organizations
      - plugins
  /api/organizations/{parent_lookup_organization_id}/resource_access/:
    get:
      operationId: resource_access_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationResourceAccessList'
          description: ""
      tags:
      - organizations
      - resource_access
    post:
      operationId: resource_access_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationResourceAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationResourceAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationResourceAccess'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResourceAccess'
          description: ""
      tags:
      - organizations
      - resource_access
  /api/organizations/{parent_lookup_organization_id}/resource_access/{id}/:
    delete:
      operationId: resource_access_destroy
      parameters:
      - description: A unique integer value identifying this organization resource
          access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - resource_access
    get:
      operationId: resource_access_retrieve
      parameters:
      - description: A unique integer value identifying this organization resource
          access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResourceAccess'
          description: ""
      tags:
      - organizations
      - resource_access
    patch:
      operationId: resource_access_partial_update
      parameters:
      - description: A unique integer value identifying this organization resource
          access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationResourceAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationResourceAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationResourceAccess'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResourceAccess'
          description: ""
      tags:
      - organizations
      - resource_access
    put:
      operationId: resource_access_update
      parameters:
      - description: A unique integer value identifying this organization resource
          access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationResourceAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationResourceAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationResourceAccess'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResourceAccess'
          description: ""
      tags:
      - organizations
      - resource_access
  /api/organizations/{parent_lookup_organization_id}/roles/:
    get:
      operationId: roles_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ""
      tags:
      - organizations
      - roles
    post:
      operationId: roles_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
      tags:
      - organizations
      - roles
  /api/organizations/{parent_lookup_organization_id}/roles/{parent_lookup_role_id}/role_memberships/:
    get:
      operationId: roles_role_memberships_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_role_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleMembershipList'
          description: ""
      tags:
      - organizations
      - roles
    post:
      operationId: roles_role_memberships_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_role_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleMembership'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMembership'
          description: ""
      tags:
      - organizations
      - roles
  /api/organizations/{parent_lookup_organization_id}/roles/{parent_lookup_role_id}/role_memberships/{id}/:
    delete:
      operationId: roles_role_memberships_destroy
      parameters:
      - description: A UUID string identifying this role membership.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_role_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - roles
  /api/organizations/{parent_lookup_organization_id}/roles/{id}/:
    delete:
      operationId: roles_destroy
      parameters:
      - description: A UUID string identifying this role.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - organizations
      - roles
    get:
      operationId: roles_retrieve
      parameters:
      - description: A UUID string identifying this role.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
      tags:
      - organizations
      - roles
    patch:
      operationId: roles_partial_update
      parameters:
      - description: A UUID string identifying this role.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRole'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
      tags:
      - organizations
      - roles
    put:
      operationId: roles_update
      parameters:
      - description: A UUID string identifying this role.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_organization_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ""
      tags:
      - organizations
      - roles
  /api/projects/:
    get:
      description: Projects for the current organization.
      operationId: list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamBasicList'
          description: ""
      tags:
      - projects
    post:
      description: Projects for the current organization.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ""
      tags:
      - projects
  /api/projects/{id}/:
    delete:
      description: Projects for the current organization.
      operationId: destroy
      parameters:
      - description: A unique integer value identifying this team.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - projects
    get:
      description: Projects for the current organization.
      operationId: retrieve
      parameters:
      - description: A unique integer value identifying this team.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ""
      tags:
      - projects
    patch:
      description: Projects for the current organization.
      operationId: partial_update
      parameters:
      - description: A unique integer value identifying this team.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ""
      tags:
      - projects
    put:
      description: Projects for the current organization.
      operationId: update
      parameters:
      - description: A unique integer value identifying this team.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ""
      tags:
      - projects
  /api/projects/{id}/is_generating_demo_data/:
    get:
      description: Projects for the current organization.
      operationId: is_generating_demo_data_retrieve
      parameters:
      - description: A unique integer value identifying this team.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ""
      tags:
      - is_generating_demo_data
  /api/projects/{id}/reset_token/:
    patch:
      description: Projects for the current organization.
      operationId: reset_token_partial_update
      parameters:
      - description: A unique integer value identifying this team.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ""
      tags:
      - reset_token
  /api/projects/{project_id}/actions/:
    get:
      operationId: actions_list
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
          description: ""
      tags:
      - actions
    post:
      operationId: actions_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ""
      tags:
      - actions
  /api/projects/{project_id}/actions/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: actions_destroy
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - actions
    get:
      operationId: actions_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ""
      tags:
      - actions
    patch:
      operationId: actions_partial_update
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAction'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ""
      tags:
      - actions
    put:
      operationId: actions_update
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Action'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ""
      tags:
      - actions
  /api/projects/{project_id}/actions/{id}/count/:
    get:
      operationId: actions_count_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ""
      tags:
      - actions
  /api/projects/{project_id}/actions/people/:
    get:
      operationId: actions_people_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
            text/csv:
              schema:
                $ref: '#/components/schemas/Action'
          description: ""
      tags:
      - actions
  /api/projects/{project_id}/activity_log/bookmark_activity_notification/:
    post:
      operationId: activity_log_bookmark_activity_notification_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityLog'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLog'
          description: ""
      tags:
      - activity_log
  /api/projects/{project_id}/activity_log/important_changes/:
    get:
      operationId: activity_log_important_changes_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLog'
          description: ""
      tags:
      - activity_log
  /api/projects/{project_id}/annotations/:
    get:
      description: "Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)\
        \ for more information on annotations."
      operationId: annotations_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnotationList'
          description: ""
      tags:
      - annotations
    post:
      description: "Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)\
        \ for more information on annotations."
      operationId: annotations_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - annotations
  /api/projects/{project_id}/annotations/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: annotations_destroy
      parameters:
      - description: A unique integer value identifying this annotation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - annotations
    get:
      description: "Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)\
        \ for more information on annotations."
      operationId: annotations_retrieve
      parameters:
      - description: A unique integer value identifying this annotation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - annotations
    patch:
      description: "Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)\
        \ for more information on annotations."
      operationId: annotations_partial_update
      parameters:
      - description: A unique integer value identifying this annotation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnotation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - annotations
    put:
      description: "Create, Read, Update and Delete annotations. [See docs](https://posthog.com/docs/user-guides/annotations)\
        \ for more information on annotations."
      operationId: annotations_update
      parameters:
      - description: A unique integer value identifying this annotation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ""
      tags:
      - annotations
  /api/projects/{project_id}/app_metrics/{parent_lookup_plugin_config_id}/historical_exports/:
    get:
      operationId: app_metrics_historical_exports_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_lookup_plugin_config_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - app_metrics
  /api/projects/{project_id}/app_metrics/{parent_lookup_plugin_config_id}/historical_exports/{id}/:
    get:
      operationId: app_metrics_historical_exports_retrieve_2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_plugin_config_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - app_metrics
  /api/projects/{project_id}/app_metrics/{id}/:
    get:
      operationId: app_metrics_retrieve
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - app_metrics
  /api/projects/{project_id}/app_metrics/{id}/error_details/:
    get:
      operationId: app_metrics_error_details_retrieve
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - app_metrics
  /api/projects/{project_id}/batch_exports/:
    get:
      operationId: batch_exports_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportList'
          description: ""
      tags:
      - batch_exports
    post:
      operationId: batch_exports_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{parent_lookup_batch_export_id}/logs/:
    get:
      operationId: batch_exports_logs_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_batch_export_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportLogEntryList'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{parent_lookup_batch_export_id}/runs/:
    get:
      description: Get all BatchExportRuns for a BatchExport.
      operationId: batch_exports_runs_list
      parameters:
      - description: The pagination cursor value.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: parent_lookup_batch_export_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportRunList'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{parent_lookup_batch_export_id}/runs/{parent_lookup_run_id}/logs/:
    get:
      operationId: batch_exports_runs_logs_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_batch_export_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBatchExportLogEntryList'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{parent_lookup_batch_export_id}/runs/{id}/:
    get:
      operationId: batch_exports_runs_retrieve
      parameters:
      - description: A UUID string identifying this batch export run.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: parent_lookup_batch_export_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExportRun'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{id}/:
    delete:
      operationId: batch_exports_destroy
      parameters:
      - description: A UUID string identifying this batch export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - batch_exports
    get:
      operationId: batch_exports_retrieve
      parameters:
      - description: A UUID string identifying this batch export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
          description: ""
      tags:
      - batch_exports
    patch:
      operationId: batch_exports_partial_update
      parameters:
      - description: A UUID string identifying this batch export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBatchExport'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
          description: ""
      tags:
      - batch_exports
    put:
      operationId: batch_exports_update
      parameters:
      - description: A UUID string identifying this batch export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{id}/backfill/:
    post:
      description: Trigger a backfill for a BatchExport.
      operationId: batch_exports_backfill_create
      parameters:
      - description: A UUID string identifying this batch export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{id}/pause/:
    post:
      description: Pause a BatchExport.
      operationId: batch_exports_pause_create
      parameters:
      - description: A UUID string identifying this batch export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/batch_exports/{id}/unpause/:
    post:
      description: Unpause a BatchExport.
      operationId: batch_exports_unpause_create
      parameters:
      - description: A UUID string identifying this batch export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchExport'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchExport'
          description: ""
      tags:
      - batch_exports
  /api/projects/{project_id}/cohorts/:
    get:
      operationId: cohorts_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCohortList'
          description: ""
      tags:
      - cohorts
    post:
      operationId: cohorts_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cohort'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
          description: ""
      tags:
      - cohorts
  /api/projects/{project_id}/cohorts/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: cohorts_destroy
      parameters:
      - description: A unique integer value identifying this cohort.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - cohorts
    get:
      operationId: cohorts_retrieve
      parameters:
      - description: A unique integer value identifying this cohort.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
          description: ""
      tags:
      - cohorts
    patch:
      operationId: cohorts_partial_update
      parameters:
      - description: A unique integer value identifying this cohort.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCohort'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
          description: ""
      tags:
      - cohorts
    put:
      operationId: cohorts_update
      parameters:
      - description: A unique integer value identifying this cohort.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cohort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cohort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cohort'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
          description: ""
      tags:
      - cohorts
  /api/projects/{project_id}/cohorts/{id}/duplicate_as_static_cohort/:
    get:
      operationId: cohorts_duplicate_as_static_cohort_retrieve
      parameters:
      - description: A unique integer value identifying this cohort.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
          description: ""
      tags:
      - cohorts
  /api/projects/{project_id}/cohorts/{id}/persons/:
    get:
      operationId: cohorts_persons_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this cohort.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cohort'
          description: ""
      tags:
      - cohorts
  /api/projects/{project_id}/dashboard_templates/:
    get:
      operationId: dashboard_templates_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardTemplateList'
          description: ""
      tags:
      - dashboard_templates
    post:
      operationId: dashboard_templates_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
          description: ""
      tags:
      - dashboard_templates
  /api/projects/{project_id}/dashboard_templates/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: dashboard_templates_destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - dashboard_templates
    get:
      operationId: dashboard_templates_retrieve
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
          description: ""
      tags:
      - dashboard_templates
    patch:
      operationId: dashboard_templates_partial_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDashboardTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDashboardTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDashboardTemplate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
          description: ""
      tags:
      - dashboard_templates
    put:
      operationId: dashboard_templates_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DashboardTemplate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
          description: ""
      tags:
      - dashboard_templates
  /api/projects/{project_id}/dashboard_templates/json_schema/:
    get:
      operationId: dashboard_templates_json_schema_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTemplate'
          description: ""
      tags:
      - dashboard_templates
  /api/projects/{project_id}/dashboards/:
    get:
      operationId: dashboards_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardBasicList'
          description: ""
      tags:
      - dashboards
    post:
      operationId: dashboards_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ""
      tags:
      - dashboards
  /api/projects/{project_id}/dashboards/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: dashboards_destroy
      parameters:
      - description: A unique integer value identifying this dashboard.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - dashboards
    get:
      operationId: dashboards_retrieve
      parameters:
      - description: A unique integer value identifying this dashboard.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ""
      tags:
      - dashboards
    patch:
      operationId: dashboards_partial_update
      parameters:
      - description: A unique integer value identifying this dashboard.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ""
      tags:
      - dashboards
    put:
      operationId: dashboards_update
      parameters:
      - description: A unique integer value identifying this dashboard.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ""
      tags:
      - dashboards
  /api/projects/{project_id}/dashboards/{id}/move_tile/:
    patch:
      operationId: dashboards_move_tile_partial_update
      parameters:
      - description: A unique integer value identifying this dashboard.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDashboard'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ""
      tags:
      - dashboards
  /api/projects/{project_id}/dashboards/create_from_template_json/:
    post:
      operationId: dashboards_create_from_template_json_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ""
      tags:
      - dashboards
  /api/projects/{project_id}/data_management/activity/:
    get:
      operationId: data_management_activity_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - data_management
  /api/projects/{project_id}/early_access_feature/:
    get:
      operationId: early_access_feature_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEarlyAccessFeatureList'
          description: ""
      tags:
      - early_access_feature
    post:
      operationId: early_access_feature_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeatureSerializerCreateOnly'
          description: ""
      tags:
      - early_access_feature
  /api/projects/{project_id}/early_access_feature/{id}/:
    delete:
      operationId: early_access_feature_destroy
      parameters:
      - description: A UUID string identifying this early access feature.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - early_access_feature
    get:
      operationId: early_access_feature_retrieve
      parameters:
      - description: A UUID string identifying this early access feature.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeature'
          description: ""
      tags:
      - early_access_feature
    patch:
      operationId: early_access_feature_partial_update
      parameters:
      - description: A UUID string identifying this early access feature.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEarlyAccessFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEarlyAccessFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEarlyAccessFeature'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeature'
          description: ""
      tags:
      - early_access_feature
    put:
      operationId: early_access_feature_update
      parameters:
      - description: A UUID string identifying this early access feature.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EarlyAccessFeature'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarlyAccessFeature'
          description: ""
      tags:
      - early_access_feature
  /api/projects/{project_id}/event_definitions/:
    get:
      operationId: event_definitions_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnterpriseEventDefinitionList'
          description: ""
      tags:
      - event_definitions
  /api/projects/{project_id}/event_definitions/{id}/:
    delete:
      operationId: event_definitions_destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - event_definitions
    get:
      operationId: event_definitions_retrieve
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseEventDefinition'
          description: ""
      tags:
      - event_definitions
    patch:
      operationId: event_definitions_partial_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseEventDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseEventDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnterpriseEventDefinition'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseEventDefinition'
          description: ""
      tags:
      - event_definitions
    put:
      operationId: event_definitions_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseEventDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnterpriseEventDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnterpriseEventDefinition'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseEventDefinition'
          description: ""
      tags:
      - event_definitions
  /api/projects/{project_id}/events/:
    get:
      operationId: events_list
      parameters:
      - description: Only return events with a timestamp after this time.
        explode: true
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return events with a timestamp before this time.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter list by distinct id.
        explode: true
        in: query
        name: distinct_id
        required: false
        schema:
          type: integer
        style: form
      - description: Filter list by event. For example `user sign up` or `$pageview`.
        explode: true
        in: query
        name: event
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: The maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Filter list by person id.
        explode: true
        in: query
        name: person_id
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter events by event property, person property, cohort, groups\
          \ and more."
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Property'
          type: array
        style: form
      - description: (Experimental) JSON-serialized array of HogQL expressions to
          return
        explode: true
        in: query
        name: select
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: (Experimental) JSON-serialized array of HogQL expressions that
          must pass
        explode: true
        in: query
        name: where
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClickhouseEventList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedClickhouseEventList'
          description: ""
      tags:
      - events
  /api/projects/{project_id}/events/{id}/:
    get:
      operationId: events_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
          description: ""
      tags:
      - events
  /api/projects/{project_id}/events/values/:
    get:
      operationId: events_values_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
            text/csv:
              schema:
                $ref: '#/components/schemas/ClickhouseEvent'
          description: ""
      tags:
      - events
  /api/projects/{project_id}/experiments/:
    get:
      operationId: experiments_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperimentList'
          description: ""
      tags:
      - experiments
    post:
      operationId: experiments_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ""
      tags:
      - experiments
  /api/projects/{project_id}/experiments/{id}/:
    delete:
      operationId: experiments_destroy
      parameters:
      - description: A unique integer value identifying this experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - experiments
    get:
      operationId: experiments_retrieve
      parameters:
      - description: A unique integer value identifying this experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ""
      tags:
      - experiments
    patch:
      operationId: experiments_partial_update
      parameters:
      - description: A unique integer value identifying this experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperiment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ""
      tags:
      - experiments
    put:
      operationId: experiments_update
      parameters:
      - description: A unique integer value identifying this experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experiment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experiment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ""
      tags:
      - experiments
  /api/projects/{project_id}/experiments/{id}/results/:
    get:
      operationId: experiments_results_retrieve
      parameters:
      - description: A unique integer value identifying this experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ""
      tags:
      - experiments
  /api/projects/{project_id}/experiments/{id}/secondary_results/:
    get:
      operationId: experiments_secondary_results_retrieve
      parameters:
      - description: A unique integer value identifying this experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ""
      tags:
      - experiments
  /api/projects/{project_id}/experiments/requires_flag_implementation/:
    get:
      operationId: experiments_requires_flag_implementation_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
          description: ""
      tags:
      - experiments
  /api/projects/{project_id}/explicit_members/:
    get:
      operationId: explicit_members_list
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExplicitTeamMember'
                type: array
          description: ""
      tags:
      - explicit_members
    post:
      operationId: explicit_members_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
          description: ""
      tags:
      - explicit_members
  /api/projects/{project_id}/explicit_members/{parent_membership__user__uuid}/:
    delete:
      operationId: explicit_members_destroy
      parameters:
      - explode: false
        in: path
        name: parent_membership__user__uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - explicit_members
    get:
      operationId: explicit_members_retrieve
      parameters:
      - explode: false
        in: path
        name: parent_membership__user__uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
          description: ""
      tags:
      - explicit_members
    patch:
      operationId: explicit_members_partial_update
      parameters:
      - explode: false
        in: path
        name: parent_membership__user__uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExplicitTeamMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExplicitTeamMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExplicitTeamMember'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
          description: ""
      tags:
      - explicit_members
    put:
      operationId: explicit_members_update
      parameters:
      - explode: false
        in: path
        name: parent_membership__user__uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExplicitTeamMember'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitTeamMember'
          description: ""
      tags:
      - explicit_members
  /api/projects/{project_id}/exports/:
    post:
      operationId: exports_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExportedAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExportedAsset'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedAsset'
          description: ""
      tags:
      - exports
  /api/projects/{project_id}/exports/{id}/:
    get:
      operationId: exports_retrieve
      parameters:
      - description: A unique integer value identifying this exported asset.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedAsset'
          description: ""
      tags:
      - exports
  /api/projects/{project_id}/exports/{id}/content/:
    get:
      operationId: exports_content_retrieve
      parameters:
      - description: A unique integer value identifying this exported asset.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedAsset'
          description: ""
      tags:
      - exports
  /api/projects/{project_id}/external_data_sources/:
    get:
      description: "Create, Read, Update and Delete External data Sources."
      operationId: external_data_sources_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExternalDataSourceSerializersList'
          description: ""
      tags:
      - external_data_sources
    post:
      description: "Create, Read, Update and Delete External data Sources."
      operationId: external_data_sources_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDataSourceSerializers'
          description: ""
      tags:
      - external_data_sources
  /api/projects/{project_id}/external_data_sources/{id}/:
    delete:
      description: "Create, Read, Update and Delete External data Sources."
      operationId: external_data_sources_destroy
      parameters:
      - description: A UUID string identifying this external data source.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - external_data_sources
    get:
      description: "Create, Read, Update and Delete External data Sources."
      operationId: external_data_sources_retrieve
      parameters:
      - description: A UUID string identifying this external data source.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDataSourceSerializers'
          description: ""
      tags:
      - external_data_sources
    patch:
      description: "Create, Read, Update and Delete External data Sources."
      operationId: external_data_sources_partial_update
      parameters:
      - description: A UUID string identifying this external data source.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExternalDataSourceSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExternalDataSourceSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExternalDataSourceSerializers'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDataSourceSerializers'
          description: ""
      tags:
      - external_data_sources
    put:
      description: "Create, Read, Update and Delete External data Sources."
      operationId: external_data_sources_update
      parameters:
      - description: A UUID string identifying this external data source.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDataSourceSerializers'
          description: ""
      tags:
      - external_data_sources
  /api/projects/{project_id}/external_data_sources/{id}/reload/:
    post:
      description: "Create, Read, Update and Delete External data Sources."
      operationId: external_data_sources_reload_create
      parameters:
      - description: A UUID string identifying this external data source.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalDataSourceSerializers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDataSourceSerializers'
          description: ""
      tags:
      - external_data_sources
  /api/projects/{project_id}/feature_flags/:
    get:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureFlagList'
          description: ""
      tags:
      - feature_flags
    post:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/{parent_lookup_feature_flag_id}/role_access/:
    get:
      operationId: feature_flags_role_access_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_feature_flag_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureFlagRoleAccessList'
          description: ""
      tags:
      - feature_flags
    post:
      operationId: feature_flags_role_access_create
      parameters:
      - explode: false
        in: path
        name: parent_lookup_feature_flag_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlagRoleAccess'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlagRoleAccess'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlagRoleAccess'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagRoleAccess'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/{parent_lookup_feature_flag_id}/role_access/{id}/:
    delete:
      operationId: feature_flags_role_access_destroy
      parameters:
      - description: A unique integer value identifying this feature flag role access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_feature_flag_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - feature_flags
    get:
      operationId: feature_flags_role_access_retrieve
      parameters:
      - description: A unique integer value identifying this feature flag role access.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: parent_lookup_feature_flag_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagRoleAccess'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: feature_flags_destroy
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - feature_flags
    get:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_retrieve_2
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
    patch:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_partial_update
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeatureFlag'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
    put:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_update
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/{id}/activity/:
    get:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_activity_retrieve_2
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/{id}/create_static_cohort_for_flag/:
    post:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_create_static_cohort_for_flag_create
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/{id}/dashboard/:
    post:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_dashboard_create
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/{id}/enrich_usage_dashboard/:
    post:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_enrich_usage_dashboard_create
      parameters:
      - description: A unique integer value identifying this feature flag.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/activity/:
    get:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_activity_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/evaluation_reasons/:
    get:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_evaluation_reasons_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/local_evaluation/:
    get:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_local_evaluation_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/my_flags/:
    get:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_my_flags_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/feature_flags/user_blast_radius/:
    post:
      description: |-
        Create, read, update and delete feature flags. [See docs](https://posthog.com/docs/user-guides/feature-flags) for more information on feature flags.

        If you're looking to use feature flags on your application, you can either use our JavaScript Library or our dedicated endpoint to check if feature flags are enabled for a given user.
      operationId: feature_flags_user_blast_radius_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeatureFlag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: ""
      tags:
      - feature_flags
  /api/projects/{project_id}/groups/:
    get:
      description: "List all groups of a specific group type. You must pass ?group_type_index=\
        \ in the URL. To get a list of valid group types, call /api/:project_id/groups_types/"
      operationId: groups_list
      parameters:
      - description: The pagination cursor value.
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Specify the group type to list
        explode: true
        in: query
        name: group_type_index
        required: true
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Search the group name
        explode: true
        in: query
        name: search
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ""
      tags:
      - groups
  /api/projects/{project_id}/groups/find/:
    get:
      operationId: groups_find_retrieve
      parameters:
      - description: Specify the key of the group to find
        explode: true
        in: query
        name: group_key
        required: true
        schema:
          type: string
        style: form
      - description: Specify the group type to find
        explode: true
        in: query
        name: group_type_index
        required: true
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
      tags:
      - groups
  /api/projects/{project_id}/groups/property_definitions/:
    get:
      operationId: groups_property_definitions_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
      tags:
      - groups
  /api/projects/{project_id}/groups/property_values/:
    get:
      operationId: groups_property_values_retrieve
      parameters:
      - description: Specify the group type to find property values of
        explode: true
        in: query
        name: group_type_index
        required: true
        schema:
          type: integer
        style: form
      - description: Specify the property key to find values for
        explode: true
        in: query
        name: key
        required: true
        schema:
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
      tags:
      - groups
  /api/projects/{project_id}/groups/related/:
    get:
      operationId: groups_related_retrieve
      parameters:
      - description: Specify the group type to find
        explode: true
        in: query
        name: group_type_index
        required: true
        schema:
          type: integer
        style: form
      - description: Specify the id of the user to find groups for
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ""
      tags:
      - groups
  /api/projects/{project_id}/groups_types/:
    get:
      operationId: groups_types_list
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupType'
                type: array
          description: ""
      tags:
      - groups_types
  /api/projects/{project_id}/groups_types/update_metadata/:
    patch:
      operationId: groups_types_update_metadata_partial_update
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupType'
          description: ""
      tags:
      - groups_types
  /api/projects/{project_id}/hooks/:
    get:
      description: "Retrieve, create, update or destroy REST hooks."
      operationId: hooks_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHookList'
          description: ""
      tags:
      - hooks
    post:
      description: "Retrieve, create, update or destroy REST hooks."
      operationId: hooks_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hook'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ""
      tags:
      - hooks
  /api/projects/{project_id}/hooks/{id}/:
    delete:
      description: "Retrieve, create, update or destroy REST hooks."
      operationId: hooks_destroy
      parameters:
      - description: A unique value identifying this hook.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - hooks
    get:
      description: "Retrieve, create, update or destroy REST hooks."
      operationId: hooks_retrieve
      parameters:
      - description: A unique value identifying this hook.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ""
      tags:
      - hooks
    patch:
      description: "Retrieve, create, update or destroy REST hooks."
      operationId: hooks_partial_update
      parameters:
      - description: A unique value identifying this hook.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHook'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ""
      tags:
      - hooks
    put:
      description: "Retrieve, create, update or destroy REST hooks."
      operationId: hooks_update
      parameters:
      - description: A unique value identifying this hook.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: ""
      tags:
      - hooks
  /api/projects/{project_id}/ingestion_warnings/:
    get:
      operationId: ingestion_warnings_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - ingestion_warnings
  /api/projects/{project_id}/insights/:
    get:
      operationId: insights_list
      parameters:
      - explode: true
        in: query
        name: created_by
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: short_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInsightList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedInsightList'
          description: ""
      tags:
      - insights
    post:
      operationId: insights_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: insights_destroy
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this insight.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - insights
    get:
      operationId: insights_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: |2-

          When loading an insight for a dashboard pass a `from_dashboard` query parameter containing the dashboard ID

          e.g. `"/api/projects/{team_id}/insights/{insight_id}?from_dashboard={dashboard_id}"`

          Insights can be added to more than one dashboard, this allows the insight to be loaded in the correct context.

          Using the correct cache and enriching the response with dashboard specific config (e.g. layouts or colors)
        explode: true
        in: query
        name: from_dashboard
        required: false
        schema:
          type: integer
        style: form
      - description: A unique integer value identifying this insight.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: |2-

                          The client can request that an insight be refreshed by setting the `refresh=true` parameter.
                          The server will then decide if the data should or not be refreshed based on a set of heuristics
                          meant to determine the staleness of cached data. The result will contain as `is_cached` field
                          that indicates whether the insight was actually refreshed or not through the request.
        explode: true
        in: query
        name: refresh
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
    patch:
      operationId: insights_partial_update
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this insight.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInsight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
    put:
      operationId: insights_update
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this insight.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/{id}/activity/:
    get:
      operationId: insights_activity_retrieve_2
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this insight.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/{id}/viewed/:
    post:
      operationId: insights_viewed_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this insight.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/activity/:
    get:
      operationId: insights_activity_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/cancel/:
    post:
      operationId: insights_cancel_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/funnel/:
    get:
      operationId: insights_funnel_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
    post:
      operationId: Funnels
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funnel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunnelStepsResults'
            text/csv:
              schema:
                $ref: '#/components/schemas/FunnelStepsResults'
          description: "Note, if funnel_viz_type is set the response will be different."
      tags:
      - funnel
      - insights
  /api/projects/{project_id}/insights/funnel/correlation/:
    get:
      operationId: insights_funnel_correlation_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
    post:
      operationId: insights_funnel_correlation_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/my_last_viewed/:
    get:
      description: Returns basic details about the last 5 insights viewed by this
        user. Most recently viewed first.
      operationId: insights_my_last_viewed_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/path/:
    get:
      operationId: insights_path_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
    post:
      operationId: insights_path_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/retention/:
    get:
      operationId: insights_retention_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/timing/:
    post:
      operationId: insights_timing_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
  /api/projects/{project_id}/insights/trend/:
    get:
      operationId: insights_trend_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
            text/csv:
              schema:
                $ref: '#/components/schemas/Insight'
          description: ""
      tags:
      - insights
    post:
      operationId: Trends
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trend'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendResults'
            text/csv:
              schema:
                $ref: '#/components/schemas/TrendResults'
          description: ""
      tags:
      - trend
      - insights
  /api/projects/{project_id}/integrations/:
    get:
      operationId: integrations_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntegrationList'
          description: ""
      tags:
      - integrations
    post:
      operationId: integrations_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Integration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Integration'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ""
      tags:
      - integrations
  /api/projects/{project_id}/integrations/{id}/:
    delete:
      operationId: integrations_destroy
      parameters:
      - description: A unique integer value identifying this integration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - integrations
    get:
      operationId: integrations_retrieve
      parameters:
      - description: A unique integer value identifying this integration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ""
      tags:
      - integrations
  /api/projects/{project_id}/integrations/{id}/channels/:
    get:
      operationId: integrations_channels_retrieve
      parameters:
      - description: A unique integer value identifying this integration.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ""
      tags:
      - integrations
  /api/projects/{project_id}/persons/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_list
      parameters:
      - description: Filter list by distinct id.
        explode: true
        in: query
        name: distinct_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter persons by email (exact match)
        examples:
          Email:
            summary: email
            value: test@test.com
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter Persons by person properties.
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Property'
          type: array
        style: form
      - description: "Search persons, either by email (full text search) or distinct_id\
          \ (exact match)."
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/{id}/:
    delete:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_destroy
      parameters:
      - description: "If true, a task to delete all events associated with this person\
          \ will be created and queued. The task does not run immediately and instead\
          \ is batched together and at 5AM UTC every Sunday (controlled by environment\
          \ variable CLEAR_CLICKHOUSE_REMOVED_DATA_SCHEDULE_CRON)"
        explode: true
        in: query
        name: delete_events
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - persons
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
    patch:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_partial_update
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPerson'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
    put:
      description: |-
        Only for setting properties on the person. "properties" from the request data will be updated via a "$set" event.
        This means that only the properties listed will be updated, but other properties won't be removed nor updated.
        If you would like to remove a property use the `delete_property` endpoint.
      operationId: persons_update
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/{id}/activity/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_activity_retrieve_2
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/{id}/delete_property/:
    post:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_delete_property_create
      parameters:
      - description: Specify the property key to delete
        explode: true
        in: query
        name: $unset
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/{id}/properties_timeline/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_properties_timeline_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/{id}/split/:
    post:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_split_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/{id}/update_property/:
    post:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_update_property_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: A unique integer value identifying this person.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Specify the property key
        explode: true
        in: query
        name: key
        required: true
        schema:
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Specify the property value
        explode: true
        in: query
        name: value
        required: true
        schema: {}
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/activity/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_activity_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/cohorts/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_cohorts_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/funnel/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_funnel_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
    post:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_funnel_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/funnel/correlation/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_funnel_correlation_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
    post:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_funnel_correlation_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/lifecycle/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_lifecycle_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/path/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_path_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
    post:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_path_create
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Person'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/retention/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_retention_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/stickiness/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_stickiness_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/trends/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_trends_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/persons/values/:
    get:
      description: "To create or update persons, use a PostHog library of your choice\
        \ and [use an identify call](/docs/integrate/identifying-users). This API\
        \ endpoint is only for reading and deleting."
      operationId: persons_values_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - csv
          - json
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            text/csv:
              schema:
                $ref: '#/components/schemas/Person'
          description: ""
      tags:
      - persons
  /api/projects/{project_id}/pipeline_transformations_configs/:
    get:
      operationId: pipeline_transformations_configs_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
          description: ""
      tags:
      - pipeline_transformations_configs
    post:
      operationId: pipeline_transformations_configs_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - pipeline_transformations_configs
  /api/projects/{project_id}/pipeline_transformations_configs/{id}/:
    delete:
      operationId: pipeline_transformations_configs_destroy
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - pipeline_transformations_configs
    get:
      operationId: pipeline_transformations_configs_retrieve
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - pipeline_transformations_configs
    patch:
      operationId: pipeline_transformations_configs_partial_update
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - pipeline_transformations_configs
    put:
      operationId: pipeline_transformations_configs_update
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - pipeline_transformations_configs
  /api/projects/{project_id}/pipeline_transformations_configs/{id}/frontend/:
    get:
      operationId: pipeline_transformations_configs_frontend_retrieve
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - pipeline_transformations_configs
  /api/projects/{project_id}/pipeline_transformations_configs/{id}/job/:
    post:
      operationId: pipeline_transformations_configs_job_create
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - pipeline_transformations_configs
  /api/projects/{project_id}/pipeline_transformations_configs/rearrange/:
    patch:
      operationId: pipeline_transformations_configs_rearrange_partial_update
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - pipeline_transformations_configs
  /api/projects/{project_id}/plugin_configs/:
    get:
      operationId: plugin_configs_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginConfigList'
          description: ""
      tags:
      - plugin_configs
    post:
      operationId: plugin_configs_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - plugin_configs
  /api/projects/{project_id}/plugin_configs/{parent_lookup_plugin_config_id}/logs/:
    get:
      operationId: plugin_configs_logs_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: parent_lookup_plugin_config_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPluginLogEntryList'
          description: ""
      tags:
      - plugin_configs
  /api/projects/{project_id}/plugin_configs/{id}/:
    delete:
      operationId: plugin_configs_destroy
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - plugin_configs
    get:
      operationId: plugin_configs_retrieve
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - plugin_configs
    patch:
      operationId: plugin_configs_partial_update
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - plugin_configs
    put:
      operationId: plugin_configs_update
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - plugin_configs
  /api/projects/{project_id}/plugin_configs/{id}/frontend/:
    get:
      operationId: plugin_configs_frontend_retrieve
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - plugin_configs
  /api/projects/{project_id}/plugin_configs/{id}/job/:
    post:
      operationId: plugin_configs_job_create
      parameters:
      - description: A unique integer value identifying this plugin config.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PluginConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - plugin_configs
  /api/projects/{project_id}/plugin_configs/rearrange/:
    patch:
      operationId: plugin_configs_rearrange_partial_update
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPluginConfig'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
          description: ""
      tags:
      - plugin_configs
  /api/projects/{project_id}/property_definitions/:
    get:
      operationId: property_definitions_list
      parameters:
      - description: "If sent, response value will have `is_seen_on_filtered_events`\
          \ populated. JSON-encoded"
        explode: true
        in: query
        name: event_names
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: JSON-encoded list of excluded properties
        explode: true
        in: query
        name: excluded_properties
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Whether to return only properties for events in `event_names`
        explode: true
        in: query
        name: filter_by_event_names
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: What group type is the property for. Only should be set if `type=group`
        explode: true
        in: query
        name: group_type_index
        required: false
        schema:
          type: integer
        style: form
      - description: Whether to return only (or excluding) feature flag properties
        explode: true
        in: query
        name: is_feature_flag
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Whether to return only (or excluding) numerical property definitions
        explode: true
        in: query
        name: is_numerical
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of properties to filter
        explode: true
        in: query
        name: properties
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Searches properties by name
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: What property definitions to return
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: event
          enum:
          - event
          - person
          - group
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnterprisePropertyDefinitionList'
          description: ""
      tags:
      - property_definitions
  /api/projects/{project_id}/property_definitions/{id}/:
    delete:
      operationId: property_definitions_destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - property_definitions
    get:
      operationId: property_definitions_retrieve
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePropertyDefinition'
          description: ""
      tags:
      - property_definitions
    patch:
      operationId: property_definitions_partial_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnterprisePropertyDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnterprisePropertyDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnterprisePropertyDefinition'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePropertyDefinition'
          description: ""
      tags:
      - property_definitions
    put:
      operationId: property_definitions_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterprisePropertyDefinition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnterprisePropertyDefinition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnterprisePropertyDefinition'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePropertyDefinition'
          description: ""
      tags:
      - property_definitions
  /api/projects/{project_id}/property_definitions/seen_together/:
    get:
      description: |-
        Allows a caller to provide a list of event names and a single property name
        Returns a map of the event names to a boolean representing whether that property has ever been seen with that event_name
      operationId: property_definitions_seen_together_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterprisePropertyDefinition'
          description: ""
      tags:
      - property_definitions
  /api/projects/{project_id}/query/:
    post:
      operationId: query_create
      parameters:
      - description: "(Experimental) Whether to run the query asynchronously. Defaults\
          \ to False. If True, the `id` of the query can be used to check the status\
          \ and to cancel it."
        explode: true
        in: query
        name: async
        required: false
        schema:
          type: boolean
        style: form
      - description: Client provided query ID. Can be used to retrieve the status
          or cancel the query.
        explode: true
        in: query
        name: client_query_id
        required: false
        schema:
          type: string
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Submit a JSON string representing a query for PostHog data analysis,\
          \ for example a HogQL query.\n\nExample payload:\n```\n{\"query\": {\"kind\"\
          : \"HogQLQuery\", \"query\": \"select * from events limit 100\"}}\n```\n\
          \nFor more details on HogQL queries, see the [PostHog HogQL documentation](/docs/hogql#api-access). "
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Query results
      tags:
      - query
  /api/projects/{project_id}/query/{id}/:
    delete:
      description: (Experimental)
      operationId: query_destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - query
    get:
      description: (Experimental)
      operationId: query_retrieve
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Query status
      tags:
      - query
  /api/projects/{project_id}/query/draft_sql/:
    get:
      operationId: query_draft_sql_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - query
  /api/projects/{project_id}/search/:
    get:
      operationId: search_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      tags:
      - search
  /api/projects/{project_id}/session_recording_playlists/:
    get:
      operationId: session_recording_playlists_list
      parameters:
      - explode: true
        in: query
        name: created_by
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: short_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSessionRecordingPlaylistList'
          description: ""
      tags:
      - session_recording_playlists
    post:
      operationId: session_recording_playlists_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
          description: ""
      tags:
      - session_recording_playlists
  /api/projects/{project_id}/session_recording_playlists/{short_id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: session_recording_playlists_destroy
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: short_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - session_recording_playlists
    get:
      operationId: session_recording_playlists_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: short_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
          description: ""
      tags:
      - session_recording_playlists
    patch:
      operationId: session_recording_playlists_partial_update
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: short_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSessionRecordingPlaylist'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
          description: ""
      tags:
      - session_recording_playlists
    put:
      operationId: session_recording_playlists_update
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: short_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
          description: ""
      tags:
      - session_recording_playlists
  /api/projects/{project_id}/session_recording_playlists/{short_id}/recordings/:
    get:
      operationId: session_recording_playlists_recordings_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: short_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
          description: ""
      tags:
      - session_recording_playlists
  /api/projects/{project_id}/session_recording_playlists/{short_id}/recordings/{session_recording_id}/:
    delete:
      operationId: session_recording_playlists_recordings_destroy
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: session_recording_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: short_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - session_recording_playlists
    post:
      operationId: session_recording_playlists_recordings_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: session_recording_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: short_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecordingPlaylist'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingPlaylist'
          description: ""
      tags:
      - session_recording_playlists
  /api/projects/{project_id}/session_recordings/:
    get:
      operationId: session_recordings_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSessionRecordingList'
          description: ""
      tags:
      - session_recordings
  /api/projects/{project_id}/session_recordings/{id}/:
    delete:
      operationId: session_recordings_destroy
      parameters:
      - description: A UUID string identifying this session recording.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - session_recordings
    get:
      operationId: session_recordings_retrieve
      parameters:
      - description: A UUID string identifying this session recording.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
          description: ""
      tags:
      - session_recordings
  /api/projects/{project_id}/session_recordings/{id}/persist/:
    post:
      operationId: session_recordings_persist_create
      parameters:
      - description: A UUID string identifying this session recording.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRecording'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SessionRecording'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SessionRecording'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
          description: ""
      tags:
      - session_recordings
  /api/projects/{project_id}/session_recordings/{id}/snapshots/:
    get:
      description: |-
        Snapshots can be loaded from multiple places:
        1. From S3 if the session is older than our ingestion limit. This will be multiple files that can be streamed to the client
        2. or from Redis if the session is newer than our ingestion limit.

        Clients need to call this API twice.
        First without a source parameter to get a list of sources supported by the given session.
        And then once for each source in the returned list to get the actual snapshots.

        NB version 1 of this API has been deprecated and ClickHouse stored snapshots are no longer supported.
      operationId: session_recordings_snapshots_retrieve
      parameters:
      - description: A UUID string identifying this session recording.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
          description: ""
      tags:
      - session_recordings
  /api/projects/{project_id}/session_recordings/matching_events/:
    get:
      description: |2-

                Gets a list of event ids that match the given session recording filter.
                The filter must include a single session ID.
                And must include at least one event or action filter.
                This API is intended for internal use and might have unannounced breaking changes.
      operationId: session_recordings_matching_events_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
          description: ""
      tags:
      - session_recordings
  /api/projects/{project_id}/session_recordings/properties/:
    get:
      operationId: session_recordings_properties_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecording'
          description: ""
      tags:
      - session_recordings
  /api/projects/{project_id}/subscriptions/:
    get:
      operationId: subscriptions_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionList'
          description: ""
      tags:
      - subscriptions
    post:
      operationId: subscriptions_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ""
      tags:
      - subscriptions
  /api/projects/{project_id}/subscriptions/{id}/:
    delete:
      description: Hard delete of this model is not allowed. Use a patch API call
        to set "deleted" to true
      operationId: subscriptions_destroy
      parameters:
      - description: A unique integer value identifying this subscription.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "405":
          description: No response body
      tags:
      - subscriptions
    get:
      operationId: subscriptions_retrieve
      parameters:
      - description: A unique integer value identifying this subscription.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ""
      tags:
      - subscriptions
    patch:
      operationId: subscriptions_partial_update
      parameters:
      - description: A unique integer value identifying this subscription.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ""
      tags:
      - subscriptions
    put:
      operationId: subscriptions_update
      parameters:
      - description: A unique integer value identifying this subscription.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ""
      tags:
      - subscriptions
  /api/projects/{project_id}/surveys/:
    get:
      operationId: surveys_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurveyList'
          description: ""
      tags:
      - surveys
    post:
      operationId: surveys_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
          description: ""
      tags:
      - surveys
  /api/projects/{project_id}/surveys/{id}/:
    delete:
      operationId: surveys_destroy
      parameters:
      - description: A UUID string identifying this survey.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - surveys
    get:
      operationId: surveys_retrieve
      parameters:
      - description: A UUID string identifying this survey.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ""
      tags:
      - surveys
    patch:
      operationId: surveys_partial_update
      parameters:
      - description: A UUID string identifying this survey.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurveySerializerCreateUpdateOnly'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurveySerializerCreateUpdateOnly'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurveySerializerCreateUpdateOnly'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveySerializerCreateUpdateOnly'
          description: ""
      tags:
      - surveys
    put:
      operationId: surveys_update
      parameters:
      - description: A UUID string identifying this survey.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ""
      tags:
      - surveys
  /api/projects/{project_id}/surveys/responses_count/:
    get:
      operationId: surveys_responses_count_retrieve
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ""
      tags:
      - surveys
  /api/projects/{project_id}/tags/:
    get:
      operationId: tags_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaggedItemList'
          description: ""
      tags:
      - tags
  /api/projects/{project_id}/uploaded_media/:
    post:
      description: "\n    When object storage is available this API allows upload\
        \ of media which can be used, for example, in text cards on dashboards.\n\n\
        \    Uploaded media must have a content type beginning with 'image/' and be\
        \ less than 4MB.\n    "
      operationId: uploaded_media_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: No response body
      tags:
      - uploaded_media
  /api/projects/{project_id}/warehouse_saved_queries/:
    get:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_saved_queries_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDataWarehouseSavedQueryList'
          description: ""
      tags:
      - warehouse_saved_queries
    post:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_saved_queries_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataWarehouseSavedQuery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataWarehouseSavedQuery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataWarehouseSavedQuery'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataWarehouseSavedQuery'
          description: ""
      tags:
      - warehouse_saved_queries
  /api/projects/{project_id}/warehouse_saved_queries/{id}/:
    delete:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_saved_queries_destroy
      parameters:
      - description: A UUID string identifying this data warehouse saved query.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - warehouse_saved_queries
    get:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_saved_queries_retrieve
      parameters:
      - description: A UUID string identifying this data warehouse saved query.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataWarehouseSavedQuery'
          description: ""
      tags:
      - warehouse_saved_queries
    patch:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_saved_queries_partial_update
      parameters:
      - description: A UUID string identifying this data warehouse saved query.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDataWarehouseSavedQuery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDataWarehouseSavedQuery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDataWarehouseSavedQuery'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataWarehouseSavedQuery'
          description: ""
      tags:
      - warehouse_saved_queries
    put:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_saved_queries_update
      parameters:
      - description: A UUID string identifying this data warehouse saved query.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataWarehouseSavedQuery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataWarehouseSavedQuery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataWarehouseSavedQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataWarehouseSavedQuery'
          description: ""
      tags:
      - warehouse_saved_queries
  /api/projects/{project_id}/warehouse_tables/:
    get:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_tables_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTableList'
          description: ""
      tags:
      - warehouse_tables
    post:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_tables_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Table'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Table'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ""
      tags:
      - warehouse_tables
  /api/projects/{project_id}/warehouse_tables/{id}/:
    delete:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_tables_destroy
      parameters:
      - description: A UUID string identifying this data warehouse table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - warehouse_tables
    get:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_tables_retrieve
      parameters:
      - description: A UUID string identifying this data warehouse table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ""
      tags:
      - warehouse_tables
    patch:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_tables_partial_update
      parameters:
      - description: A UUID string identifying this data warehouse table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTable'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTable'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTable'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ""
      tags:
      - warehouse_tables
    put:
      description: "Create, Read, Update and Delete Warehouse Tables."
      operationId: warehouse_tables_update
      parameters:
      - description: A UUID string identifying this data warehouse table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Table'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Table'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ""
      tags:
      - warehouse_tables
  /api/projects/{project_id}/warehouse_view_link/:
    get:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_link_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedViewLinkList'
          description: ""
      tags:
      - warehouse_view_link
    post:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_link_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewLink'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_link
  /api/projects/{project_id}/warehouse_view_link/{id}/:
    delete:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_link_destroy
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - warehouse_view_link
    get:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_link_retrieve
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_link
    patch:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_link_partial_update
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedViewLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedViewLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedViewLink'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_link
    put:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_link_update
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewLink'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_link
  /api/projects/{project_id}/warehouse_view_links/:
    get:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_links_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedViewLinkList'
          description: ""
      tags:
      - warehouse_view_links
    post:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_links_create
      parameters:
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewLink'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_links
  /api/projects/{project_id}/warehouse_view_links/{id}/:
    delete:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_links_destroy
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      tags:
      - warehouse_view_links
    get:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_links_retrieve
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_links
    patch:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_links_partial_update
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedViewLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedViewLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedViewLink'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_links
    put:
      description: "Create, Read, Update and Delete View Columns."
      operationId: warehouse_view_links_update
      parameters:
      - description: A UUID string identifying this data warehouse view link.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Project ID of the project you're trying to access. To find the\
          \ ID of the project, make a call to /api/projects/."
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewLink'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewLink'
          description: ""
      tags:
      - warehouse_view_links
  /api/prompts/my_prompts/:
    patch:
      description: "Create, read, update and delete prompt sequences state for a person."
      operationId: prompts_my_prompts_partial_update
      responses:
        "200":
          description: No response body
      tags:
      - prompts
      - prompts
components:
  schemas:
    Event:
      additionalProperties: false
      properties:
        event:
          type: string
        offset:
          type: number
        distinct_id:
          type: string
        $distinct_id:
          type: string
        $token:
          type: string
        project_id:
          type: integer
        api_key:
          type: string
        timestamp:
          format: date-time
          type: string
        uuid:
          format: uuid
          type: string
        type:
          type: string
        $set:
          additionalProperties: true
          description: "Set person property to a given values. If the property does\
            \ not \nexist, it will be set. If the property already exists, it\nwill\
            \ be updated to the new value. The type of the property\nwill be inferred\
            \ from the value.\n"
          example:
            $set:
              country: UK
              city: Cambridge
          type: object
        $set_once:
          description: |
            Set person property to a given value, but only if it is not
            currently set. It will not override existing values. The type
            of the property will be inferred from the value.
          example:
            $set_once:
              initial_referrer: https://google.com
          type: object
        properties:
          $ref: '#/components/schemas/Event_properties'
      type: object
    SetPersonProperties:
      additionalProperties: true
      description: "Set person property to a given values. If the property does not\
        \ \nexist, it will be set. If the property already exists, it\nwill be updated\
        \ to the new value. The type of the property\nwill be inferred from the value.\n"
      example:
        $set:
          country: UK
          city: Cambridge
      type: object
    SetOncePersonProperties:
      description: |
        Set person property to a given value, but only if it is not
        currently set. It will not override existing values. The type
        of the property will be inferred from the value.
      example:
        $set_once:
          initial_referrer: https://google.com
      type: object
    EventCaptureRequest:
      $ref: '#/components/schemas/Event'
    EventsCaptureRequest:
      anyOf:
      - $ref: '#/components/schemas/EventsCaptureRequest_anyOf'
      - $ref: '#/components/schemas/EventsCaptureRequest_anyOf_1'
      - items:
          $ref: '#/components/schemas/Event'
        type: array
    EventsCaptureResponse:
      example:
        status: 1
      properties:
        status:
          enum:
          - 0
          - 1
          example: 1
          type: number
      type: object
    EventsCaptureClientErrorResponse:
      properties:
        type:
          enum:
          - validation_error
          type: string
        code:
          example: invalid_input
          type: string
        detail:
          example: Malformed request
          type: string
        attr:
          example: api_key
          type: string
      required:
      - code
      - detail
      - type
      type: object
    EventsCaptureUnauthenticatedResponse:
      properties:
        type:
          enum:
          - authentication_error
          type: string
        code:
          example: invalid_token
          type: string
        detail:
          example: Invalid API key
          type: string
      required:
      - code
      - detail
      - type
      type: object
    Action:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      example:
        slack_message_format: slack_message_format
        is_calculating: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        post_to_slack: true
        team_id: 6
        steps:
        - tag_name: tag_name
          url_matching: contains
          text_matching: contains
          name: name
          href_matching: contains
          selector: selector
          id: id
          text: text
          href: href
          event: event
          url: url
          properties:
            key: ""
        - tag_name: tag_name
          url_matching: contains
          text_matching: contains
          name: name
          href_matching: contains
          selector: selector
          id: id
          text: text
          href: href
          event: event
          url: url
          properties:
            key: ""
        created_by: ""
        tags:
        - ""
        - ""
        deleted: true
        last_calculated_at: 2000-01-23T04:56:07.000+00:00
        is_action: true
        bytecode_error: bytecode_error
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          type: string
        tags:
          items: {}
          type: array
        post_to_slack:
          type: boolean
        slack_message_format:
          maxLength: 600
          type: string
        steps:
          items:
            $ref: '#/components/schemas/ActionStep'
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        deleted:
          type: boolean
        is_calculating:
          readOnly: true
          type: boolean
        last_calculated_at:
          format: date-time
          type: string
        team_id:
          readOnly: true
          type: integer
        is_action:
          default: true
          readOnly: true
          type: boolean
        bytecode_error:
          nullable: true
          readOnly: true
          type: string
      required:
      - bytecode_error
      - created_at
      - created_by
      - id
      - is_action
      - is_calculating
      - team_id
      type: object
    ActionStep:
      example:
        tag_name: tag_name
        url_matching: contains
        text_matching: contains
        name: name
        href_matching: contains
        selector: selector
        id: id
        text: text
        href: href
        event: event
        url: url
        properties:
          key: ""
      properties:
        id:
          type: string
        event:
          maxLength: 400
          nullable: true
          type: string
        tag_name:
          maxLength: 400
          nullable: true
          type: string
        text:
          maxLength: 400
          nullable: true
          type: string
        text_matching:
          enum:
          - contains
          - regex
          - exact
          - ""
          - null
          nullable: true
          type: string
        href:
          maxLength: 65535
          nullable: true
          type: string
        href_matching:
          enum:
          - contains
          - regex
          - exact
          - ""
          - null
          nullable: true
          type: string
        selector:
          maxLength: 65535
          nullable: true
          type: string
        url:
          maxLength: 65535
          nullable: true
          type: string
        name:
          maxLength: 400
          nullable: true
          type: string
        url_matching:
          enum:
          - contains
          - regex
          - exact
          - ""
          - null
          nullable: true
          type: string
        properties:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    ActivityLog:
      example:
        is_system: true
        activity: activity
        unread: true
        item_id: item_id
        organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scope: scope
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detail:
          key: ""
        user:
          distinct_id: distinct_id
          is_email_verified: true
          id: 0
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          first_name: first_name
          email: email
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/UserBasic'
        unread:
          readOnly: true
          type: boolean
        organization_id:
          format: uuid
          nullable: true
          type: string
        is_system:
          nullable: true
          type: boolean
        activity:
          maxLength: 79
          type: string
        item_id:
          maxLength: 72
          nullable: true
          type: string
        scope:
          maxLength: 79
          type: string
        detail:
          additionalProperties: {}
          nullable: true
          type: object
        created_at:
          format: date-time
          type: string
      required:
      - activity
      - id
      - scope
      - unread
      - user
      type: object
    Annotation:
      example:
        insight_name: insight_name
        deleted: true
        date_marker: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        creation_type: USR
        scope: dashboard_item
        created_at: 2000-01-23T04:56:07.000+00:00
        insight_short_id: insight_short_id
        id: 0
        created_by: ""
        content: content
        dashboard_item: 6
      properties:
        id:
          readOnly: true
          type: integer
        content:
          maxLength: 400
          nullable: true
          type: string
        date_marker:
          format: date-time
          nullable: true
          type: string
        creation_type:
          enum:
          - USR
          - GIT
          type: string
        dashboard_item:
          nullable: true
          type: integer
        insight_short_id:
          nullable: true
          readOnly: true
          type: string
        insight_name:
          nullable: true
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        deleted:
          type: boolean
        scope:
          enum:
          - dashboard_item
          - project
          - organization
          type: string
      required:
      - created_at
      - created_by
      - id
      - insight_name
      - insight_short_id
      - updated_at
      type: object
    BatchExport:
      description: Serializer for a BatchExport model.
      example:
        end_at: 2000-01-23T04:56:07.000+00:00
        paused: true
        last_updated_at: 2000-01-23T04:56:07.000+00:00
        last_paused_at: 2000-01-23T04:56:07.000+00:00
        latest_runs:
        - cursor: cursor
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finished_at: 2000-01-23T04:56:07.000+00:00
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latest_error: latest_error
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          status: Cancelled
          records_completed: -1803530559
        - cursor: cursor
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finished_at: 2000-01-23T04:56:07.000+00:00
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latest_error: latest_error
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          status: Cancelled
          records_completed: -1803530559
        name: name
        destination:
          type: S3
          config:
            key: ""
        created_at: 2000-01-23T04:56:07.000+00:00
        interval: hour
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        start_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          description: A human-readable name for this BatchExport.
          type: string
        destination:
          $ref: '#/components/schemas/BatchExportDestination'
        interval:
          enum:
          - hour
          - day
          - week
          - every 5 minutes
          type: string
        paused:
          description: Whether this BatchExport is paused or not.
          type: boolean
        created_at:
          description: The timestamp at which this BatchExport was created.
          format: date-time
          readOnly: true
          type: string
        last_updated_at:
          description: The timestamp at which this BatchExport was last updated.
          format: date-time
          readOnly: true
          type: string
        last_paused_at:
          description: The timestamp at which this BatchExport was last paused.
          format: date-time
          nullable: true
          type: string
        start_at:
          description: Time before which any Batch Export runs won't be triggered.
          format: date-time
          nullable: true
          type: string
        end_at:
          description: Time after which any Batch Export runs won't be triggered.
          format: date-time
          nullable: true
          type: string
        latest_runs:
          items:
            $ref: '#/components/schemas/BatchExportRun'
          readOnly: true
          type: array
      required:
      - created_at
      - destination
      - id
      - interval
      - last_updated_at
      - latest_runs
      - name
      type: object
    BatchExportDestination:
      description: Serializer for an BatchExportDestination model.
      example:
        type: S3
        config:
          key: ""
      properties:
        type:
          description: A choice of supported BatchExportDestination types.
          enum:
          - S3
          - Snowflake
          - Postgres
          - Redshift
          - BigQuery
          - NoOp
          type: string
        config:
          additionalProperties: {}
          description: A JSON field to store all configuration parameters required
            to access a BatchExportDestination.
          type: object
      required:
      - type
      type: object
    BatchExportLogEntry:
      example:
        batch_export_id: batch_export_id
        run_id: run_id
        level: DEBUG
        team_id: 0
        message: message
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        team_id:
          type: integer
        batch_export_id:
          type: string
        run_id:
          type: string
        timestamp:
          format: date-time
          type: string
        level:
          enum:
          - DEBUG
          - LOG
          - INFO
          - WARNING
          - ERROR
          type: string
        message:
          type: string
      required:
      - batch_export_id
      - level
      - message
      - run_id
      - team_id
      - timestamp
      type: object
    BatchExportRun:
      description: Serializer for a BatchExportRun model.
      example:
        cursor: cursor
        data_interval_end: 2000-01-23T04:56:07.000+00:00
        batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        finished_at: 2000-01-23T04:56:07.000+00:00
        last_updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        latest_error: latest_error
        data_interval_start: 2000-01-23T04:56:07.000+00:00
        status: Cancelled
        records_completed: -1803530559
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        status:
          description: The status of this run.
          enum:
          - Cancelled
          - Completed
          - ContinuedAsNew
          - Failed
          - Terminated
          - TimedOut
          - Running
          - Starting
          type: string
        records_completed:
          description: The number of records that have been exported.
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        latest_error:
          description: The latest error that occurred during this run.
          nullable: true
          type: string
        data_interval_start:
          description: The start of the data interval.
          format: date-time
          type: string
        data_interval_end:
          description: The end of the data interval.
          format: date-time
          type: string
        cursor:
          description: An opaque cursor that may be used to resume.
          nullable: true
          type: string
        created_at:
          description: The timestamp at which this BatchExportRun was created.
          format: date-time
          readOnly: true
          type: string
        finished_at:
          description: "The timestamp at which this BatchExportRun finished, successfully\
            \ or not."
          format: date-time
          nullable: true
          type: string
        last_updated_at:
          description: The timestamp at which this BatchExportRun was last updated.
          format: date-time
          readOnly: true
          type: string
        batch_export:
          description: The BatchExport this run belongs to.
          format: uuid
          readOnly: true
          type: string
      required:
      - batch_export
      - created_at
      - data_interval_end
      - data_interval_start
      - id
      - last_updated_at
      - status
      type: object
    ClickhouseEvent:
      example:
        distinct_id: distinct_id
        person: person
        elements: elements
        id: id
        event: event
        elements_chain: elements_chain
        properties: properties
        timestamp: timestamp
      properties:
        id:
          readOnly: true
          type: string
        distinct_id:
          readOnly: true
          type: string
        properties:
          readOnly: true
          type: string
        event:
          readOnly: true
          type: string
        timestamp:
          readOnly: true
          type: string
        person:
          readOnly: true
          type: string
        elements:
          readOnly: true
          type: string
        elements_chain:
          readOnly: true
          type: string
      required:
      - distinct_id
      - elements
      - elements_chain
      - event
      - id
      - person
      - properties
      - timestamp
      type: object
    Cohort:
      example:
        last_calculation: 2000-01-23T04:56:07.000+00:00
        is_calculating: true
        count: 1
        description: description
        groups:
          key: ""
        created_at: 2000-01-23T04:56:07.000+00:00
        filters:
          key: ""
        created_by: ""
        errors_calculating: 6
        deleted: true
        is_static: true
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          maxLength: 1000
          type: string
        groups:
          additionalProperties: {}
          type: object
        deleted:
          type: boolean
        filters:
          additionalProperties: {}
          nullable: true
          type: object
        is_calculating:
          readOnly: true
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_calculation:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        errors_calculating:
          readOnly: true
          type: integer
        count:
          nullable: true
          readOnly: true
          type: integer
        is_static:
          type: boolean
      required:
      - count
      - created_at
      - created_by
      - errors_calculating
      - id
      - is_calculating
      - last_calculation
      type: object
    Credential:
      example:
        access_key: access_key
        access_secret: access_secret
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: ""
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        access_key:
          maxLength: 500
          type: string
        access_secret:
          maxLength: 500
          type: string
          writeOnly: true
      required:
      - access_key
      - access_secret
      - created_at
      - created_by
      - id
      type: object
    Dashboard:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      example:
        pinned: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        use_dashboard: 6
        creation_mode: default
        filters:
          key: ""
        effective_restriction_level: 5
        created_by: ""
        tags:
        - ""
        - ""
        tiles: tiles
        effective_privilege_level: 5
        deleted: true
        use_template: use_template
        is_shared: true
        name: name
        id: 0
        delete_insights: false
        restriction_level: 4803
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          type: string
        pinned:
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_shared:
          readOnly: true
          type: boolean
        deleted:
          type: boolean
        creation_mode:
          enum:
          - default
          - template
          - duplicate
          readOnly: true
          type: string
        use_template:
          type: string
          writeOnly: true
        use_dashboard:
          nullable: true
          type: integer
          writeOnly: true
        delete_insights:
          default: false
          type: boolean
          writeOnly: true
        filters:
          additionalProperties: {}
          type: object
        tags:
          items: {}
          type: array
        tiles:
          readOnly: true
          type: string
        restriction_level:
          enum:
          - 21
          - 37
          maximum: 32767
          minimum: 0
          type: integer
        effective_restriction_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        effective_privilege_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
      required:
      - created_at
      - created_by
      - creation_mode
      - effective_privilege_level
      - effective_restriction_level
      - id
      - is_shared
      - tiles
      type: object
    DashboardBasic:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      example:
        pinned: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        creation_mode: default
        effective_restriction_level: 1
        created_by: ""
        tags:
        - ""
        - ""
        effective_privilege_level: 5
        deleted: true
        is_shared: true
        name: name
        id: 0
        restriction_level: 6
      properties:
        id:
          readOnly: true
          type: integer
        name:
          nullable: true
          readOnly: true
          type: string
        description:
          readOnly: true
          type: string
        pinned:
          readOnly: true
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_shared:
          readOnly: true
          type: boolean
        deleted:
          readOnly: true
          type: boolean
        creation_mode:
          enum:
          - default
          - template
          - duplicate
          readOnly: true
          type: string
        tags:
          items: {}
          type: array
        restriction_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        effective_restriction_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        effective_privilege_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
      required:
      - created_at
      - created_by
      - creation_mode
      - deleted
      - description
      - effective_privilege_level
      - effective_restriction_level
      - id
      - is_shared
      - name
      - pinned
      - restriction_level
      type: object
    DashboardTemplate:
      example:
        dashboard_filters:
          key: ""
        variables:
          key: ""
        image_url: image_url
        created_at: 2000-01-23T04:56:07.000+00:00
        team_id: 6
        dashboard_description: dashboard_description
        created_by: 0
        tags:
        - tags
        - tags
        tiles:
          key: ""
        template_name: template_name
        deleted: true
        scope: team
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        template_name:
          maxLength: 400
          nullable: true
          type: string
        dashboard_description:
          maxLength: 400
          nullable: true
          type: string
        dashboard_filters:
          additionalProperties: {}
          nullable: true
          type: object
        tags:
          items:
            maxLength: 255
            type: string
          nullable: true
          type: array
        tiles:
          additionalProperties: {}
          nullable: true
          type: object
        variables:
          additionalProperties: {}
          nullable: true
          type: object
        deleted:
          nullable: true
          type: boolean
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_by:
          nullable: true
          type: integer
        image_url:
          maxLength: 8201
          nullable: true
          type: string
        team_id:
          nullable: true
          readOnly: true
          type: integer
        scope:
          enum:
          - team
          - global
          - feature_flag
          - ""
          - null
          nullable: true
          type: string
      required:
      - created_at
      - id
      - team_id
      type: object
    DashboardTileBasic:
      example:
        deleted: true
        id: 5
        dashboard_id: 5
      properties:
        id:
          readOnly: true
          type: integer
        dashboard_id:
          readOnly: true
          type: integer
        deleted:
          nullable: true
          type: boolean
      required:
      - dashboard_id
      - id
      type: object
    DataWarehouseSavedQuery:
      example:
        deleted: true
        columns:
        - chain:
          - chain
          - chain
          type: integer
          fields:
          - fields
          - fields
          key: key
          table: table
        - chain:
          - chain
          - chain
          type: integer
          fields:
          - fields
          - fields
          key: key
          table: table
        query:
          key: ""
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: ""
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        deleted:
          nullable: true
          type: boolean
        name:
          maxLength: 128
          type: string
        query:
          additionalProperties: {}
          description: HogQL query
          nullable: true
          type: object
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        columns:
          items:
            $ref: '#/components/schemas/DataWarehouseSavedQuery_columns_inner'
          readOnly: true
          type: array
      required:
      - columns
      - created_at
      - created_by
      - id
      - name
      type: object
    EarlyAccessFeature:
      example:
        stage: draft
        name: name
        feature_flag: ""
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        documentation_url: https://openapi-generator.tech
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        feature_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        name:
          maxLength: 200
          type: string
        description:
          type: string
        stage:
          enum:
          - draft
          - concept
          - alpha
          - beta
          - general-availability
          - archived
          type: string
        documentation_url:
          format: uri
          maxLength: 800
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
      required:
      - created_at
      - feature_flag
      - id
      - name
      - stage
      type: object
    EarlyAccessFeatureSerializerCreateOnly:
      example:
        stage: draft
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        feature_flag: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        documentation_url: https://openapi-generator.tech
        feature_flag_id: 0
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 200
          type: string
        description:
          type: string
        stage:
          enum:
          - draft
          - concept
          - alpha
          - beta
          - general-availability
          - archived
          type: string
        documentation_url:
          format: uri
          maxLength: 800
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        feature_flag_id:
          type: integer
          writeOnly: true
        feature_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
      required:
      - created_at
      - feature_flag
      - id
      - name
      - stage
      type: object
    EnterpriseEventDefinition:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      example:
        owner: 0
        is_calculating: true
        verified: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        post_to_slack: false
        created_by: ""
        tags:
        - ""
        - ""
        verified_by: ""
        is_action: is_action
        last_calculated_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        verified_at: 2000-01-23T04:56:07.000+00:00
        action_id: 6
        last_updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        updated_by: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        last_seen_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        owner:
          nullable: true
          type: integer
        description:
          nullable: true
          type: string
        tags:
          items: {}
          type: array
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        last_seen_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        verified:
          type: boolean
        verified_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        verified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_action:
          readOnly: true
          type: string
        action_id:
          readOnly: true
          type: integer
        is_calculating:
          readOnly: true
          type: boolean
        last_calculated_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        post_to_slack:
          default: false
          type: boolean
      required:
      - action_id
      - created_at
      - created_by
      - id
      - is_action
      - is_calculating
      - last_calculated_at
      - last_seen_at
      - last_updated_at
      - name
      - updated_at
      - updated_by
      - verified_at
      - verified_by
      type: object
    EnterprisePropertyDefinition:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      example:
        is_numerical: true
        verified_by: ""
        updated_at: 2000-01-23T04:56:07.000+00:00
        verified_at: 2000-01-23T04:56:07.000+00:00
        is_seen_on_filtered_events: is_seen_on_filtered_events
        name: name
        updated_by: ""
        verified: true
        description: description
        property_type: DateTime
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - ""
        - ""
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        tags:
          items: {}
          type: array
        is_numerical:
          readOnly: true
          type: boolean
        updated_at:
          format: date-time
          readOnly: true
          type: string
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_seen_on_filtered_events:
          readOnly: true
          type: string
        property_type:
          enum:
          - DateTime
          - String
          - Numeric
          - Boolean
          - ""
          - null
          nullable: true
          type: string
        verified:
          type: boolean
        verified_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        verified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
      required:
      - id
      - is_numerical
      - is_seen_on_filtered_events
      - name
      - updated_at
      - updated_by
      - verified_at
      - verified_by
      type: object
    Experiment:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        feature_flag_key: feature_flag_key
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        filters:
          key: ""
        created_by: ""
        archived: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        secondary_metrics:
          key: ""
        name: name
        feature_flag: ""
        id: 0
        parameters:
          key: ""
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          type: string
        description:
          maxLength: 400
          nullable: true
          type: string
        start_date:
          format: date-time
          nullable: true
          type: string
        end_date:
          format: date-time
          nullable: true
          type: string
        feature_flag_key:
          type: string
        feature_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        parameters:
          additionalProperties: {}
          nullable: true
          type: object
        secondary_metrics:
          additionalProperties: {}
          nullable: true
          type: object
        filters:
          additionalProperties: {}
          type: object
        archived:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      required:
      - created_at
      - created_by
      - feature_flag
      - feature_flag_key
      - id
      - name
      - updated_at
      type: object
    ExplicitTeamMember:
      example:
        joined_at: 2000-01-23T04:56:07.000+00:00
        user_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_at: 2000-01-23T04:56:07.000+00:00
        level: 2624
        parent_level: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        parent_membership_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: ""
        effective_level: 1
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        level:
          enum:
          - 1
          - 8
          maximum: 32767
          minimum: 0
          type: integer
        parent_level:
          readOnly: true
          type: integer
        parent_membership_id:
          format: uuid
          readOnly: true
          type: string
        joined_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        user_uuid:
          format: uuid
          type: string
          writeOnly: true
        effective_level:
          enum:
          - 1
          - 8
          - 15
          readOnly: true
          type: integer
      required:
      - effective_level
      - id
      - joined_at
      - parent_level
      - parent_membership_id
      - updated_at
      - user
      - user_uuid
      type: object
    ExportedAsset:
      description: Standard ExportedAsset serializer that doesn't return content.
      example:
        insight: 1
        filename: filename
        has_content: has_content
        expires_after: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        export_format: image/png
        dashboard: 6
        export_context:
          key: ""
      properties:
        id:
          readOnly: true
          type: integer
        dashboard:
          nullable: true
          type: integer
        insight:
          nullable: true
          type: integer
        export_format:
          enum:
          - image/png
          - application/pdf
          - text/csv
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        has_content:
          readOnly: true
          type: string
        export_context:
          additionalProperties: {}
          nullable: true
          type: object
        filename:
          readOnly: true
          type: string
        expires_after:
          format: date-time
          nullable: true
          type: string
      required:
      - created_at
      - export_format
      - filename
      - has_content
      - id
      type: object
    ExternalDataSourceSerializers:
      example:
        account_id: account_id
        created_at: 2000-01-23T04:56:07.000+00:00
        source_type: Stripe
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source_id: source_id
        client_secret: client_secret
        created_by: 0
        status: status
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        source_id:
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          nullable: true
          readOnly: true
          type: integer
        status:
          readOnly: true
          type: string
        client_secret:
          type: string
          writeOnly: true
        account_id:
          type: string
          writeOnly: true
        source_type:
          enum:
          - Stripe
          readOnly: true
          type: string
      required:
      - account_id
      - client_secret
      - created_at
      - created_by
      - id
      - source_id
      - source_type
      - status
      type: object
    FeatureFlag:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      example:
        is_simple_flag: true
        ensure_experience_continuity: true
        rollout_percentage: 6
        surveys:
          key: ""
        has_enriched_analytics: true
        active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        can_edit: true
        filters:
          key: ""
        created_by: ""
        tags:
        - ""
        - ""
        analytics_dashboards:
        - 5
        - 5
        features:
          key: ""
        deleted: true
        performed_rollback: true
        name: name
        usage_dashboard: 5
        rollback_conditions:
          key: ""
        id: 0
        key: key
        experiment_set:
        - 1
        - 1
      properties:
        id:
          readOnly: true
          type: integer
        name:
          description: contains the description for the flag (field name `name` is
            kept for backwards-compatibility)
          type: string
        key:
          maxLength: 400
          type: string
        filters:
          additionalProperties: {}
          type: object
        deleted:
          type: boolean
        active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          type: string
        is_simple_flag:
          readOnly: true
          type: boolean
        rollout_percentage:
          nullable: true
          readOnly: true
          type: integer
        ensure_experience_continuity:
          nullable: true
          type: boolean
        experiment_set:
          items:
            type: integer
          readOnly: true
          type: array
        surveys:
          additionalProperties: {}
          readOnly: true
          type: object
        features:
          additionalProperties: {}
          readOnly: true
          type: object
        rollback_conditions:
          additionalProperties: {}
          nullable: true
          type: object
        performed_rollback:
          nullable: true
          type: boolean
        can_edit:
          readOnly: true
          type: boolean
        tags:
          items: {}
          type: array
        usage_dashboard:
          readOnly: true
          type: integer
        analytics_dashboards:
          items:
            type: integer
          type: array
        has_enriched_analytics:
          nullable: true
          type: boolean
      required:
      - can_edit
      - created_by
      - experiment_set
      - features
      - id
      - is_simple_flag
      - key
      - rollout_percentage
      - surveys
      - usage_dashboard
      type: object
    FeatureFlagRoleAccess:
      example:
        added_at: 2000-01-23T04:56:07.000+00:00
        role: ""
        updated_at: 2000-01-23T04:56:07.000+00:00
        role_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        feature_flag: ""
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        feature_flag:
          allOf:
          - $ref: '#/components/schemas/FeatureFlag'
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/Role'
          readOnly: true
        role_id:
          format: uuid
          type: string
          writeOnly: true
        added_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      required:
      - added_at
      - feature_flag
      - id
      - role
      - role_id
      - updated_at
      type: object
    FilterAction:
      properties:
        id:
          description: ID of the action to filter on. For example `2841`.
          type: string
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
        math:
          default: total
          description: |
            How to aggregate results, shown as "counted by" in the interface.
            - `total` (default): no aggregation, count by events
            - `dau`: count by unique users. Despite the name, if you select the `interval` to be weekly or monthly, this will show weekly or monthly active users respectively
            - `weekly_active`: rolling average of users of the last 7 days.
            - `monthly_active`: rolling average of users of the last month.
            - `unique_group`: count by group. Requires `math_group_type_index` to be sent. You can get the index by hitting `/api/projects/@current/groups_types/`.

            All of the below are property aggregations, and require `math_property` to be sent with an event property.
            - `sum`: sum of a numeric property.
            - `min`: min of a numeric property.
            - `max`: max of a numeric property.
            - `median`: median of a numeric property.
            - `p90`: 90th percentile of a numeric property.
            - `p95` 95th percentile of a numeric property.
            - `p99`: 99th percentile of a numeric property.
          enum:
          - total
          - dau
          - weekly_active
          - monthly_active
          - unique_group
          - unique_session
          - sum
          - min
          - max
          - avg
          - median
          - p90
          - p95
          - p99
          - min_count_per_actor
          - max_count_per_actor
          - avg_count_per_actor
          - median_count_per_actor
          - p90_count_per_actor
          - p95_count_per_actor
          - p99_count_per_actor
          - hogql
          type: string
      required:
      - id
      type: object
    FilterEvent:
      properties:
        id:
          description: Name of the event to filter on. For example `$pageview` or
            `user sign up`.
          type: string
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
        math:
          default: total
          description: |
            How to aggregate results, shown as "counted by" in the interface.
            - `total` (default): no aggregation, count by events
            - `dau`: count by unique users. Despite the name, if you select the `interval` to be weekly or monthly, this will show weekly or monthly active users respectively
            - `weekly_active`: rolling average of users of the last 7 days.
            - `monthly_active`: rolling average of users of the last month.
            - `unique_group`: count by group. Requires `math_group_type_index` to be sent. You can get the index by hitting `/api/projects/@current/groups_types/`.

            All of the below are property aggregations, and require `math_property` to be sent with an event property.
            - `sum`: sum of a numeric property.
            - `min`: min of a numeric property.
            - `max`: max of a numeric property.
            - `median`: median of a numeric property.
            - `p90`: 90th percentile of a numeric property.
            - `p95` 95th percentile of a numeric property.
            - `p99`: 99th percentile of a numeric property.
          enum:
          - total
          - dau
          - weekly_active
          - monthly_active
          - unique_group
          - unique_session
          - sum
          - min
          - max
          - avg
          - median
          - p90
          - p95
          - p99
          - min_count_per_actor
          - max_count_per_actor
          - avg_count_per_actor
          - median_count_per_actor
          - p90_count_per_actor
          - p95_count_per_actor
          - p99_count_per_actor
          - hogql
          type: string
      required:
      - id
      type: object
    Funnel:
      properties:
        events:
          description: Events to filter on. One of `events` or `actions` is required.
          items:
            $ref: '#/components/schemas/FilterEvent'
          type: array
        actions:
          description: Actions to filter on. One of `events` or `actions` is required.
          items:
            $ref: '#/components/schemas/FilterAction'
          type: array
        properties:
          allOf:
          - $ref: '#/components/schemas/Property'
          description: "Filter events by event property, person property, cohort,\
            \ groups and more."
        filter_test_accounts:
          default: false
          description: Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
          type: boolean
        date_from:
          default: -7d
          description: "What date to filter the results from. Can either be a date\
            \ `2021-01-01`, or a relative date, like `-7d` for last seven days, `-1m`\
            \ for last month, `mStart` for start of the month or `yStart` for the\
            \ start of the year."
          type: string
        date_to:
          default: -7d
          description: "What date to filter the results to. Can either be a date `2021-01-01`,\
            \ or a relative date, like `-7d` for last seven days, `-1m` for last month,\
            \ `mStart` for start of the month or `yStart` for the start of the year."
          type: string
        breakdown:
          description: |-
            A property or cohort to break down on. You can select the type of the property with breakdown_type.
            - `event` (default): a property key
            - `person`: a person property key
            - `cohort`: an array of cohort IDs (ie `[9581,5812]`)
          type: string
        breakdown_type:
          default: event
          description: Type of property to break down on.
          enum:
          - event
          - person
          - cohort
          - group
          - session
          - hogql
          type: string
        funnel_window_interval:
          default: 14
          description: "Funnel window size. Set in combination with funnel_window_interval,\
            \ so defaults to 'days'."
          type: integer
        funnel_window_interval_type:
          default: DAY
          description: The type of interval. Used in combination with `funnel_window_intervals`.
          enum:
          - DAY
          - SECOND
          - MINUTE
          - HOUR
          - WEEK
          - MONTH
          type: string
        funnel_viz_type:
          default: steps
          description: |-
            The visualisation type.
            - `steps` Track instances progress between steps of the funnel
            - `trends` Track how this funnel's conversion rate is trending over time.
            - `time_to_convert` Track how long it takes for instances to convert
          enum:
          - trends
          - time_to_convert
          - steps
          type: string
        funnel_order_type:
          default: ordered
          description: |-
            - `ordered` - Step B must happen after Step A, but any number events can happen between A and B.
            - `strict` - Step B must happen directly after Step A without any events in between.
            - `unordered` - Steps can be completed in any sequence.
          enum:
          - strict
          - unordered
          - ordered
          type: string
        exclusions:
          description: Exclude users/groups that completed the specified event between
            two specific steps. Note that these users/groups will be completely excluded
            from the entire funnel.
          items:
            $ref: '#/components/schemas/FunnelExclusion'
          type: array
        aggregation_group_type_index:
          default: 0
          description: "Aggregate by users or by groups. `0` means user, `>0` means\
            \ a group. See interface for the corresponding ID of the group."
          type: integer
        breakdown_limit:
          default: 10
          type: integer
        funnel_window_days:
          default: 14
          description: (DEPRECATED) Funnel window size in days. Use `funnel_window_interval`
            and `funnel_window_interval_type`
          type: integer
      type: object
    FunnelExclusion:
      properties:
        id:
          description: Name of the event to filter on. For example `$pageview` or
            `user sign up`.
          type: string
        properties:
          allOf:
          - $ref: '#/components/schemas/Property'
          description: "Filter events by event property, person property, cohort,\
            \ groups and more."
        funnel_from_step:
          default: 0
          type: integer
        funnel_to_step:
          default: 1
          type: integer
      required:
      - id
      type: object
    FunnelStepsResult:
      example:
        converted_people_url: converted_people_url
        average_conversion_time: 6.027456183070403
        action_id: action_id
        count: 0
        dropped_people_url: dropped_people_url
        median_conversion_time: 1.4658129805029452
        order: order
      properties:
        count:
          description: Number of people in this step.
          type: integer
        action_id:
          description: Corresponds to the `id` of the entities passed through to `events`
            or `actions`.
          type: string
        average_conversion_time:
          description: Average conversion time of person or groups between steps.
            `null` for the first step.
          format: double
          type: number
        median_conversion_time:
          description: Median conversion time of person or groups between steps. `null`
            for the first step.
          format: double
          type: number
        converted_people_url:
          description: "Path of a URL to get a list of people that converted after\
            \ this step. In this format: `/api/person/funnel?...`"
          type: string
        dropped_people_url:
          description: "Path of a URL to get a list of people that dropped after this\
            \ step. In this format: `/api/person/funnel?...`"
          type: string
        order:
          description: Order of this step in the funnel. The API should return the
            steps in order anyway.
          type: string
      required:
      - action_id
      - average_conversion_time
      - converted_people_url
      - count
      - dropped_people_url
      - median_conversion_time
      - order
      type: object
    FunnelStepsResults:
      example:
        result:
        - converted_people_url: converted_people_url
          average_conversion_time: 6.027456183070403
          action_id: action_id
          count: 0
          dropped_people_url: dropped_people_url
          median_conversion_time: 1.4658129805029452
          order: order
        - converted_people_url: converted_people_url
          average_conversion_time: 6.027456183070403
          action_id: action_id
          count: 0
          dropped_people_url: dropped_people_url
          median_conversion_time: 1.4658129805029452
          order: order
        timezone: UTC
        last_refresh: 2000-01-23T04:56:07.000+00:00
        is_cached: true
      properties:
        is_cached:
          description: "Whether the result is cached. To force a refresh, pass ?refresh=true"
          type: boolean
        last_refresh:
          description: "If the result is cached, when it was last refreshed."
          format: date-time
          type: string
        timezone:
          default: UTC
          description: Timezone the chart is displayed in
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          type: string
        result:
          items:
            $ref: '#/components/schemas/FunnelStepsResult'
          type: array
      required:
      - is_cached
      - last_refresh
      - result
      type: object
    GenericInsights:
      properties:
        events:
          description: Events to filter on. One of `events` or `actions` is required.
          items:
            $ref: '#/components/schemas/FilterEvent'
          type: array
        actions:
          description: Actions to filter on. One of `events` or `actions` is required.
          items:
            $ref: '#/components/schemas/FilterAction'
          type: array
        properties:
          allOf:
          - $ref: '#/components/schemas/Property'
          description: "Filter events by event property, person property, cohort,\
            \ groups and more."
        filter_test_accounts:
          default: false
          description: Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
          type: boolean
        date_from:
          default: -7d
          description: "What date to filter the results from. Can either be a date\
            \ `2021-01-01`, or a relative date, like `-7d` for last seven days, `-1m`\
            \ for last month, `mStart` for start of the month or `yStart` for the\
            \ start of the year."
          type: string
        date_to:
          default: -7d
          description: "What date to filter the results to. Can either be a date `2021-01-01`,\
            \ or a relative date, like `-7d` for last seven days, `-1m` for last month,\
            \ `mStart` for start of the month or `yStart` for the start of the year."
          type: string
      type: object
    Group:
      example:
        group_type_index: -1803530559
        group_properties:
          key: ""
        created_at: 2000-01-23T04:56:07.000+00:00
        group_key: group_key
      properties:
        group_type_index:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        group_key:
          maxLength: 400
          type: string
        group_properties:
          additionalProperties: {}
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
      required:
      - created_at
      - group_key
      - group_type_index
      type: object
    GroupType:
      example:
        name_plural: name_plural
        name_singular: name_singular
        group_type_index: 0
        group_type: group_type
      properties:
        group_type:
          readOnly: true
          type: string
        group_type_index:
          readOnly: true
          type: integer
        name_singular:
          maxLength: 400
          nullable: true
          type: string
        name_plural:
          maxLength: 400
          nullable: true
          type: string
      required:
      - group_type
      - group_type_index
      type: object
    Hook:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        resource_id: -1803530559
        id: id
        team: 6
        event: event
        updated: 2000-01-23T04:56:07.000+00:00
        target: https://openapi-generator.tech
      properties:
        id:
          maxLength: 50
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        updated:
          format: date-time
          readOnly: true
          type: string
        event:
          maxLength: 64
          type: string
        target:
          format: uri
          maxLength: 255
          title: Target URL
          type: string
        resource_id:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        team:
          readOnly: true
          type: integer
      required:
      - created
      - event
      - target
      - team
      - updated
      type: object
    Insight:
      description: Simplified serializer to speed response times when loading large
        amounts of objects.
      example:
        saved: true
        timezone: timezone
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        is_cached: is_cached
        effective_restriction_level: 2
        dashboards:
        - 1
        - 1
        last_modified_at: 2000-01-23T04:56:07.000+00:00
        result: result
        effective_privilege_level: 7
        updated_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        order: 441289069
        favorited: true
        dashboard_tiles:
        - deleted: true
          id: 5
          dashboard_id: 5
        - deleted: true
          id: 5
          dashboard_id: 5
        query:
          key: ""
        last_refresh: last_refresh
        short_id: short_id
        filters:
          key: ""
        last_modified_by: ""
        created_by: ""
        tags:
        - ""
        - ""
        is_sample: true
        deleted: true
        next_allowed_client_refresh: next_allowed_client_refresh
        name: name
        derived_name: derived_name
      properties:
        id:
          readOnly: true
          type: integer
        short_id:
          readOnly: true
          type: string
        name:
          maxLength: 400
          nullable: true
          type: string
        derived_name:
          maxLength: 400
          nullable: true
          type: string
        filters:
          additionalProperties: {}
          type: object
        query:
          additionalProperties: {}
          description: Query node JSON string
          nullable: true
          type: object
        order:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        deleted:
          type: boolean
        dashboards:
          description: "\n        DEPRECATED. Will be removed in a future release.\
            \ Use dashboard_tiles instead.\n        A dashboard ID for each of the\
            \ dashboards that this insight is displayed on.\n        "
          items:
            type: integer
          type: array
        dashboard_tiles:
          description: "\n    A dashboard tile ID and dashboard_id for each of the\
            \ dashboards that this insight is displayed on.\n    "
          items:
            $ref: '#/components/schemas/DashboardTileBasic'
          readOnly: true
          type: array
        last_refresh:
          description: "\n    The datetime this insight's results were generated.\n\
            \    If added to one or more dashboards the insight can be refreshed separately\
            \ on each.\n    Returns the appropriate last_refresh datetime for the\
            \ context the insight is viewed in\n    (see from_dashboard query parameter).\n\
            \    "
          readOnly: true
          type: string
        next_allowed_client_refresh:
          description: "\n    The earliest possible datetime at which we'll allow\
            \ the cached results for this insight to be refreshed\n    by querying\
            \ the database.\n    "
          readOnly: true
          type: string
        result:
          readOnly: true
          type: string
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        description:
          maxLength: 400
          nullable: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        tags:
          items: {}
          type: array
        favorited:
          type: boolean
        saved:
          type: boolean
        last_modified_at:
          format: date-time
          readOnly: true
          type: string
        last_modified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_sample:
          readOnly: true
          type: boolean
        effective_restriction_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        effective_privilege_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        timezone:
          description: The timezone this chart is displayed in.
          readOnly: true
          type: string
        is_cached:
          readOnly: true
          type: string
      required:
      - created_at
      - created_by
      - dashboard_tiles
      - effective_privilege_level
      - effective_restriction_level
      - id
      - is_cached
      - is_sample
      - last_modified_at
      - last_modified_by
      - last_refresh
      - next_allowed_client_refresh
      - result
      - short_id
      - timezone
      - updated_at
      type: object
    Integration:
      description: Standard Integration serializer.
      example:
        kind: slack
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        config:
          key: ""
        created_by: ""
        errors: errors
      properties:
        id:
          readOnly: true
          type: integer
        kind:
          enum:
          - slack
          type: string
        config:
          additionalProperties: {}
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        errors:
          readOnly: true
          type: string
      required:
      - created_at
      - created_by
      - errors
      - id
      - kind
      type: object
    MinimalFeatureFlag:
      properties:
        id:
          readOnly: true
          type: integer
        team_id:
          readOnly: true
          type: integer
        name:
          type: string
        key:
          maxLength: 400
          type: string
        filters:
          additionalProperties: {}
          type: object
        deleted:
          type: boolean
        active:
          type: boolean
        ensure_experience_continuity:
          nullable: true
          type: boolean
      required:
      - id
      - key
      - team_id
      type: object
    MinimalPerson:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 2
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        properties:
          key: ""
        distinct_ids: distinct_ids
      properties:
        id:
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        distinct_ids:
          readOnly: true
          type: string
        properties:
          additionalProperties: {}
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
      required:
      - created_at
      - distinct_ids
      - id
      - name
      - uuid
      type: object
    OrganizationDomain:
      example:
        jit_provisioning_enabled: true
        verification_challenge: verification_challenge
        verified_at: 2000-01-23T04:56:07.000+00:00
        sso_enforcement: sso_enforcement
        has_saml: true
        domain: domain
        saml_entity_id: saml_entity_id
        saml_acs_url: saml_acs_url
        saml_x509_cert: saml_x509_cert
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_verified: true
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        domain:
          maxLength: 128
          type: string
        is_verified:
          readOnly: true
          type: boolean
        verified_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        verification_challenge:
          readOnly: true
          type: string
        jit_provisioning_enabled:
          type: boolean
        sso_enforcement:
          maxLength: 28
          type: string
        has_saml:
          readOnly: true
          type: boolean
        saml_entity_id:
          maxLength: 512
          nullable: true
          type: string
        saml_acs_url:
          maxLength: 512
          nullable: true
          type: string
        saml_x509_cert:
          nullable: true
          type: string
      required:
      - domain
      - has_saml
      - id
      - is_verified
      - verification_challenge
      - verified_at
      type: object
    OrganizationInvite:
      example:
        is_expired: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        target_email: target_email
        emailing_attempt_made: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        message: message
        first_name: first_name
        created_by: ""
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        target_email:
          format: email
          maxLength: 254
          type: string
        first_name:
          maxLength: 30
          type: string
        emailing_attempt_made:
          readOnly: true
          type: boolean
        is_expired:
          readOnly: true
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        message:
          nullable: true
          type: string
      required:
      - created_at
      - created_by
      - emailing_attempt_made
      - id
      - is_expired
      - target_email
      - updated_at
      type: object
    OrganizationMember:
      example:
        joined_at: 2000-01-23T04:56:07.000+00:00
        is_2fa_enabled: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        level: 2624
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: ""
        has_social_auth: true
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        level:
          enum:
          - 1
          - 8
          - 15
          maximum: 32767
          minimum: 0
          type: integer
        joined_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        is_2fa_enabled:
          readOnly: true
          type: boolean
        has_social_auth:
          readOnly: true
          type: boolean
      required:
      - has_social_auth
      - id
      - is_2fa_enabled
      - joined_at
      - updated_at
      - user
      type: object
    OrganizationResourceAccess:
      example:
        access_level: 19750
        updated_at: 2000-01-23T04:56:07.000+00:00
        resource: feature flags
        organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        created_by: 1
      properties:
        id:
          readOnly: true
          type: integer
        resource:
          enum:
          - feature flags
          - experiments
          - cohorts
          - data management
          - session recordings
          - insights
          - dashboards
          type: string
        access_level:
          enum:
          - 21
          - 37
          maximum: 32767
          minimum: 0
          type: integer
        organization:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          nullable: true
          readOnly: true
          type: integer
      required:
      - created_at
      - created_by
      - id
      - organization
      - resource
      - updated_at
      type: object
    PaginatedActionList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - slack_message_format: slack_message_format
          is_calculating: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          post_to_slack: true
          team_id: 6
          steps:
          - tag_name: tag_name
            url_matching: contains
            text_matching: contains
            name: name
            href_matching: contains
            selector: selector
            id: id
            text: text
            href: href
            event: event
            url: url
            properties:
              key: ""
          - tag_name: tag_name
            url_matching: contains
            text_matching: contains
            name: name
            href_matching: contains
            selector: selector
            id: id
            text: text
            href: href
            event: event
            url: url
            properties:
              key: ""
          created_by: ""
          tags:
          - ""
          - ""
          deleted: true
          last_calculated_at: 2000-01-23T04:56:07.000+00:00
          is_action: true
          bytecode_error: bytecode_error
          name: name
          id: 0
        - slack_message_format: slack_message_format
          is_calculating: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          post_to_slack: true
          team_id: 6
          steps:
          - tag_name: tag_name
            url_matching: contains
            text_matching: contains
            name: name
            href_matching: contains
            selector: selector
            id: id
            text: text
            href: href
            event: event
            url: url
            properties:
              key: ""
          - tag_name: tag_name
            url_matching: contains
            text_matching: contains
            name: name
            href_matching: contains
            selector: selector
            id: id
            text: text
            href: href
            event: event
            url: url
            properties:
              key: ""
          created_by: ""
          tags:
          - ""
          - ""
          deleted: true
          last_calculated_at: 2000-01-23T04:56:07.000+00:00
          is_action: true
          bytecode_error: bytecode_error
          name: name
          id: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Action'
          type: array
      type: object
    PaginatedAnnotationList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - insight_name: insight_name
          deleted: true
          date_marker: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          creation_type: USR
          scope: dashboard_item
          created_at: 2000-01-23T04:56:07.000+00:00
          insight_short_id: insight_short_id
          id: 0
          created_by: ""
          content: content
          dashboard_item: 6
        - insight_name: insight_name
          deleted: true
          date_marker: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          creation_type: USR
          scope: dashboard_item
          created_at: 2000-01-23T04:56:07.000+00:00
          insight_short_id: insight_short_id
          id: 0
          created_by: ""
          content: content
          dashboard_item: 6
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      type: object
    PaginatedBatchExportList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - end_at: 2000-01-23T04:56:07.000+00:00
          paused: true
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          last_paused_at: 2000-01-23T04:56:07.000+00:00
          latest_runs:
          - cursor: cursor
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            finished_at: 2000-01-23T04:56:07.000+00:00
            last_updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            latest_error: latest_error
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            status: Cancelled
            records_completed: -1803530559
          - cursor: cursor
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            finished_at: 2000-01-23T04:56:07.000+00:00
            last_updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            latest_error: latest_error
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            status: Cancelled
            records_completed: -1803530559
          name: name
          destination:
            type: S3
            config:
              key: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          interval: hour
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          start_at: 2000-01-23T04:56:07.000+00:00
        - end_at: 2000-01-23T04:56:07.000+00:00
          paused: true
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          last_paused_at: 2000-01-23T04:56:07.000+00:00
          latest_runs:
          - cursor: cursor
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            finished_at: 2000-01-23T04:56:07.000+00:00
            last_updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            latest_error: latest_error
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            status: Cancelled
            records_completed: -1803530559
          - cursor: cursor
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            finished_at: 2000-01-23T04:56:07.000+00:00
            last_updated_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            latest_error: latest_error
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            status: Cancelled
            records_completed: -1803530559
          name: name
          destination:
            type: S3
            config:
              key: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          interval: hour
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          start_at: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/BatchExport'
          type: array
      type: object
    PaginatedBatchExportLogEntryList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - batch_export_id: batch_export_id
          run_id: run_id
          level: DEBUG
          team_id: 0
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
        - batch_export_id: batch_export_id
          run_id: run_id
          level: DEBUG
          team_id: 0
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/BatchExportLogEntry'
          type: array
      type: object
    PaginatedBatchExportRunList:
      example:
        next: next
        previous: previous
        results:
        - cursor: cursor
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finished_at: 2000-01-23T04:56:07.000+00:00
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latest_error: latest_error
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          status: Cancelled
          records_completed: -1803530559
        - cursor: cursor
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          batch_export: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          finished_at: 2000-01-23T04:56:07.000+00:00
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          latest_error: latest_error
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          status: Cancelled
          records_completed: -1803530559
      properties:
        next:
          nullable: true
          type: string
        previous:
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/BatchExportRun'
          type: array
      type: object
    PaginatedClickhouseEventList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - distinct_id: distinct_id
          person: person
          elements: elements
          id: id
          event: event
          elements_chain: elements_chain
          properties: properties
          timestamp: timestamp
        - distinct_id: distinct_id
          person: person
          elements: elements
          id: id
          event: event
          elements_chain: elements_chain
          properties: properties
          timestamp: timestamp
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/ClickhouseEvent'
          type: array
      type: object
    PaginatedCohortList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - last_calculation: 2000-01-23T04:56:07.000+00:00
          is_calculating: true
          count: 1
          description: description
          groups:
            key: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          filters:
            key: ""
          created_by: ""
          errors_calculating: 6
          deleted: true
          is_static: true
          name: name
          id: 0
        - last_calculation: 2000-01-23T04:56:07.000+00:00
          is_calculating: true
          count: 1
          description: description
          groups:
            key: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          filters:
            key: ""
          created_by: ""
          errors_calculating: 6
          deleted: true
          is_static: true
          name: name
          id: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Cohort'
          type: array
      type: object
    PaginatedDashboardBasicList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - pinned: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          creation_mode: default
          effective_restriction_level: 1
          created_by: ""
          tags:
          - ""
          - ""
          effective_privilege_level: 5
          deleted: true
          is_shared: true
          name: name
          id: 0
          restriction_level: 6
        - pinned: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          creation_mode: default
          effective_restriction_level: 1
          created_by: ""
          tags:
          - ""
          - ""
          effective_privilege_level: 5
          deleted: true
          is_shared: true
          name: name
          id: 0
          restriction_level: 6
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/DashboardBasic'
          type: array
      type: object
    PaginatedDashboardTemplateList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - dashboard_filters:
            key: ""
          variables:
            key: ""
          image_url: image_url
          created_at: 2000-01-23T04:56:07.000+00:00
          team_id: 6
          dashboard_description: dashboard_description
          created_by: 0
          tags:
          - tags
          - tags
          tiles:
            key: ""
          template_name: template_name
          deleted: true
          scope: team
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - dashboard_filters:
            key: ""
          variables:
            key: ""
          image_url: image_url
          created_at: 2000-01-23T04:56:07.000+00:00
          team_id: 6
          dashboard_description: dashboard_description
          created_by: 0
          tags:
          - tags
          - tags
          tiles:
            key: ""
          template_name: template_name
          deleted: true
          scope: team
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/DashboardTemplate'
          type: array
      type: object
    PaginatedDataWarehouseSavedQueryList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - deleted: true
          columns:
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          query:
            key: ""
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
        - deleted: true
          columns:
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          query:
            key: ""
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/DataWarehouseSavedQuery'
          type: array
      type: object
    PaginatedEarlyAccessFeatureList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - stage: draft
          name: name
          feature_flag: ""
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          documentation_url: https://openapi-generator.tech
        - stage: draft
          name: name
          feature_flag: ""
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          documentation_url: https://openapi-generator.tech
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/EarlyAccessFeature'
          type: array
      type: object
    PaginatedEnterpriseEventDefinitionList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - owner: 0
          is_calculating: true
          verified: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          post_to_slack: false
          created_by: ""
          tags:
          - ""
          - ""
          verified_by: ""
          is_action: is_action
          last_calculated_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          verified_at: 2000-01-23T04:56:07.000+00:00
          action_id: 6
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          updated_by: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          last_seen_at: 2000-01-23T04:56:07.000+00:00
        - owner: 0
          is_calculating: true
          verified: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          post_to_slack: false
          created_by: ""
          tags:
          - ""
          - ""
          verified_by: ""
          is_action: is_action
          last_calculated_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          verified_at: 2000-01-23T04:56:07.000+00:00
          action_id: 6
          last_updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          updated_by: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          last_seen_at: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/EnterpriseEventDefinition'
          type: array
      type: object
    PaginatedEnterprisePropertyDefinitionList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - is_numerical: true
          verified_by: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          verified_at: 2000-01-23T04:56:07.000+00:00
          is_seen_on_filtered_events: is_seen_on_filtered_events
          name: name
          updated_by: ""
          verified: true
          description: description
          property_type: DateTime
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - ""
          - ""
        - is_numerical: true
          verified_by: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          verified_at: 2000-01-23T04:56:07.000+00:00
          is_seen_on_filtered_events: is_seen_on_filtered_events
          name: name
          updated_by: ""
          verified: true
          description: description
          property_type: DateTime
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - ""
          - ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/EnterprisePropertyDefinition'
          type: array
      type: object
    PaginatedExperimentList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - end_date: 2000-01-23T04:56:07.000+00:00
          feature_flag_key: feature_flag_key
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          filters:
            key: ""
          created_by: ""
          archived: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          secondary_metrics:
            key: ""
          name: name
          feature_flag: ""
          id: 0
          parameters:
            key: ""
          start_date: 2000-01-23T04:56:07.000+00:00
        - end_date: 2000-01-23T04:56:07.000+00:00
          feature_flag_key: feature_flag_key
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          filters:
            key: ""
          created_by: ""
          archived: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          secondary_metrics:
            key: ""
          name: name
          feature_flag: ""
          id: 0
          parameters:
            key: ""
          start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Experiment'
          type: array
      type: object
    PaginatedExternalDataSourceSerializersList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - account_id: account_id
          created_at: 2000-01-23T04:56:07.000+00:00
          source_type: Stripe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source_id: source_id
          client_secret: client_secret
          created_by: 0
          status: status
        - account_id: account_id
          created_at: 2000-01-23T04:56:07.000+00:00
          source_type: Stripe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source_id: source_id
          client_secret: client_secret
          created_by: 0
          status: status
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/ExternalDataSourceSerializers'
          type: array
      type: object
    PaginatedFeatureFlagList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - is_simple_flag: true
          ensure_experience_continuity: true
          rollout_percentage: 6
          surveys:
            key: ""
          has_enriched_analytics: true
          active: true
          created_at: 2000-01-23T04:56:07.000+00:00
          can_edit: true
          filters:
            key: ""
          created_by: ""
          tags:
          - ""
          - ""
          analytics_dashboards:
          - 5
          - 5
          features:
            key: ""
          deleted: true
          performed_rollback: true
          name: name
          usage_dashboard: 5
          rollback_conditions:
            key: ""
          id: 0
          key: key
          experiment_set:
          - 1
          - 1
        - is_simple_flag: true
          ensure_experience_continuity: true
          rollout_percentage: 6
          surveys:
            key: ""
          has_enriched_analytics: true
          active: true
          created_at: 2000-01-23T04:56:07.000+00:00
          can_edit: true
          filters:
            key: ""
          created_by: ""
          tags:
          - ""
          - ""
          analytics_dashboards:
          - 5
          - 5
          features:
            key: ""
          deleted: true
          performed_rollback: true
          name: name
          usage_dashboard: 5
          rollback_conditions:
            key: ""
          id: 0
          key: key
          experiment_set:
          - 1
          - 1
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/FeatureFlag'
          type: array
      type: object
    PaginatedFeatureFlagRoleAccessList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - added_at: 2000-01-23T04:56:07.000+00:00
          role: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          role_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          feature_flag: ""
          id: 0
        - added_at: 2000-01-23T04:56:07.000+00:00
          role: ""
          updated_at: 2000-01-23T04:56:07.000+00:00
          role_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          feature_flag: ""
          id: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/FeatureFlagRoleAccess'
          type: array
      type: object
    PaginatedGroupList:
      example:
        next: next
        previous: previous
        results:
        - group_type_index: -1803530559
          group_properties:
            key: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          group_key: group_key
        - group_type_index: -1803530559
          group_properties:
            key: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          group_key: group_key
      properties:
        next:
          nullable: true
          type: string
        previous:
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Group'
          type: array
      type: object
    PaginatedHookList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - created: 2000-01-23T04:56:07.000+00:00
          resource_id: -1803530559
          id: id
          team: 6
          event: event
          updated: 2000-01-23T04:56:07.000+00:00
          target: https://openapi-generator.tech
        - created: 2000-01-23T04:56:07.000+00:00
          resource_id: -1803530559
          id: id
          team: 6
          event: event
          updated: 2000-01-23T04:56:07.000+00:00
          target: https://openapi-generator.tech
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Hook'
          type: array
      type: object
    PaginatedInsightList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - saved: true
          timezone: timezone
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          is_cached: is_cached
          effective_restriction_level: 2
          dashboards:
          - 1
          - 1
          last_modified_at: 2000-01-23T04:56:07.000+00:00
          result: result
          effective_privilege_level: 7
          updated_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          order: 441289069
          favorited: true
          dashboard_tiles:
          - deleted: true
            id: 5
            dashboard_id: 5
          - deleted: true
            id: 5
            dashboard_id: 5
          query:
            key: ""
          last_refresh: last_refresh
          short_id: short_id
          filters:
            key: ""
          last_modified_by: ""
          created_by: ""
          tags:
          - ""
          - ""
          is_sample: true
          deleted: true
          next_allowed_client_refresh: next_allowed_client_refresh
          name: name
          derived_name: derived_name
        - saved: true
          timezone: timezone
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          is_cached: is_cached
          effective_restriction_level: 2
          dashboards:
          - 1
          - 1
          last_modified_at: 2000-01-23T04:56:07.000+00:00
          result: result
          effective_privilege_level: 7
          updated_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          order: 441289069
          favorited: true
          dashboard_tiles:
          - deleted: true
            id: 5
            dashboard_id: 5
          - deleted: true
            id: 5
            dashboard_id: 5
          query:
            key: ""
          last_refresh: last_refresh
          short_id: short_id
          filters:
            key: ""
          last_modified_by: ""
          created_by: ""
          tags:
          - ""
          - ""
          is_sample: true
          deleted: true
          next_allowed_client_refresh: next_allowed_client_refresh
          name: name
          derived_name: derived_name
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Insight'
          type: array
      type: object
    PaginatedIntegrationList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - kind: slack
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          config:
            key: ""
          created_by: ""
          errors: errors
        - kind: slack
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          config:
            key: ""
          created_by: ""
          errors: errors
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Integration'
          type: array
      type: object
    PaginatedOrganizationDomainList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - jit_provisioning_enabled: true
          verification_challenge: verification_challenge
          verified_at: 2000-01-23T04:56:07.000+00:00
          sso_enforcement: sso_enforcement
          has_saml: true
          domain: domain
          saml_entity_id: saml_entity_id
          saml_acs_url: saml_acs_url
          saml_x509_cert: saml_x509_cert
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_verified: true
        - jit_provisioning_enabled: true
          verification_challenge: verification_challenge
          verified_at: 2000-01-23T04:56:07.000+00:00
          sso_enforcement: sso_enforcement
          has_saml: true
          domain: domain
          saml_entity_id: saml_entity_id
          saml_acs_url: saml_acs_url
          saml_x509_cert: saml_x509_cert
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_verified: true
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/OrganizationDomain'
          type: array
      type: object
    PaginatedOrganizationInviteList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - is_expired: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          target_email: target_email
          emailing_attempt_made: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          first_name: first_name
          created_by: ""
        - is_expired: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          target_email: target_email
          emailing_attempt_made: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          first_name: first_name
          created_by: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/OrganizationInvite'
          type: array
      type: object
    PaginatedOrganizationMemberList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - joined_at: 2000-01-23T04:56:07.000+00:00
          is_2fa_enabled: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          level: 2624
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: ""
          has_social_auth: true
        - joined_at: 2000-01-23T04:56:07.000+00:00
          is_2fa_enabled: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          level: 2624
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: ""
          has_social_auth: true
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/OrganizationMember'
          type: array
      type: object
    PaginatedOrganizationResourceAccessList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - access_level: 19750
          updated_at: 2000-01-23T04:56:07.000+00:00
          resource: feature flags
          organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          created_by: 1
        - access_level: 19750
          updated_at: 2000-01-23T04:56:07.000+00:00
          resource: feature flags
          organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          created_by: 1
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/OrganizationResourceAccess'
          type: array
      type: object
    PaginatedPersonList:
      example:
        next: "https://app.posthog.com/api/projects/{project_id}/accounts/?offset=400&limit=100"
        previous: "https://app.posthog.com/api/projects/{project_id}/accounts/?offset=400&limit=100"
        count: 400
        results:
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          properties:
            key: ""
          distinct_ids:
          - distinct_ids
          - distinct_ids
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          properties:
            key: ""
          distinct_ids:
          - distinct_ids
          - distinct_ids
      properties:
        next:
          example: "https://app.posthog.com/api/projects/{project_id}/accounts/?offset=400&limit=100"
          format: uri
          nullable: true
          type: string
        previous:
          example: "https://app.posthog.com/api/projects/{project_id}/accounts/?offset=400&limit=100"
          format: uri
          nullable: true
          type: string
        count:
          example: 400
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Person'
          type: array
      type: object
    PaginatedPluginConfigList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - plugin_info: plugin_info
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          team_id: 5
          error:
            key: ""
          enabled: true
          deleted: true
          plugin: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          delivery_rate_24h: delivery_rate_24h
          config: config
          order: -1517921766
        - plugin_info: plugin_info
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          team_id: 5
          error:
            key: ""
          enabled: true
          deleted: true
          plugin: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
          delivery_rate_24h: delivery_rate_24h
          config: config
          order: -1517921766
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PluginConfig'
          type: array
      type: object
    PaginatedPluginList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - capabilities:
            key: ""
          icon: icon
          description: description
          is_global: true
          config_schema:
            key: ""
          organization_name: organization_name
          url: url
          latest_tag: latest_tag
          public_jobs:
            key: ""
          organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plugin_type: local
          name: name
          id: 0
          tag: tag
          metrics:
            key: ""
        - capabilities:
            key: ""
          icon: icon
          description: description
          is_global: true
          config_schema:
            key: ""
          organization_name: organization_name
          url: url
          latest_tag: latest_tag
          public_jobs:
            key: ""
          organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plugin_type: local
          name: name
          id: 0
          tag: tag
          metrics:
            key: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Plugin'
          type: array
      type: object
    PaginatedPluginLogEntryList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - plugin_id: 6
          instance_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plugin_config_id: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          team_id: 0
          source: SYSTEM
          type: DEBUG
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
        - plugin_id: 6
          instance_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plugin_config_id: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          team_id: 0
          source: SYSTEM
          type: DEBUG
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PluginLogEntry'
          type: array
      type: object
    PaginatedRoleList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - associated_flags: associated_flags
          members: members
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          feature_flags_access_level: 2624
          created_by: ""
        - associated_flags: associated_flags
          members: members
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          feature_flags_access_level: 2624
          created_by: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Role'
          type: array
      type: object
    PaginatedRoleMembershipList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - joined_at: 2000-01-23T04:56:07.000+00:00
          user_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_at: 2000-01-23T04:56:07.000+00:00
          role_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: ""
        - joined_at: 2000-01-23T04:56:07.000+00:00
          user_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_at: 2000-01-23T04:56:07.000+00:00
          role_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          user: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/RoleMembership'
          type: array
      type: object
    PaginatedSessionRecordingList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - console_warn_count: 9
          keypress_count: 5
          end_time: 2000-01-23T04:56:07.000+00:00
          start_url: start_url
          click_count: 5
          storage: storage
          start_time: 2000-01-23T04:56:07.000+00:00
          console_log_count: 7
          recording_duration: 0
          distinct_id: distinct_id
          person:
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            properties:
              key: ""
            distinct_ids: distinct_ids
          viewed: viewed
          inactive_seconds: 1
          id: id
          active_seconds: 6
          mouse_activity_count: 2
          console_error_count: 3
        - console_warn_count: 9
          keypress_count: 5
          end_time: 2000-01-23T04:56:07.000+00:00
          start_url: start_url
          click_count: 5
          storage: storage
          start_time: 2000-01-23T04:56:07.000+00:00
          console_log_count: 7
          recording_duration: 0
          distinct_id: distinct_id
          person:
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            properties:
              key: ""
            distinct_ids: distinct_ids
          viewed: viewed
          inactive_seconds: 1
          id: id
          active_seconds: 6
          mouse_activity_count: 2
          console_error_count: 3
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/SessionRecording'
          type: array
      type: object
    PaginatedSessionRecordingPlaylistList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - pinned: true
          deleted: true
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          derived_name: derived_name
          id: 0
          short_id: short_id
          filters:
            key: ""
          last_modified_by: ""
          created_by: ""
          last_modified_at: 2000-01-23T04:56:07.000+00:00
        - pinned: true
          deleted: true
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          derived_name: derived_name
          id: 0
          short_id: short_id
          filters:
            key: ""
          last_modified_by: ""
          created_by: ""
          last_modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/SessionRecordingPlaylist'
          type: array
      type: object
    PaginatedSubscriptionList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - summary: summary
          bysetpos: 273751188
          invite_message: invite_message
          target_type: email
          count: -1158723813
          created_at: 2000-01-23T04:56:07.000+00:00
          until_date: 2000-01-23T04:56:07.000+00:00
          title: title
          created_by: ""
          frequency: daily
          byweekday:
          - monday
          - monday
          insight: 1
          deleted: true
          next_delivery_date: 2000-01-23T04:56:07.000+00:00
          target_value: target_value
          interval: 413233370
          id: 0
          dashboard: 6
          start_date: 2000-01-23T04:56:07.000+00:00
        - summary: summary
          bysetpos: 273751188
          invite_message: invite_message
          target_type: email
          count: -1158723813
          created_at: 2000-01-23T04:56:07.000+00:00
          until_date: 2000-01-23T04:56:07.000+00:00
          title: title
          created_by: ""
          frequency: daily
          byweekday:
          - monday
          - monday
          insight: 1
          deleted: true
          next_delivery_date: 2000-01-23T04:56:07.000+00:00
          target_value: target_value
          interval: 413233370
          id: 0
          dashboard: 6
          start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
      type: object
    PaginatedSurveyList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - end_date: 2000-01-23T04:56:07.000+00:00
          linked_flag_id: 0
          questions:
            key: ""
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          type: popover
          targeting_flag: ""
          created_by: ""
          archived: true
          appearance:
            key: ""
          linked_flag: ""
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          conditions:
            key: ""
          start_date: 2000-01-23T04:56:07.000+00:00
        - end_date: 2000-01-23T04:56:07.000+00:00
          linked_flag_id: 0
          questions:
            key: ""
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          type: popover
          targeting_flag: ""
          created_by: ""
          archived: true
          appearance:
            key: ""
          linked_flag: ""
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          conditions:
            key: ""
          start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Survey'
          type: array
      type: object
    PaginatedTableList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - url_pattern: url_pattern
          deleted: true
          credential:
            access_key: access_key
            access_secret: access_secret
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_by: ""
          columns:
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          name: name
          format: CSV
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
        - url_pattern: url_pattern
          deleted: true
          credential:
            access_key: access_key
            access_secret: access_secret
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_by: ""
          columns:
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          - chain:
            - chain
            - chain
            type: integer
            fields:
            - fields
            - fields
            key: key
            table: table
          name: name
          format: CSV
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Table'
          type: array
      type: object
    PaginatedTaggedItemList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - tag: tag
        - tag: tag
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/TaggedItem'
          type: array
      type: object
    PaginatedTeamBasicList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - has_completed_onboarding_for:
            key: ""
          completed_snippet_onboarding: true
          timezone: Africa/Abidjan
          organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          api_token: api_token
          access_control: true
          name: name
          id: 0
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_demo: true
          ingested_event: true
        - has_completed_onboarding_for:
            key: ""
          completed_snippet_onboarding: true
          timezone: Africa/Abidjan
          organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          api_token: api_token
          access_control: true
          name: name
          id: 0
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_demo: true
          ingested_event: true
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/TeamBasic'
          type: array
      type: object
    PaginatedViewLinkList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - deleted: true
          from_join_key: from_join_key
          saved_query_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          to_join_key: to_join_key
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          saved_query: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
          table: table
        - deleted: true
          from_join_key: from_join_key
          saved_query_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          to_join_key: to_join_key
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          saved_query: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
          table: table
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/ViewLink'
          type: array
      type: object
    PatchedAction:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          type: string
        tags:
          items: {}
          type: array
        post_to_slack:
          type: boolean
        slack_message_format:
          maxLength: 600
          type: string
        steps:
          items:
            $ref: '#/components/schemas/ActionStep'
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        deleted:
          type: boolean
        is_calculating:
          readOnly: true
          type: boolean
        last_calculated_at:
          format: date-time
          type: string
        team_id:
          readOnly: true
          type: integer
        is_action:
          default: true
          readOnly: true
          type: boolean
        bytecode_error:
          nullable: true
          readOnly: true
          type: string
      type: object
    PatchedAnnotation:
      properties:
        id:
          readOnly: true
          type: integer
        content:
          maxLength: 400
          nullable: true
          type: string
        date_marker:
          format: date-time
          nullable: true
          type: string
        creation_type:
          enum:
          - USR
          - GIT
          type: string
        dashboard_item:
          nullable: true
          type: integer
        insight_short_id:
          nullable: true
          readOnly: true
          type: string
        insight_name:
          nullable: true
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        deleted:
          type: boolean
        scope:
          enum:
          - dashboard_item
          - project
          - organization
          type: string
      type: object
    PatchedBatchExport:
      description: Serializer for a BatchExport model.
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          description: A human-readable name for this BatchExport.
          type: string
        destination:
          $ref: '#/components/schemas/BatchExportDestination'
        interval:
          enum:
          - hour
          - day
          - week
          - every 5 minutes
          type: string
        paused:
          description: Whether this BatchExport is paused or not.
          type: boolean
        created_at:
          description: The timestamp at which this BatchExport was created.
          format: date-time
          readOnly: true
          type: string
        last_updated_at:
          description: The timestamp at which this BatchExport was last updated.
          format: date-time
          readOnly: true
          type: string
        last_paused_at:
          description: The timestamp at which this BatchExport was last paused.
          format: date-time
          nullable: true
          type: string
        start_at:
          description: Time before which any Batch Export runs won't be triggered.
          format: date-time
          nullable: true
          type: string
        end_at:
          description: Time after which any Batch Export runs won't be triggered.
          format: date-time
          nullable: true
          type: string
        latest_runs:
          items:
            $ref: '#/components/schemas/BatchExportRun'
          readOnly: true
          type: array
      type: object
    PatchedCohort:
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          maxLength: 1000
          type: string
        groups:
          additionalProperties: {}
          type: object
        deleted:
          type: boolean
        filters:
          additionalProperties: {}
          nullable: true
          type: object
        is_calculating:
          readOnly: true
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_calculation:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        errors_calculating:
          readOnly: true
          type: integer
        count:
          nullable: true
          readOnly: true
          type: integer
        is_static:
          type: boolean
      type: object
    PatchedDashboard:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          type: string
        pinned:
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_shared:
          readOnly: true
          type: boolean
        deleted:
          type: boolean
        creation_mode:
          enum:
          - default
          - template
          - duplicate
          readOnly: true
          type: string
        use_template:
          type: string
          writeOnly: true
        use_dashboard:
          nullable: true
          type: integer
          writeOnly: true
        delete_insights:
          default: false
          type: boolean
          writeOnly: true
        filters:
          additionalProperties: {}
          type: object
        tags:
          items: {}
          type: array
        tiles:
          readOnly: true
          type: string
        restriction_level:
          enum:
          - 21
          - 37
          maximum: 32767
          minimum: 0
          type: integer
        effective_restriction_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        effective_privilege_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
      type: object
    PatchedDashboardTemplate:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        template_name:
          maxLength: 400
          nullable: true
          type: string
        dashboard_description:
          maxLength: 400
          nullable: true
          type: string
        dashboard_filters:
          additionalProperties: {}
          nullable: true
          type: object
        tags:
          items:
            maxLength: 255
            type: string
          nullable: true
          type: array
        tiles:
          additionalProperties: {}
          nullable: true
          type: object
        variables:
          additionalProperties: {}
          nullable: true
          type: object
        deleted:
          nullable: true
          type: boolean
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_by:
          nullable: true
          type: integer
        image_url:
          maxLength: 8201
          nullable: true
          type: string
        team_id:
          nullable: true
          readOnly: true
          type: integer
        scope:
          enum:
          - team
          - global
          - feature_flag
          - ""
          - null
          nullable: true
          type: string
      type: object
    PatchedDataWarehouseSavedQuery:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        deleted:
          nullable: true
          type: boolean
        name:
          maxLength: 128
          type: string
        query:
          additionalProperties: {}
          description: HogQL query
          nullable: true
          type: object
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        columns:
          items:
            $ref: '#/components/schemas/DataWarehouseSavedQuery_columns_inner'
          readOnly: true
          type: array
      type: object
    PatchedEarlyAccessFeature:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        feature_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        name:
          maxLength: 200
          type: string
        description:
          type: string
        stage:
          enum:
          - draft
          - concept
          - alpha
          - beta
          - general-availability
          - archived
          type: string
        documentation_url:
          format: uri
          maxLength: 800
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    PatchedEnterpriseEventDefinition:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        owner:
          nullable: true
          type: integer
        description:
          nullable: true
          type: string
        tags:
          items: {}
          type: array
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        last_seen_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_updated_at:
          format: date-time
          readOnly: true
          type: string
        verified:
          type: boolean
        verified_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        verified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_action:
          readOnly: true
          type: string
        action_id:
          readOnly: true
          type: integer
        is_calculating:
          readOnly: true
          type: boolean
        last_calculated_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        post_to_slack:
          default: false
          type: boolean
      type: object
    PatchedEnterprisePropertyDefinition:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        description:
          nullable: true
          type: string
        tags:
          items: {}
          type: array
        is_numerical:
          readOnly: true
          type: boolean
        updated_at:
          format: date-time
          readOnly: true
          type: string
        updated_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_seen_on_filtered_events:
          readOnly: true
          type: string
        property_type:
          enum:
          - DateTime
          - String
          - Numeric
          - Boolean
          - ""
          - null
          nullable: true
          type: string
        verified:
          type: boolean
        verified_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        verified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
      type: object
    PatchedExperiment:
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 400
          type: string
        description:
          maxLength: 400
          nullable: true
          type: string
        start_date:
          format: date-time
          nullable: true
          type: string
        end_date:
          format: date-time
          nullable: true
          type: string
        feature_flag_key:
          type: string
        feature_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        parameters:
          additionalProperties: {}
          nullable: true
          type: object
        secondary_metrics:
          additionalProperties: {}
          nullable: true
          type: object
        filters:
          additionalProperties: {}
          type: object
        archived:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    PatchedExplicitTeamMember:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        level:
          enum:
          - 1
          - 8
          maximum: 32767
          minimum: 0
          type: integer
        parent_level:
          readOnly: true
          type: integer
        parent_membership_id:
          format: uuid
          readOnly: true
          type: string
        joined_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        user_uuid:
          format: uuid
          type: string
          writeOnly: true
        effective_level:
          enum:
          - 1
          - 8
          - 15
          readOnly: true
          type: integer
      type: object
    PatchedExternalDataSourceSerializers:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        source_id:
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          nullable: true
          readOnly: true
          type: integer
        status:
          readOnly: true
          type: string
        client_secret:
          type: string
          writeOnly: true
        account_id:
          type: string
          writeOnly: true
        source_type:
          enum:
          - Stripe
          readOnly: true
          type: string
      type: object
    PatchedFeatureFlag:
      description: Serializer mixin that resolves appropriate response for tags depending
        on license.
      properties:
        id:
          readOnly: true
          type: integer
        name:
          description: contains the description for the flag (field name `name` is
            kept for backwards-compatibility)
          type: string
        key:
          maxLength: 400
          type: string
        filters:
          additionalProperties: {}
          type: object
        deleted:
          type: boolean
        active:
          type: boolean
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          type: string
        is_simple_flag:
          readOnly: true
          type: boolean
        rollout_percentage:
          nullable: true
          readOnly: true
          type: integer
        ensure_experience_continuity:
          nullable: true
          type: boolean
        experiment_set:
          items:
            type: integer
          readOnly: true
          type: array
        surveys:
          additionalProperties: {}
          readOnly: true
          type: object
        features:
          additionalProperties: {}
          readOnly: true
          type: object
        rollback_conditions:
          additionalProperties: {}
          nullable: true
          type: object
        performed_rollback:
          nullable: true
          type: boolean
        can_edit:
          readOnly: true
          type: boolean
        tags:
          items: {}
          type: array
        usage_dashboard:
          readOnly: true
          type: integer
        analytics_dashboards:
          items:
            type: integer
          type: array
        has_enriched_analytics:
          nullable: true
          type: boolean
      type: object
    PatchedGroupType:
      properties:
        group_type:
          readOnly: true
          type: string
        group_type_index:
          readOnly: true
          type: integer
        name_singular:
          maxLength: 400
          nullable: true
          type: string
        name_plural:
          maxLength: 400
          nullable: true
          type: string
      type: object
    PatchedHook:
      properties:
        id:
          maxLength: 50
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        updated:
          format: date-time
          readOnly: true
          type: string
        event:
          maxLength: 64
          type: string
        target:
          format: uri
          maxLength: 255
          title: Target URL
          type: string
        resource_id:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        team:
          readOnly: true
          type: integer
      type: object
    PatchedInsight:
      description: Simplified serializer to speed response times when loading large
        amounts of objects.
      properties:
        id:
          readOnly: true
          type: integer
        short_id:
          readOnly: true
          type: string
        name:
          maxLength: 400
          nullable: true
          type: string
        derived_name:
          maxLength: 400
          nullable: true
          type: string
        filters:
          additionalProperties: {}
          type: object
        query:
          additionalProperties: {}
          description: Query node JSON string
          nullable: true
          type: object
        order:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        deleted:
          type: boolean
        dashboards:
          description: "\n        DEPRECATED. Will be removed in a future release.\
            \ Use dashboard_tiles instead.\n        A dashboard ID for each of the\
            \ dashboards that this insight is displayed on.\n        "
          items:
            type: integer
          type: array
        dashboard_tiles:
          description: "\n    A dashboard tile ID and dashboard_id for each of the\
            \ dashboards that this insight is displayed on.\n    "
          items:
            $ref: '#/components/schemas/DashboardTileBasic'
          readOnly: true
          type: array
        last_refresh:
          description: "\n    The datetime this insight's results were generated.\n\
            \    If added to one or more dashboards the insight can be refreshed separately\
            \ on each.\n    Returns the appropriate last_refresh datetime for the\
            \ context the insight is viewed in\n    (see from_dashboard query parameter).\n\
            \    "
          readOnly: true
          type: string
        next_allowed_client_refresh:
          description: "\n    The earliest possible datetime at which we'll allow\
            \ the cached results for this insight to be refreshed\n    by querying\
            \ the database.\n    "
          readOnly: true
          type: string
        result:
          readOnly: true
          type: string
        created_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        description:
          maxLength: 400
          nullable: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        tags:
          items: {}
          type: array
        favorited:
          type: boolean
        saved:
          type: boolean
        last_modified_at:
          format: date-time
          readOnly: true
          type: string
        last_modified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        is_sample:
          readOnly: true
          type: boolean
        effective_restriction_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        effective_privilege_level:
          enum:
          - 21
          - 37
          readOnly: true
          type: integer
        timezone:
          description: The timezone this chart is displayed in.
          readOnly: true
          type: string
        is_cached:
          readOnly: true
          type: string
      type: object
    PatchedOrganizationDomain:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        domain:
          maxLength: 128
          type: string
        is_verified:
          readOnly: true
          type: boolean
        verified_at:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        verification_challenge:
          readOnly: true
          type: string
        jit_provisioning_enabled:
          type: boolean
        sso_enforcement:
          maxLength: 28
          type: string
        has_saml:
          readOnly: true
          type: boolean
        saml_entity_id:
          maxLength: 512
          nullable: true
          type: string
        saml_acs_url:
          maxLength: 512
          nullable: true
          type: string
        saml_x509_cert:
          nullable: true
          type: string
      type: object
    PatchedOrganizationMember:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        level:
          enum:
          - 1
          - 8
          - 15
          maximum: 32767
          minimum: 0
          type: integer
        joined_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        is_2fa_enabled:
          readOnly: true
          type: boolean
        has_social_auth:
          readOnly: true
          type: boolean
      type: object
    PatchedOrganizationResourceAccess:
      properties:
        id:
          readOnly: true
          type: integer
        resource:
          enum:
          - feature flags
          - experiments
          - cohorts
          - data management
          - session recordings
          - insights
          - dashboards
          type: string
        access_level:
          enum:
          - 21
          - 37
          maximum: 32767
          minimum: 0
          type: integer
        organization:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          nullable: true
          readOnly: true
          type: integer
      type: object
    PatchedPerson:
      properties:
        id:
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        distinct_ids:
          items:
            type: string
          readOnly: true
          type: array
        properties:
          additionalProperties: {}
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
      type: object
    PatchedPlugin:
      properties:
        id:
          readOnly: true
          type: integer
        plugin_type:
          enum:
          - local
          - custom
          - repository
          - source
          - ""
          - null
          nullable: true
          type: string
        name:
          maxLength: 200
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        url:
          nullable: true
          readOnly: true
          type: string
        icon:
          maxLength: 800
          nullable: true
          type: string
        config_schema:
          additionalProperties: {}
          type: object
        tag:
          maxLength: 200
          nullable: true
          type: string
        latest_tag:
          nullable: true
          readOnly: true
          type: string
        is_global:
          type: boolean
        organization_id:
          format: uuid
          readOnly: true
          type: string
        organization_name:
          readOnly: true
          type: string
        capabilities:
          additionalProperties: {}
          type: object
        metrics:
          additionalProperties: {}
          nullable: true
          type: object
        public_jobs:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    PatchedPluginConfig:
      properties:
        id:
          readOnly: true
          type: integer
        plugin:
          type: integer
        enabled:
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        config:
          readOnly: true
          type: string
        error:
          additionalProperties: {}
          nullable: true
          type: object
        team_id:
          nullable: true
          readOnly: true
          type: integer
        plugin_info:
          readOnly: true
          type: string
        delivery_rate_24h:
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          maxLength: 1000
          nullable: true
          type: string
        deleted:
          nullable: true
          type: boolean
      type: object
    PatchedRole:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 200
          type: string
        feature_flags_access_level:
          enum:
          - 21
          - 37
          maximum: 32767
          minimum: 0
          type: integer
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        members:
          readOnly: true
          type: string
        associated_flags:
          readOnly: true
          type: string
      type: object
    PatchedSessionRecordingPlaylist:
      properties:
        id:
          readOnly: true
          type: integer
        short_id:
          readOnly: true
          type: string
        name:
          maxLength: 400
          nullable: true
          type: string
        derived_name:
          maxLength: 400
          nullable: true
          type: string
        description:
          type: string
        pinned:
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        deleted:
          type: boolean
        filters:
          additionalProperties: {}
          type: object
        last_modified_at:
          format: date-time
          readOnly: true
          type: string
        last_modified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
      type: object
    PatchedSubscription:
      description: Standard Subscription serializer.
      properties:
        id:
          readOnly: true
          type: integer
        dashboard:
          nullable: true
          type: integer
        insight:
          nullable: true
          type: integer
        target_type:
          enum:
          - email
          - slack
          - webhook
          type: string
        target_value:
          type: string
        frequency:
          enum:
          - daily
          - weekly
          - monthly
          - yearly
          type: string
        interval:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        byweekday:
          items:
            enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
            type: string
          nullable: true
          type: array
        bysetpos:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        count:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        start_date:
          format: date-time
          type: string
        until_date:
          format: date-time
          nullable: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        deleted:
          type: boolean
        title:
          maxLength: 100
          nullable: true
          type: string
        summary:
          readOnly: true
          type: string
        next_delivery_date:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        invite_message:
          nullable: true
          type: string
      type: object
    PatchedSurveySerializerCreateUpdateOnly:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 400
          type: string
        description:
          type: string
        type:
          enum:
          - popover
          - button
          - email
          - full_screen
          - api
          type: string
        linked_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        linked_flag_id:
          nullable: true
          type: integer
          writeOnly: true
        targeting_flag_id:
          type: integer
          writeOnly: true
        targeting_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        targeting_flag_filters:
          additionalProperties: {}
          nullable: true
          type: object
          writeOnly: true
        remove_targeting_flag:
          nullable: true
          type: boolean
          writeOnly: true
        questions:
          additionalProperties: {}
          nullable: true
          type: object
        conditions:
          additionalProperties: {}
          nullable: true
          type: object
        appearance:
          additionalProperties: {}
          nullable: true
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        start_date:
          format: date-time
          nullable: true
          type: string
        end_date:
          format: date-time
          nullable: true
          type: string
        archived:
          type: boolean
      type: object
    PatchedTable:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        deleted:
          nullable: true
          type: boolean
        name:
          maxLength: 128
          type: string
        format:
          enum:
          - CSV
          - Parquet
          - JSONEachRow
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        url_pattern:
          maxLength: 500
          type: string
        credential:
          $ref: '#/components/schemas/Credential'
        columns:
          items:
            $ref: '#/components/schemas/DataWarehouseSavedQuery_columns_inner'
          readOnly: true
          type: array
      type: object
    PatchedTeam:
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          format: uuid
          readOnly: true
          type: string
        organization:
          format: uuid
          readOnly: true
          type: string
        api_token:
          readOnly: true
          type: string
        app_urls:
          items:
            maxLength: 200
            nullable: true
            type: string
          type: array
        name:
          maxLength: 200
          minLength: 1
          type: string
        slack_incoming_webhook:
          maxLength: 500
          nullable: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        anonymize_ips:
          type: boolean
        completed_snippet_onboarding:
          type: boolean
        ingested_event:
          readOnly: true
          type: boolean
        test_account_filters:
          additionalProperties: {}
          type: object
        test_account_filters_default_checked:
          nullable: true
          type: boolean
        path_cleaning_filters:
          additionalProperties: {}
          nullable: true
          type: object
        is_demo:
          type: boolean
        timezone:
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          type: string
        data_attributes:
          additionalProperties: {}
          type: object
        person_display_name_properties:
          items:
            maxLength: 400
            type: string
          nullable: true
          type: array
        correlation_config:
          additionalProperties: {}
          nullable: true
          type: object
        autocapture_opt_out:
          nullable: true
          type: boolean
        autocapture_exceptions_opt_in:
          nullable: true
          type: boolean
        autocapture_exceptions_errors_to_ignore:
          additionalProperties: {}
          nullable: true
          type: object
        capture_console_log_opt_in:
          nullable: true
          type: boolean
        capture_performance_opt_in:
          nullable: true
          type: boolean
        session_recording_opt_in:
          type: boolean
        session_recording_sample_rate:
          format: decimal
          nullable: true
          pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$"
          type: string
        session_recording_minimum_duration_milliseconds:
          maximum: 15000
          minimum: 0
          nullable: true
          type: integer
        session_recording_linked_flag:
          additionalProperties: {}
          nullable: true
          type: object
        session_recording_network_payload_capture_config:
          additionalProperties: {}
          nullable: true
          type: object
        effective_membership_level:
          enum:
          - 1
          - 8
          - 15
          nullable: true
          readOnly: true
          type: integer
        access_control:
          type: boolean
        week_start_day:
          enum:
          - 0
          - 1
          maximum: 32767
          minimum: -32768
          nullable: true
          type: integer
        has_group_types:
          readOnly: true
          type: boolean
        primary_dashboard:
          nullable: true
          type: integer
        live_events_columns:
          items:
            type: string
          nullable: true
          type: array
        recording_domains:
          items:
            maxLength: 200
            nullable: true
            type: string
          nullable: true
          type: array
        person_on_events_querying_enabled:
          readOnly: true
          type: boolean
        groups_on_events_querying_enabled:
          readOnly: true
          type: boolean
        inject_web_apps:
          nullable: true
          type: boolean
        extra_settings:
          additionalProperties: {}
          nullable: true
          type: object
        has_completed_onboarding_for:
          additionalProperties: {}
          nullable: true
          type: object
        surveys_opt_in:
          nullable: true
          type: boolean
      type: object
    PatchedViewLink:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        deleted:
          nullable: true
          type: boolean
        table:
          maxLength: 128
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        saved_query_id:
          format: uuid
          type: string
          writeOnly: true
        saved_query:
          format: uuid
          readOnly: true
          type: string
        to_join_key:
          maxLength: 400
          type: string
        from_join_key:
          maxLength: 400
          type: string
      type: object
    Person:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        properties:
          key: ""
        distinct_ids:
        - distinct_ids
        - distinct_ids
      properties:
        id:
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        distinct_ids:
          items:
            type: string
          readOnly: true
          type: array
        properties:
          additionalProperties: {}
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
      required:
      - created_at
      - distinct_ids
      - id
      - name
      - uuid
      type: object
    Plugin:
      example:
        capabilities:
          key: ""
        icon: icon
        description: description
        is_global: true
        config_schema:
          key: ""
        organization_name: organization_name
        url: url
        latest_tag: latest_tag
        public_jobs:
          key: ""
        organization_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plugin_type: local
        name: name
        id: 0
        tag: tag
        metrics:
          key: ""
      properties:
        id:
          readOnly: true
          type: integer
        plugin_type:
          enum:
          - local
          - custom
          - repository
          - source
          - ""
          - null
          nullable: true
          type: string
        name:
          maxLength: 200
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        url:
          nullable: true
          readOnly: true
          type: string
        icon:
          maxLength: 800
          nullable: true
          type: string
        config_schema:
          additionalProperties: {}
          type: object
        tag:
          maxLength: 200
          nullable: true
          type: string
        latest_tag:
          nullable: true
          readOnly: true
          type: string
        is_global:
          type: boolean
        organization_id:
          format: uuid
          readOnly: true
          type: string
        organization_name:
          readOnly: true
          type: string
        capabilities:
          additionalProperties: {}
          type: object
        metrics:
          additionalProperties: {}
          nullable: true
          type: object
        public_jobs:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - id
      - latest_tag
      - organization_id
      - organization_name
      - url
      type: object
    PluginConfig:
      example:
        plugin_info: plugin_info
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        team_id: 5
        error:
          key: ""
        enabled: true
        deleted: true
        plugin: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
        delivery_rate_24h: delivery_rate_24h
        config: config
        order: -1517921766
      properties:
        id:
          readOnly: true
          type: integer
        plugin:
          type: integer
        enabled:
          type: boolean
        order:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        config:
          readOnly: true
          type: string
        error:
          additionalProperties: {}
          nullable: true
          type: object
        team_id:
          nullable: true
          readOnly: true
          type: integer
        plugin_info:
          readOnly: true
          type: string
        delivery_rate_24h:
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 400
          nullable: true
          type: string
        description:
          maxLength: 1000
          nullable: true
          type: string
        deleted:
          nullable: true
          type: boolean
      required:
      - config
      - created_at
      - delivery_rate_24h
      - id
      - order
      - plugin
      - plugin_info
      - team_id
      - updated_at
      type: object
    PluginLogEntry:
      example:
        plugin_id: 6
        instance_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plugin_config_id: 1
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        team_id: 0
        source: SYSTEM
        type: DEBUG
        message: message
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        team_id:
          type: integer
        plugin_id:
          type: integer
        plugin_config_id:
          type: integer
        timestamp:
          format: date-time
          type: string
        source:
          enum:
          - SYSTEM
          - PLUGIN
          - CONSOLE
          type: string
        type:
          enum:
          - DEBUG
          - LOG
          - INFO
          - WARN
          - ERROR
          type: string
        message:
          type: string
        instance_id:
          format: uuid
          type: string
      required:
      - id
      - instance_id
      - message
      - plugin_config_id
      - plugin_id
      - source
      - team_id
      - timestamp
      - type
      type: object
    Property:
      properties:
        type:
          default: AND
          description: |2

             You can use a simplified version:
            ```json
            {
                "properties": [
                    {
                        "key": "email",
                        "value": "x@y.com",
                        "operator": "exact",
                        "type": "event"
                    }
                ]
            }
            ```

            Or you can create more complicated queries with AND and OR:
            ```json
            {
                "properties": {
                    "type": "AND",
                    "values": [
                        {
                            "type": "OR",
                            "values": [
                                {"key": "email", ...},
                                {"key": "email", ...}
                            ]
                        },
                        {
                            "type": "AND",
                            "values": [
                                {"key": "email", ...},
                                {"key": "email", ...}
                            ]
                        }
                    ]
                ]
            }
            ```
          enum:
          - AND
          - OR
          type: string
        values:
          items:
            $ref: '#/components/schemas/PropertyItem'
          type: array
      required:
      - values
      type: object
    PropertyItem:
      properties:
        key:
          description: Key of the property you're filtering on. For example `email`
            or `$current_url`
          type: string
        value:
          description: "Value of your filter. For example `test@example.com` or `https://example.com/test/`.\
            \ Can be an array for an OR query, like `[\"test@example.com\",\"ok@example.com\"\
            ]`"
          type: string
        operator:
          default: exact
          enum:
          - exact
          - is_not
          - icontains
          - not_icontains
          - regex
          - not_regex
          - gt
          - lt
          - gte
          - lte
          - is_set
          - is_not_set
          - is_date_exact
          - is_date_after
          - is_date_before
          - is_relative_date_after
          - is_relative_date_before
          - ""
          - null
          nullable: true
          type: string
        type:
          default: event
          enum:
          - event
          - person
          - cohort
          - element
          - static-cohort
          - precalculated-cohort
          - group
          - recording
          - behavioral
          - session
          - hogql
          - ""
          type: string
      required:
      - key
      - value
      type: object
    Role:
      example:
        associated_flags: associated_flags
        members: members
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        feature_flags_access_level: 2624
        created_by: ""
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 200
          type: string
        feature_flags_access_level:
          enum:
          - 21
          - 37
          maximum: 32767
          minimum: 0
          type: integer
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        members:
          readOnly: true
          type: string
        associated_flags:
          readOnly: true
          type: string
      required:
      - associated_flags
      - created_at
      - created_by
      - id
      - members
      - name
      type: object
    RoleMembership:
      example:
        joined_at: 2000-01-23T04:56:07.000+00:00
        user_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_at: 2000-01-23T04:56:07.000+00:00
        role_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        user: ""
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        role_id:
          format: uuid
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        joined_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        user_uuid:
          format: uuid
          type: string
          writeOnly: true
      required:
      - id
      - joined_at
      - role_id
      - updated_at
      - user
      - user_uuid
      type: object
    SessionRecording:
      example:
        console_warn_count: 9
        keypress_count: 5
        end_time: 2000-01-23T04:56:07.000+00:00
        start_url: start_url
        click_count: 5
        storage: storage
        start_time: 2000-01-23T04:56:07.000+00:00
        console_log_count: 7
        recording_duration: 0
        distinct_id: distinct_id
        person:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          properties:
            key: ""
          distinct_ids: distinct_ids
        viewed: viewed
        inactive_seconds: 1
        id: id
        active_seconds: 6
        mouse_activity_count: 2
        console_error_count: 3
      properties:
        id:
          readOnly: true
          type: string
        distinct_id:
          nullable: true
          readOnly: true
          type: string
        viewed:
          readOnly: true
          type: string
        recording_duration:
          readOnly: true
          type: integer
        active_seconds:
          nullable: true
          readOnly: true
          type: integer
        inactive_seconds:
          nullable: true
          readOnly: true
          type: integer
        start_time:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        end_time:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        click_count:
          nullable: true
          readOnly: true
          type: integer
        keypress_count:
          nullable: true
          readOnly: true
          type: integer
        mouse_activity_count:
          nullable: true
          readOnly: true
          type: integer
        console_log_count:
          nullable: true
          readOnly: true
          type: integer
        console_warn_count:
          nullable: true
          readOnly: true
          type: integer
        console_error_count:
          nullable: true
          readOnly: true
          type: integer
        start_url:
          nullable: true
          readOnly: true
          type: string
        person:
          $ref: '#/components/schemas/MinimalPerson'
        storage:
          readOnly: true
          type: string
      required:
      - active_seconds
      - click_count
      - console_error_count
      - console_log_count
      - console_warn_count
      - distinct_id
      - end_time
      - id
      - inactive_seconds
      - keypress_count
      - mouse_activity_count
      - recording_duration
      - start_time
      - start_url
      - storage
      - viewed
      type: object
    SessionRecordingPlaylist:
      example:
        pinned: true
        deleted: true
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        derived_name: derived_name
        id: 0
        short_id: short_id
        filters:
          key: ""
        last_modified_by: ""
        created_by: ""
        last_modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        short_id:
          readOnly: true
          type: string
        name:
          maxLength: 400
          nullable: true
          type: string
        derived_name:
          maxLength: 400
          nullable: true
          type: string
        description:
          type: string
        pinned:
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        deleted:
          type: boolean
        filters:
          additionalProperties: {}
          type: object
        last_modified_at:
          format: date-time
          readOnly: true
          type: string
        last_modified_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - last_modified_at
      - last_modified_by
      - short_id
      type: object
    Subscription:
      description: Standard Subscription serializer.
      example:
        summary: summary
        bysetpos: 273751188
        invite_message: invite_message
        target_type: email
        count: -1158723813
        created_at: 2000-01-23T04:56:07.000+00:00
        until_date: 2000-01-23T04:56:07.000+00:00
        title: title
        created_by: ""
        frequency: daily
        byweekday:
        - monday
        - monday
        insight: 1
        deleted: true
        next_delivery_date: 2000-01-23T04:56:07.000+00:00
        target_value: target_value
        interval: 413233370
        id: 0
        dashboard: 6
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        dashboard:
          nullable: true
          type: integer
        insight:
          nullable: true
          type: integer
        target_type:
          enum:
          - email
          - slack
          - webhook
          type: string
        target_value:
          type: string
        frequency:
          enum:
          - daily
          - weekly
          - monthly
          - yearly
          type: string
        interval:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        byweekday:
          items:
            enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
            type: string
          nullable: true
          type: array
        bysetpos:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        count:
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          type: integer
        start_date:
          format: date-time
          type: string
        until_date:
          format: date-time
          nullable: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        deleted:
          type: boolean
        title:
          maxLength: 100
          nullable: true
          type: string
        summary:
          readOnly: true
          type: string
        next_delivery_date:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        invite_message:
          nullable: true
          type: string
      required:
      - created_at
      - created_by
      - frequency
      - id
      - next_delivery_date
      - start_date
      - summary
      - target_type
      - target_value
      type: object
    Survey:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        linked_flag_id: 0
        questions:
          key: ""
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        type: popover
        targeting_flag: ""
        created_by: ""
        archived: true
        appearance:
          key: ""
        linked_flag: ""
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        conditions:
          key: ""
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 400
          type: string
        description:
          type: string
        type:
          enum:
          - popover
          - button
          - email
          - full_screen
          - api
          type: string
        linked_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        linked_flag_id:
          nullable: true
          type: integer
        targeting_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        questions:
          additionalProperties: {}
          nullable: true
          type: object
        conditions:
          additionalProperties: {}
          nullable: true
          type: object
        appearance:
          additionalProperties: {}
          nullable: true
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        start_date:
          format: date-time
          nullable: true
          type: string
        end_date:
          format: date-time
          nullable: true
          type: string
        archived:
          type: boolean
      required:
      - created_at
      - created_by
      - id
      - linked_flag
      - name
      - targeting_flag
      - type
      type: object
    SurveySerializerCreateUpdateOnly:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        targeting_flag_id: 6
        linked_flag_id: 0
        questions:
          key: ""
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        remove_targeting_flag: true
        type: popover
        targeting_flag: ""
        created_by: ""
        archived: true
        appearance:
          key: ""
        linked_flag: ""
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        targeting_flag_filters:
          key: ""
        conditions:
          key: ""
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 400
          type: string
        description:
          type: string
        type:
          enum:
          - popover
          - button
          - email
          - full_screen
          - api
          type: string
        linked_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        linked_flag_id:
          nullable: true
          type: integer
          writeOnly: true
        targeting_flag_id:
          type: integer
          writeOnly: true
        targeting_flag:
          allOf:
          - $ref: '#/components/schemas/MinimalFeatureFlag'
          readOnly: true
        targeting_flag_filters:
          additionalProperties: {}
          nullable: true
          type: object
          writeOnly: true
        remove_targeting_flag:
          nullable: true
          type: boolean
          writeOnly: true
        questions:
          additionalProperties: {}
          nullable: true
          type: object
        conditions:
          additionalProperties: {}
          nullable: true
          type: object
        appearance:
          additionalProperties: {}
          nullable: true
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        start_date:
          format: date-time
          nullable: true
          type: string
        end_date:
          format: date-time
          nullable: true
          type: string
        archived:
          type: boolean
      required:
      - created_at
      - created_by
      - id
      - linked_flag
      - name
      - targeting_flag
      - type
      type: object
    Table:
      example:
        url_pattern: url_pattern
        deleted: true
        credential:
          access_key: access_key
          access_secret: access_secret
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: ""
        columns:
        - chain:
          - chain
          - chain
          type: integer
          fields:
          - fields
          - fields
          key: key
          table: table
        - chain:
          - chain
          - chain
          type: integer
          fields:
          - fields
          - fields
          key: key
          table: table
        name: name
        format: CSV
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: ""
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        deleted:
          nullable: true
          type: boolean
        name:
          maxLength: 128
          type: string
        format:
          enum:
          - CSV
          - Parquet
          - JSONEachRow
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        url_pattern:
          maxLength: 500
          type: string
        credential:
          $ref: '#/components/schemas/Credential'
        columns:
          items:
            $ref: '#/components/schemas/DataWarehouseSavedQuery_columns_inner'
          readOnly: true
          type: array
      required:
      - columns
      - created_at
      - created_by
      - credential
      - format
      - id
      - name
      - url_pattern
      type: object
    TaggedItem:
      example:
        tag: tag
      properties:
        tag:
          readOnly: true
          type: string
      required:
      - tag
      type: object
    Team:
      example:
        session_recording_sample_rate: session_recording_sample_rate
        completed_snippet_onboarding: true
        test_account_filters_default_checked: true
        timezone: Africa/Abidjan
        api_token: api_token
        live_events_columns:
        - live_events_columns
        - live_events_columns
        created_at: 2000-01-23T04:56:07.000+00:00
        autocapture_opt_out: true
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_demo: true
        person_display_name_properties:
        - person_display_name_properties
        - person_display_name_properties
        capture_console_log_opt_in: true
        primary_dashboard: 5
        recording_domains:
        - recording_domains
        - recording_domains
        inject_web_apps: true
        extra_settings:
          key: ""
        person_on_events_querying_enabled: true
        groups_on_events_querying_enabled: true
        has_completed_onboarding_for:
          key: ""
        updated_at: 2000-01-23T04:56:07.000+00:00
        capture_performance_opt_in: true
        session_recording_linked_flag:
          key: ""
        id: 0
        app_urls:
        - app_urls
        - app_urls
        has_group_types: true
        anonymize_ips: true
        session_recording_opt_in: true
        week_start_day: 6304
        access_control: true
        autocapture_exceptions_errors_to_ignore:
          key: ""
        session_recording_minimum_duration_milliseconds: 9041
        surveys_opt_in: true
        autocapture_exceptions_opt_in: true
        correlation_config:
          key: ""
        session_recording_network_payload_capture_config:
          key: ""
        data_attributes:
          key: ""
        organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        path_cleaning_filters:
          key: ""
        effective_membership_level: 1
        name: name
        slack_incoming_webhook: slack_incoming_webhook
        test_account_filters:
          key: ""
        ingested_event: true
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          format: uuid
          readOnly: true
          type: string
        organization:
          format: uuid
          readOnly: true
          type: string
        api_token:
          readOnly: true
          type: string
        app_urls:
          items:
            maxLength: 200
            nullable: true
            type: string
          type: array
        name:
          maxLength: 200
          minLength: 1
          type: string
        slack_incoming_webhook:
          maxLength: 500
          nullable: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
        anonymize_ips:
          type: boolean
        completed_snippet_onboarding:
          type: boolean
        ingested_event:
          readOnly: true
          type: boolean
        test_account_filters:
          additionalProperties: {}
          type: object
        test_account_filters_default_checked:
          nullable: true
          type: boolean
        path_cleaning_filters:
          additionalProperties: {}
          nullable: true
          type: object
        is_demo:
          type: boolean
        timezone:
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          type: string
        data_attributes:
          additionalProperties: {}
          type: object
        person_display_name_properties:
          items:
            maxLength: 400
            type: string
          nullable: true
          type: array
        correlation_config:
          additionalProperties: {}
          nullable: true
          type: object
        autocapture_opt_out:
          nullable: true
          type: boolean
        autocapture_exceptions_opt_in:
          nullable: true
          type: boolean
        autocapture_exceptions_errors_to_ignore:
          additionalProperties: {}
          nullable: true
          type: object
        capture_console_log_opt_in:
          nullable: true
          type: boolean
        capture_performance_opt_in:
          nullable: true
          type: boolean
        session_recording_opt_in:
          type: boolean
        session_recording_sample_rate:
          format: decimal
          nullable: true
          pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$"
          type: string
        session_recording_minimum_duration_milliseconds:
          maximum: 15000
          minimum: 0
          nullable: true
          type: integer
        session_recording_linked_flag:
          additionalProperties: {}
          nullable: true
          type: object
        session_recording_network_payload_capture_config:
          additionalProperties: {}
          nullable: true
          type: object
        effective_membership_level:
          enum:
          - 1
          - 8
          - 15
          nullable: true
          readOnly: true
          type: integer
        access_control:
          type: boolean
        week_start_day:
          enum:
          - 0
          - 1
          maximum: 32767
          minimum: -32768
          nullable: true
          type: integer
        has_group_types:
          readOnly: true
          type: boolean
        primary_dashboard:
          nullable: true
          type: integer
        live_events_columns:
          items:
            type: string
          nullable: true
          type: array
        recording_domains:
          items:
            maxLength: 200
            nullable: true
            type: string
          nullable: true
          type: array
        person_on_events_querying_enabled:
          readOnly: true
          type: boolean
        groups_on_events_querying_enabled:
          readOnly: true
          type: boolean
        inject_web_apps:
          nullable: true
          type: boolean
        extra_settings:
          additionalProperties: {}
          nullable: true
          type: object
        has_completed_onboarding_for:
          additionalProperties: {}
          nullable: true
          type: object
        surveys_opt_in:
          nullable: true
          type: boolean
      required:
      - api_token
      - created_at
      - effective_membership_level
      - groups_on_events_querying_enabled
      - has_group_types
      - id
      - ingested_event
      - organization
      - person_on_events_querying_enabled
      - updated_at
      - uuid
      type: object
    TeamBasic:
      description: |-
        Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.
        Also used for nested serializers.
      example:
        has_completed_onboarding_for:
          key: ""
        completed_snippet_onboarding: true
        timezone: Africa/Abidjan
        organization: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        api_token: api_token
        access_control: true
        name: name
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_demo: true
        ingested_event: true
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          format: uuid
          readOnly: true
          type: string
        organization:
          format: uuid
          readOnly: true
          type: string
        api_token:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        completed_snippet_onboarding:
          readOnly: true
          type: boolean
        has_completed_onboarding_for:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        ingested_event:
          readOnly: true
          type: boolean
        is_demo:
          readOnly: true
          type: boolean
        timezone:
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          readOnly: true
          type: string
        access_control:
          readOnly: true
          type: boolean
      required:
      - access_control
      - api_token
      - completed_snippet_onboarding
      - has_completed_onboarding_for
      - id
      - ingested_event
      - is_demo
      - name
      - organization
      - timezone
      - uuid
      type: object
    Trend:
      properties:
        events:
          description: Events to filter on. One of `events` or `actions` is required.
          items:
            $ref: '#/components/schemas/FilterEvent'
          type: array
        actions:
          description: Actions to filter on. One of `events` or `actions` is required.
          items:
            $ref: '#/components/schemas/FilterAction'
          type: array
        properties:
          allOf:
          - $ref: '#/components/schemas/Property'
          description: "Filter events by event property, person property, cohort,\
            \ groups and more."
        filter_test_accounts:
          default: false
          description: Whether to filter out internal and test accounts. See "project
            settings" in your PostHog account for the filters.
          type: boolean
        date_from:
          default: -7d
          description: "What date to filter the results from. Can either be a date\
            \ `2021-01-01`, or a relative date, like `-7d` for last seven days, `-1m`\
            \ for last month, `mStart` for start of the month or `yStart` for the\
            \ start of the year."
          type: string
        date_to:
          default: -7d
          description: "What date to filter the results to. Can either be a date `2021-01-01`,\
            \ or a relative date, like `-7d` for last seven days, `-1m` for last month,\
            \ `mStart` for start of the month or `yStart` for the start of the year."
          type: string
        breakdown:
          description: |-
            A property or cohort to break down on. You can select the type of the property with breakdown_type.
            - `event` (default): a property key
            - `person`: a person property key
            - `cohort`: an array of cohort IDs (ie `[9581,5812]`)
          type: string
        breakdown_type:
          default: event
          description: Type of property to break down on.
          enum:
          - event
          - person
          - cohort
          - group
          - session
          - hogql
          type: string
        display:
          default: ActionsLineGraph
          description: How to display the data. Will change how the data is returned.
          enum:
          - ActionsLineGraph
          - ActionsLineGraphCumulative
          - ActionsTable
          - ActionsPie
          - ActionsBar
          - ActionsBarValue
          - WorldMap
          - BoldNumber
          type: string
        formula:
          description: Combine the result of events or actions into a single number.
            For example `A + B` or `(A-B)/B`. The letters correspond to the order
            of the `events` or `actions` lists.
          type: string
        compare:
          description: For each returned result show the current period and the previous
            period. The result will contain `compare:true` and a `compare_label` with
            either `current` or `previous`.
          type: boolean
      type: object
    TrendResult:
      example:
        filter: ""
        data:
        - 0
        - 0
        days:
        - 2000-01-23
        - 2000-01-23
        label: label
        labels:
        - labels
        - labels
      properties:
        data:
          description: The requested counts.
          items:
            type: integer
          type: array
        days:
          description: The dates corresponding to the data field above.
          items:
            format: date
            type: string
          type: array
        labels:
          description: The dates corresponding to the data field above.
          items:
            type: string
          type: array
        filter:
          allOf:
          - $ref: '#/components/schemas/GenericInsights'
          description: The insight that's being returned.
        label:
          description: |-
            A label describing this result. Will include
            - The event or action
            - Breakdown value
            - If `compare:true`, whether it's `current` or `previous`
          type: string
      required:
      - data
      - days
      - filter
      - label
      - labels
      type: object
    TrendResults:
      example:
        result:
        - filter: ""
          data:
          - 0
          - 0
          days:
          - 2000-01-23
          - 2000-01-23
          label: label
          labels:
          - labels
          - labels
        - filter: ""
          data:
          - 0
          - 0
          days:
          - 2000-01-23
          - 2000-01-23
          label: label
          labels:
          - labels
          - labels
        timezone: UTC
        last_refresh: 2000-01-23T04:56:07.000+00:00
        is_cached: true
      properties:
        is_cached:
          description: "Whether the result is cached. To force a refresh, pass ?refresh=true"
          type: boolean
        last_refresh:
          description: "If the result is cached, when it was last refreshed."
          format: date-time
          type: string
        timezone:
          default: UTC
          description: Timezone the chart is displayed in
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
          type: string
        result:
          items:
            $ref: '#/components/schemas/TrendResult'
          type: array
      required:
      - is_cached
      - last_refresh
      - result
      type: object
    UserBasic:
      example:
        distinct_id: distinct_id
        is_email_verified: true
        id: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        first_name: first_name
        email: email
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          format: uuid
          readOnly: true
          type: string
        distinct_id:
          maxLength: 200
          nullable: true
          type: string
        first_name:
          maxLength: 150
          type: string
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        is_email_verified:
          nullable: true
          type: boolean
      required:
      - email
      - id
      - uuid
      type: object
    ViewLink:
      example:
        deleted: true
        from_join_key: from_join_key
        saved_query_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        to_join_key: to_join_key
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        saved_query: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: ""
        table: table
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        deleted:
          nullable: true
          type: boolean
        table:
          maxLength: 128
          type: string
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        created_at:
          format: date-time
          readOnly: true
          type: string
        saved_query_id:
          format: uuid
          type: string
          writeOnly: true
        saved_query:
          format: uuid
          readOnly: true
          type: string
        to_join_key:
          maxLength: 400
          type: string
        from_join_key:
          maxLength: 400
          type: string
      required:
      - created_at
      - created_by
      - from_join_key
      - id
      - saved_query
      - saved_query_id
      - table
      - to_join_key
      type: object
    Event_properties:
      additionalProperties: true
      properties:
        $set:
          additionalProperties: true
          description: "Set person property to a given values. If the property does\
            \ not \nexist, it will be set. If the property already exists, it\nwill\
            \ be updated to the new value. The type of the property\nwill be inferred\
            \ from the value.\n"
          example:
            $set:
              country: UK
              city: Cambridge
          type: object
        $set_once:
          description: |
            Set person property to a given value, but only if it is not
            currently set. It will not override existing values. The type
            of the property will be inferred from the value.
          example:
            $set_once:
              initial_referrer: https://google.com
          type: object
      type: object
    EventsCaptureRequest_anyOf:
      properties:
        api_key:
          description: |
            The API key for your project. You can find this in your project
            settings.
          type: string
        batch:
          items:
            $ref: '#/components/schemas/Event'
          type: array
      required:
      - batch
      type: object
    EventsCaptureRequest_anyOf_1_data:
      oneOf:
      - items:
          $ref: '#/components/schemas/Event'
        type: array
      - description: |
          A JSON stringified array of events. Optionally base64 encoded.
        type: string
    EventsCaptureRequest_anyOf_1:
      properties:
        api_key:
          description: |
            The API key for your project. You can find this in your project
            settings.
          type: string
        data:
          $ref: '#/components/schemas/EventsCaptureRequest_anyOf_1_data'
      required:
      - data
      type: object
    DataWarehouseSavedQuery_columns_inner:
      example:
        chain:
        - chain
        - chain
        type: integer
        fields:
        - fields
        - fields
        key: key
        table: table
      properties:
        key:
          type: string
        type:
          enum:
          - integer
          - float
          - string
          - datetime
          - date
          - boolean
          - array
          - json
          - lazy_table
          - virtual_table
          - field_traverser
          type: string
        fields:
          items:
            type: string
          type: array
        table:
          type: string
        chain:
          items:
            type: string
          type: array
      required:
      - key
      - type
      type: object
x-tagGroups:
- name: All endpoints
  tags:
  - actions
  - activity_log
  - annotations
  - app_metrics
  - batch_exports
  - cohorts
  - dashboard_templates
  - dashboards
  - data_management
  - domains
  - early_access_feature
  - event_definitions
  - events
  - experiments
  - explicit_members
  - exports
  - external_data_sources
  - feature_flags
  - funnel
  - groups
  - groups_types
  - hooks
  - ingestion_warnings
  - insights
  - integrations
  - invites
  - is_generating_demo_data
  - members
  - organizations
  - persons
  - pipeline_transformations
  - pipeline_transformations_configs
  - plugin_configs
  - plugins
  - projects
  - prompts
  - property_definitions
  - query
  - reset_token
  - resource_access
  - roles
  - search
  - session_recording_playlists
  - session_recordings
  - subscriptions
  - surveys
  - tags
  - trend
  - uploaded_media
  - warehouse_saved_queries
  - warehouse_tables
  - warehouse_view_link
  - warehouse_view_links

