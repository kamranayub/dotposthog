/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DotPostHog.Client.OpenAPIDateConverter;

namespace DotPostHog.Model
{
    /// <summary>
    /// PostHogTeam
    /// </summary>
    [DataContract(Name = "Team")]
    public partial class PostHogTeam : IEquatable<PostHogTeam>, IValidatableObject
    {
        /// <summary>
        /// Defines Timezone
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TimezoneEnum
        {
            /// <summary>
            /// Enum AfricaAbidjan for value: Africa/Abidjan
            /// </summary>
            [EnumMember(Value = "Africa/Abidjan")]
            AfricaAbidjan = 1,

            /// <summary>
            /// Enum AfricaAccra for value: Africa/Accra
            /// </summary>
            [EnumMember(Value = "Africa/Accra")]
            AfricaAccra = 2,

            /// <summary>
            /// Enum AfricaAddisAbaba for value: Africa/Addis_Ababa
            /// </summary>
            [EnumMember(Value = "Africa/Addis_Ababa")]
            AfricaAddisAbaba = 3,

            /// <summary>
            /// Enum AfricaAlgiers for value: Africa/Algiers
            /// </summary>
            [EnumMember(Value = "Africa/Algiers")]
            AfricaAlgiers = 4,

            /// <summary>
            /// Enum AfricaAsmara for value: Africa/Asmara
            /// </summary>
            [EnumMember(Value = "Africa/Asmara")]
            AfricaAsmara = 5,

            /// <summary>
            /// Enum AfricaBamako for value: Africa/Bamako
            /// </summary>
            [EnumMember(Value = "Africa/Bamako")]
            AfricaBamako = 6,

            /// <summary>
            /// Enum AfricaBangui for value: Africa/Bangui
            /// </summary>
            [EnumMember(Value = "Africa/Bangui")]
            AfricaBangui = 7,

            /// <summary>
            /// Enum AfricaBanjul for value: Africa/Banjul
            /// </summary>
            [EnumMember(Value = "Africa/Banjul")]
            AfricaBanjul = 8,

            /// <summary>
            /// Enum AfricaBissau for value: Africa/Bissau
            /// </summary>
            [EnumMember(Value = "Africa/Bissau")]
            AfricaBissau = 9,

            /// <summary>
            /// Enum AfricaBlantyre for value: Africa/Blantyre
            /// </summary>
            [EnumMember(Value = "Africa/Blantyre")]
            AfricaBlantyre = 10,

            /// <summary>
            /// Enum AfricaBrazzaville for value: Africa/Brazzaville
            /// </summary>
            [EnumMember(Value = "Africa/Brazzaville")]
            AfricaBrazzaville = 11,

            /// <summary>
            /// Enum AfricaBujumbura for value: Africa/Bujumbura
            /// </summary>
            [EnumMember(Value = "Africa/Bujumbura")]
            AfricaBujumbura = 12,

            /// <summary>
            /// Enum AfricaCairo for value: Africa/Cairo
            /// </summary>
            [EnumMember(Value = "Africa/Cairo")]
            AfricaCairo = 13,

            /// <summary>
            /// Enum AfricaCasablanca for value: Africa/Casablanca
            /// </summary>
            [EnumMember(Value = "Africa/Casablanca")]
            AfricaCasablanca = 14,

            /// <summary>
            /// Enum AfricaCeuta for value: Africa/Ceuta
            /// </summary>
            [EnumMember(Value = "Africa/Ceuta")]
            AfricaCeuta = 15,

            /// <summary>
            /// Enum AfricaConakry for value: Africa/Conakry
            /// </summary>
            [EnumMember(Value = "Africa/Conakry")]
            AfricaConakry = 16,

            /// <summary>
            /// Enum AfricaDakar for value: Africa/Dakar
            /// </summary>
            [EnumMember(Value = "Africa/Dakar")]
            AfricaDakar = 17,

            /// <summary>
            /// Enum AfricaDarEsSalaam for value: Africa/Dar_es_Salaam
            /// </summary>
            [EnumMember(Value = "Africa/Dar_es_Salaam")]
            AfricaDarEsSalaam = 18,

            /// <summary>
            /// Enum AfricaDjibouti for value: Africa/Djibouti
            /// </summary>
            [EnumMember(Value = "Africa/Djibouti")]
            AfricaDjibouti = 19,

            /// <summary>
            /// Enum AfricaDouala for value: Africa/Douala
            /// </summary>
            [EnumMember(Value = "Africa/Douala")]
            AfricaDouala = 20,

            /// <summary>
            /// Enum AfricaElAaiun for value: Africa/El_Aaiun
            /// </summary>
            [EnumMember(Value = "Africa/El_Aaiun")]
            AfricaElAaiun = 21,

            /// <summary>
            /// Enum AfricaFreetown for value: Africa/Freetown
            /// </summary>
            [EnumMember(Value = "Africa/Freetown")]
            AfricaFreetown = 22,

            /// <summary>
            /// Enum AfricaGaborone for value: Africa/Gaborone
            /// </summary>
            [EnumMember(Value = "Africa/Gaborone")]
            AfricaGaborone = 23,

            /// <summary>
            /// Enum AfricaHarare for value: Africa/Harare
            /// </summary>
            [EnumMember(Value = "Africa/Harare")]
            AfricaHarare = 24,

            /// <summary>
            /// Enum AfricaJohannesburg for value: Africa/Johannesburg
            /// </summary>
            [EnumMember(Value = "Africa/Johannesburg")]
            AfricaJohannesburg = 25,

            /// <summary>
            /// Enum AfricaJuba for value: Africa/Juba
            /// </summary>
            [EnumMember(Value = "Africa/Juba")]
            AfricaJuba = 26,

            /// <summary>
            /// Enum AfricaKampala for value: Africa/Kampala
            /// </summary>
            [EnumMember(Value = "Africa/Kampala")]
            AfricaKampala = 27,

            /// <summary>
            /// Enum AfricaKhartoum for value: Africa/Khartoum
            /// </summary>
            [EnumMember(Value = "Africa/Khartoum")]
            AfricaKhartoum = 28,

            /// <summary>
            /// Enum AfricaKigali for value: Africa/Kigali
            /// </summary>
            [EnumMember(Value = "Africa/Kigali")]
            AfricaKigali = 29,

            /// <summary>
            /// Enum AfricaKinshasa for value: Africa/Kinshasa
            /// </summary>
            [EnumMember(Value = "Africa/Kinshasa")]
            AfricaKinshasa = 30,

            /// <summary>
            /// Enum AfricaLagos for value: Africa/Lagos
            /// </summary>
            [EnumMember(Value = "Africa/Lagos")]
            AfricaLagos = 31,

            /// <summary>
            /// Enum AfricaLibreville for value: Africa/Libreville
            /// </summary>
            [EnumMember(Value = "Africa/Libreville")]
            AfricaLibreville = 32,

            /// <summary>
            /// Enum AfricaLome for value: Africa/Lome
            /// </summary>
            [EnumMember(Value = "Africa/Lome")]
            AfricaLome = 33,

            /// <summary>
            /// Enum AfricaLuanda for value: Africa/Luanda
            /// </summary>
            [EnumMember(Value = "Africa/Luanda")]
            AfricaLuanda = 34,

            /// <summary>
            /// Enum AfricaLubumbashi for value: Africa/Lubumbashi
            /// </summary>
            [EnumMember(Value = "Africa/Lubumbashi")]
            AfricaLubumbashi = 35,

            /// <summary>
            /// Enum AfricaLusaka for value: Africa/Lusaka
            /// </summary>
            [EnumMember(Value = "Africa/Lusaka")]
            AfricaLusaka = 36,

            /// <summary>
            /// Enum AfricaMalabo for value: Africa/Malabo
            /// </summary>
            [EnumMember(Value = "Africa/Malabo")]
            AfricaMalabo = 37,

            /// <summary>
            /// Enum AfricaMaputo for value: Africa/Maputo
            /// </summary>
            [EnumMember(Value = "Africa/Maputo")]
            AfricaMaputo = 38,

            /// <summary>
            /// Enum AfricaMaseru for value: Africa/Maseru
            /// </summary>
            [EnumMember(Value = "Africa/Maseru")]
            AfricaMaseru = 39,

            /// <summary>
            /// Enum AfricaMbabane for value: Africa/Mbabane
            /// </summary>
            [EnumMember(Value = "Africa/Mbabane")]
            AfricaMbabane = 40,

            /// <summary>
            /// Enum AfricaMogadishu for value: Africa/Mogadishu
            /// </summary>
            [EnumMember(Value = "Africa/Mogadishu")]
            AfricaMogadishu = 41,

            /// <summary>
            /// Enum AfricaMonrovia for value: Africa/Monrovia
            /// </summary>
            [EnumMember(Value = "Africa/Monrovia")]
            AfricaMonrovia = 42,

            /// <summary>
            /// Enum AfricaNairobi for value: Africa/Nairobi
            /// </summary>
            [EnumMember(Value = "Africa/Nairobi")]
            AfricaNairobi = 43,

            /// <summary>
            /// Enum AfricaNdjamena for value: Africa/Ndjamena
            /// </summary>
            [EnumMember(Value = "Africa/Ndjamena")]
            AfricaNdjamena = 44,

            /// <summary>
            /// Enum AfricaNiamey for value: Africa/Niamey
            /// </summary>
            [EnumMember(Value = "Africa/Niamey")]
            AfricaNiamey = 45,

            /// <summary>
            /// Enum AfricaNouakchott for value: Africa/Nouakchott
            /// </summary>
            [EnumMember(Value = "Africa/Nouakchott")]
            AfricaNouakchott = 46,

            /// <summary>
            /// Enum AfricaOuagadougou for value: Africa/Ouagadougou
            /// </summary>
            [EnumMember(Value = "Africa/Ouagadougou")]
            AfricaOuagadougou = 47,

            /// <summary>
            /// Enum AfricaPortoNovo for value: Africa/Porto-Novo
            /// </summary>
            [EnumMember(Value = "Africa/Porto-Novo")]
            AfricaPortoNovo = 48,

            /// <summary>
            /// Enum AfricaSaoTome for value: Africa/Sao_Tome
            /// </summary>
            [EnumMember(Value = "Africa/Sao_Tome")]
            AfricaSaoTome = 49,

            /// <summary>
            /// Enum AfricaTripoli for value: Africa/Tripoli
            /// </summary>
            [EnumMember(Value = "Africa/Tripoli")]
            AfricaTripoli = 50,

            /// <summary>
            /// Enum AfricaTunis for value: Africa/Tunis
            /// </summary>
            [EnumMember(Value = "Africa/Tunis")]
            AfricaTunis = 51,

            /// <summary>
            /// Enum AfricaWindhoek for value: Africa/Windhoek
            /// </summary>
            [EnumMember(Value = "Africa/Windhoek")]
            AfricaWindhoek = 52,

            /// <summary>
            /// Enum AmericaAdak for value: America/Adak
            /// </summary>
            [EnumMember(Value = "America/Adak")]
            AmericaAdak = 53,

            /// <summary>
            /// Enum AmericaAnchorage for value: America/Anchorage
            /// </summary>
            [EnumMember(Value = "America/Anchorage")]
            AmericaAnchorage = 54,

            /// <summary>
            /// Enum AmericaAnguilla for value: America/Anguilla
            /// </summary>
            [EnumMember(Value = "America/Anguilla")]
            AmericaAnguilla = 55,

            /// <summary>
            /// Enum AmericaAntigua for value: America/Antigua
            /// </summary>
            [EnumMember(Value = "America/Antigua")]
            AmericaAntigua = 56,

            /// <summary>
            /// Enum AmericaAraguaina for value: America/Araguaina
            /// </summary>
            [EnumMember(Value = "America/Araguaina")]
            AmericaAraguaina = 57,

            /// <summary>
            /// Enum AmericaArgentinaBuenosAires for value: America/Argentina/Buenos_Aires
            /// </summary>
            [EnumMember(Value = "America/Argentina/Buenos_Aires")]
            AmericaArgentinaBuenosAires = 58,

            /// <summary>
            /// Enum AmericaArgentinaCatamarca for value: America/Argentina/Catamarca
            /// </summary>
            [EnumMember(Value = "America/Argentina/Catamarca")]
            AmericaArgentinaCatamarca = 59,

            /// <summary>
            /// Enum AmericaArgentinaCordoba for value: America/Argentina/Cordoba
            /// </summary>
            [EnumMember(Value = "America/Argentina/Cordoba")]
            AmericaArgentinaCordoba = 60,

            /// <summary>
            /// Enum AmericaArgentinaJujuy for value: America/Argentina/Jujuy
            /// </summary>
            [EnumMember(Value = "America/Argentina/Jujuy")]
            AmericaArgentinaJujuy = 61,

            /// <summary>
            /// Enum AmericaArgentinaLaRioja for value: America/Argentina/La_Rioja
            /// </summary>
            [EnumMember(Value = "America/Argentina/La_Rioja")]
            AmericaArgentinaLaRioja = 62,

            /// <summary>
            /// Enum AmericaArgentinaMendoza for value: America/Argentina/Mendoza
            /// </summary>
            [EnumMember(Value = "America/Argentina/Mendoza")]
            AmericaArgentinaMendoza = 63,

            /// <summary>
            /// Enum AmericaArgentinaRioGallegos for value: America/Argentina/Rio_Gallegos
            /// </summary>
            [EnumMember(Value = "America/Argentina/Rio_Gallegos")]
            AmericaArgentinaRioGallegos = 64,

            /// <summary>
            /// Enum AmericaArgentinaSalta for value: America/Argentina/Salta
            /// </summary>
            [EnumMember(Value = "America/Argentina/Salta")]
            AmericaArgentinaSalta = 65,

            /// <summary>
            /// Enum AmericaArgentinaSanJuan for value: America/Argentina/San_Juan
            /// </summary>
            [EnumMember(Value = "America/Argentina/San_Juan")]
            AmericaArgentinaSanJuan = 66,

            /// <summary>
            /// Enum AmericaArgentinaSanLuis for value: America/Argentina/San_Luis
            /// </summary>
            [EnumMember(Value = "America/Argentina/San_Luis")]
            AmericaArgentinaSanLuis = 67,

            /// <summary>
            /// Enum AmericaArgentinaTucuman for value: America/Argentina/Tucuman
            /// </summary>
            [EnumMember(Value = "America/Argentina/Tucuman")]
            AmericaArgentinaTucuman = 68,

            /// <summary>
            /// Enum AmericaArgentinaUshuaia for value: America/Argentina/Ushuaia
            /// </summary>
            [EnumMember(Value = "America/Argentina/Ushuaia")]
            AmericaArgentinaUshuaia = 69,

            /// <summary>
            /// Enum AmericaAruba for value: America/Aruba
            /// </summary>
            [EnumMember(Value = "America/Aruba")]
            AmericaAruba = 70,

            /// <summary>
            /// Enum AmericaAsuncion for value: America/Asuncion
            /// </summary>
            [EnumMember(Value = "America/Asuncion")]
            AmericaAsuncion = 71,

            /// <summary>
            /// Enum AmericaAtikokan for value: America/Atikokan
            /// </summary>
            [EnumMember(Value = "America/Atikokan")]
            AmericaAtikokan = 72,

            /// <summary>
            /// Enum AmericaBahia for value: America/Bahia
            /// </summary>
            [EnumMember(Value = "America/Bahia")]
            AmericaBahia = 73,

            /// <summary>
            /// Enum AmericaBahiaBanderas for value: America/Bahia_Banderas
            /// </summary>
            [EnumMember(Value = "America/Bahia_Banderas")]
            AmericaBahiaBanderas = 74,

            /// <summary>
            /// Enum AmericaBarbados for value: America/Barbados
            /// </summary>
            [EnumMember(Value = "America/Barbados")]
            AmericaBarbados = 75,

            /// <summary>
            /// Enum AmericaBelem for value: America/Belem
            /// </summary>
            [EnumMember(Value = "America/Belem")]
            AmericaBelem = 76,

            /// <summary>
            /// Enum AmericaBelize for value: America/Belize
            /// </summary>
            [EnumMember(Value = "America/Belize")]
            AmericaBelize = 77,

            /// <summary>
            /// Enum AmericaBlancSablon for value: America/Blanc-Sablon
            /// </summary>
            [EnumMember(Value = "America/Blanc-Sablon")]
            AmericaBlancSablon = 78,

            /// <summary>
            /// Enum AmericaBoaVista for value: America/Boa_Vista
            /// </summary>
            [EnumMember(Value = "America/Boa_Vista")]
            AmericaBoaVista = 79,

            /// <summary>
            /// Enum AmericaBogota for value: America/Bogota
            /// </summary>
            [EnumMember(Value = "America/Bogota")]
            AmericaBogota = 80,

            /// <summary>
            /// Enum AmericaBoise for value: America/Boise
            /// </summary>
            [EnumMember(Value = "America/Boise")]
            AmericaBoise = 81,

            /// <summary>
            /// Enum AmericaCambridgeBay for value: America/Cambridge_Bay
            /// </summary>
            [EnumMember(Value = "America/Cambridge_Bay")]
            AmericaCambridgeBay = 82,

            /// <summary>
            /// Enum AmericaCampoGrande for value: America/Campo_Grande
            /// </summary>
            [EnumMember(Value = "America/Campo_Grande")]
            AmericaCampoGrande = 83,

            /// <summary>
            /// Enum AmericaCancun for value: America/Cancun
            /// </summary>
            [EnumMember(Value = "America/Cancun")]
            AmericaCancun = 84,

            /// <summary>
            /// Enum AmericaCaracas for value: America/Caracas
            /// </summary>
            [EnumMember(Value = "America/Caracas")]
            AmericaCaracas = 85,

            /// <summary>
            /// Enum AmericaCayenne for value: America/Cayenne
            /// </summary>
            [EnumMember(Value = "America/Cayenne")]
            AmericaCayenne = 86,

            /// <summary>
            /// Enum AmericaCayman for value: America/Cayman
            /// </summary>
            [EnumMember(Value = "America/Cayman")]
            AmericaCayman = 87,

            /// <summary>
            /// Enum AmericaChicago for value: America/Chicago
            /// </summary>
            [EnumMember(Value = "America/Chicago")]
            AmericaChicago = 88,

            /// <summary>
            /// Enum AmericaChihuahua for value: America/Chihuahua
            /// </summary>
            [EnumMember(Value = "America/Chihuahua")]
            AmericaChihuahua = 89,

            /// <summary>
            /// Enum AmericaCostaRica for value: America/Costa_Rica
            /// </summary>
            [EnumMember(Value = "America/Costa_Rica")]
            AmericaCostaRica = 90,

            /// <summary>
            /// Enum AmericaCreston for value: America/Creston
            /// </summary>
            [EnumMember(Value = "America/Creston")]
            AmericaCreston = 91,

            /// <summary>
            /// Enum AmericaCuiaba for value: America/Cuiaba
            /// </summary>
            [EnumMember(Value = "America/Cuiaba")]
            AmericaCuiaba = 92,

            /// <summary>
            /// Enum AmericaCuracao for value: America/Curacao
            /// </summary>
            [EnumMember(Value = "America/Curacao")]
            AmericaCuracao = 93,

            /// <summary>
            /// Enum AmericaDanmarkshavn for value: America/Danmarkshavn
            /// </summary>
            [EnumMember(Value = "America/Danmarkshavn")]
            AmericaDanmarkshavn = 94,

            /// <summary>
            /// Enum AmericaDawson for value: America/Dawson
            /// </summary>
            [EnumMember(Value = "America/Dawson")]
            AmericaDawson = 95,

            /// <summary>
            /// Enum AmericaDawsonCreek for value: America/Dawson_Creek
            /// </summary>
            [EnumMember(Value = "America/Dawson_Creek")]
            AmericaDawsonCreek = 96,

            /// <summary>
            /// Enum AmericaDenver for value: America/Denver
            /// </summary>
            [EnumMember(Value = "America/Denver")]
            AmericaDenver = 97,

            /// <summary>
            /// Enum AmericaDetroit for value: America/Detroit
            /// </summary>
            [EnumMember(Value = "America/Detroit")]
            AmericaDetroit = 98,

            /// <summary>
            /// Enum AmericaDominica for value: America/Dominica
            /// </summary>
            [EnumMember(Value = "America/Dominica")]
            AmericaDominica = 99,

            /// <summary>
            /// Enum AmericaEdmonton for value: America/Edmonton
            /// </summary>
            [EnumMember(Value = "America/Edmonton")]
            AmericaEdmonton = 100,

            /// <summary>
            /// Enum AmericaEirunepe for value: America/Eirunepe
            /// </summary>
            [EnumMember(Value = "America/Eirunepe")]
            AmericaEirunepe = 101,

            /// <summary>
            /// Enum AmericaElSalvador for value: America/El_Salvador
            /// </summary>
            [EnumMember(Value = "America/El_Salvador")]
            AmericaElSalvador = 102,

            /// <summary>
            /// Enum AmericaFortNelson for value: America/Fort_Nelson
            /// </summary>
            [EnumMember(Value = "America/Fort_Nelson")]
            AmericaFortNelson = 103,

            /// <summary>
            /// Enum AmericaFortaleza for value: America/Fortaleza
            /// </summary>
            [EnumMember(Value = "America/Fortaleza")]
            AmericaFortaleza = 104,

            /// <summary>
            /// Enum AmericaGlaceBay for value: America/Glace_Bay
            /// </summary>
            [EnumMember(Value = "America/Glace_Bay")]
            AmericaGlaceBay = 105,

            /// <summary>
            /// Enum AmericaGooseBay for value: America/Goose_Bay
            /// </summary>
            [EnumMember(Value = "America/Goose_Bay")]
            AmericaGooseBay = 106,

            /// <summary>
            /// Enum AmericaGrandTurk for value: America/Grand_Turk
            /// </summary>
            [EnumMember(Value = "America/Grand_Turk")]
            AmericaGrandTurk = 107,

            /// <summary>
            /// Enum AmericaGrenada for value: America/Grenada
            /// </summary>
            [EnumMember(Value = "America/Grenada")]
            AmericaGrenada = 108,

            /// <summary>
            /// Enum AmericaGuadeloupe for value: America/Guadeloupe
            /// </summary>
            [EnumMember(Value = "America/Guadeloupe")]
            AmericaGuadeloupe = 109,

            /// <summary>
            /// Enum AmericaGuatemala for value: America/Guatemala
            /// </summary>
            [EnumMember(Value = "America/Guatemala")]
            AmericaGuatemala = 110,

            /// <summary>
            /// Enum AmericaGuayaquil for value: America/Guayaquil
            /// </summary>
            [EnumMember(Value = "America/Guayaquil")]
            AmericaGuayaquil = 111,

            /// <summary>
            /// Enum AmericaGuyana for value: America/Guyana
            /// </summary>
            [EnumMember(Value = "America/Guyana")]
            AmericaGuyana = 112,

            /// <summary>
            /// Enum AmericaHalifax for value: America/Halifax
            /// </summary>
            [EnumMember(Value = "America/Halifax")]
            AmericaHalifax = 113,

            /// <summary>
            /// Enum AmericaHavana for value: America/Havana
            /// </summary>
            [EnumMember(Value = "America/Havana")]
            AmericaHavana = 114,

            /// <summary>
            /// Enum AmericaHermosillo for value: America/Hermosillo
            /// </summary>
            [EnumMember(Value = "America/Hermosillo")]
            AmericaHermosillo = 115,

            /// <summary>
            /// Enum AmericaIndianaIndianapolis for value: America/Indiana/Indianapolis
            /// </summary>
            [EnumMember(Value = "America/Indiana/Indianapolis")]
            AmericaIndianaIndianapolis = 116,

            /// <summary>
            /// Enum AmericaIndianaKnox for value: America/Indiana/Knox
            /// </summary>
            [EnumMember(Value = "America/Indiana/Knox")]
            AmericaIndianaKnox = 117,

            /// <summary>
            /// Enum AmericaIndianaMarengo for value: America/Indiana/Marengo
            /// </summary>
            [EnumMember(Value = "America/Indiana/Marengo")]
            AmericaIndianaMarengo = 118,

            /// <summary>
            /// Enum AmericaIndianaPetersburg for value: America/Indiana/Petersburg
            /// </summary>
            [EnumMember(Value = "America/Indiana/Petersburg")]
            AmericaIndianaPetersburg = 119,

            /// <summary>
            /// Enum AmericaIndianaTellCity for value: America/Indiana/Tell_City
            /// </summary>
            [EnumMember(Value = "America/Indiana/Tell_City")]
            AmericaIndianaTellCity = 120,

            /// <summary>
            /// Enum AmericaIndianaVevay for value: America/Indiana/Vevay
            /// </summary>
            [EnumMember(Value = "America/Indiana/Vevay")]
            AmericaIndianaVevay = 121,

            /// <summary>
            /// Enum AmericaIndianaVincennes for value: America/Indiana/Vincennes
            /// </summary>
            [EnumMember(Value = "America/Indiana/Vincennes")]
            AmericaIndianaVincennes = 122,

            /// <summary>
            /// Enum AmericaIndianaWinamac for value: America/Indiana/Winamac
            /// </summary>
            [EnumMember(Value = "America/Indiana/Winamac")]
            AmericaIndianaWinamac = 123,

            /// <summary>
            /// Enum AmericaInuvik for value: America/Inuvik
            /// </summary>
            [EnumMember(Value = "America/Inuvik")]
            AmericaInuvik = 124,

            /// <summary>
            /// Enum AmericaIqaluit for value: America/Iqaluit
            /// </summary>
            [EnumMember(Value = "America/Iqaluit")]
            AmericaIqaluit = 125,

            /// <summary>
            /// Enum AmericaJamaica for value: America/Jamaica
            /// </summary>
            [EnumMember(Value = "America/Jamaica")]
            AmericaJamaica = 126,

            /// <summary>
            /// Enum AmericaJuneau for value: America/Juneau
            /// </summary>
            [EnumMember(Value = "America/Juneau")]
            AmericaJuneau = 127,

            /// <summary>
            /// Enum AmericaKentuckyLouisville for value: America/Kentucky/Louisville
            /// </summary>
            [EnumMember(Value = "America/Kentucky/Louisville")]
            AmericaKentuckyLouisville = 128,

            /// <summary>
            /// Enum AmericaKentuckyMonticello for value: America/Kentucky/Monticello
            /// </summary>
            [EnumMember(Value = "America/Kentucky/Monticello")]
            AmericaKentuckyMonticello = 129,

            /// <summary>
            /// Enum AmericaKralendijk for value: America/Kralendijk
            /// </summary>
            [EnumMember(Value = "America/Kralendijk")]
            AmericaKralendijk = 130,

            /// <summary>
            /// Enum AmericaLaPaz for value: America/La_Paz
            /// </summary>
            [EnumMember(Value = "America/La_Paz")]
            AmericaLaPaz = 131,

            /// <summary>
            /// Enum AmericaLima for value: America/Lima
            /// </summary>
            [EnumMember(Value = "America/Lima")]
            AmericaLima = 132,

            /// <summary>
            /// Enum AmericaLosAngeles for value: America/Los_Angeles
            /// </summary>
            [EnumMember(Value = "America/Los_Angeles")]
            AmericaLosAngeles = 133,

            /// <summary>
            /// Enum AmericaLowerPrinces for value: America/Lower_Princes
            /// </summary>
            [EnumMember(Value = "America/Lower_Princes")]
            AmericaLowerPrinces = 134,

            /// <summary>
            /// Enum AmericaMaceio for value: America/Maceio
            /// </summary>
            [EnumMember(Value = "America/Maceio")]
            AmericaMaceio = 135,

            /// <summary>
            /// Enum AmericaManagua for value: America/Managua
            /// </summary>
            [EnumMember(Value = "America/Managua")]
            AmericaManagua = 136,

            /// <summary>
            /// Enum AmericaManaus for value: America/Manaus
            /// </summary>
            [EnumMember(Value = "America/Manaus")]
            AmericaManaus = 137,

            /// <summary>
            /// Enum AmericaMarigot for value: America/Marigot
            /// </summary>
            [EnumMember(Value = "America/Marigot")]
            AmericaMarigot = 138,

            /// <summary>
            /// Enum AmericaMartinique for value: America/Martinique
            /// </summary>
            [EnumMember(Value = "America/Martinique")]
            AmericaMartinique = 139,

            /// <summary>
            /// Enum AmericaMatamoros for value: America/Matamoros
            /// </summary>
            [EnumMember(Value = "America/Matamoros")]
            AmericaMatamoros = 140,

            /// <summary>
            /// Enum AmericaMazatlan for value: America/Mazatlan
            /// </summary>
            [EnumMember(Value = "America/Mazatlan")]
            AmericaMazatlan = 141,

            /// <summary>
            /// Enum AmericaMenominee for value: America/Menominee
            /// </summary>
            [EnumMember(Value = "America/Menominee")]
            AmericaMenominee = 142,

            /// <summary>
            /// Enum AmericaMerida for value: America/Merida
            /// </summary>
            [EnumMember(Value = "America/Merida")]
            AmericaMerida = 143,

            /// <summary>
            /// Enum AmericaMetlakatla for value: America/Metlakatla
            /// </summary>
            [EnumMember(Value = "America/Metlakatla")]
            AmericaMetlakatla = 144,

            /// <summary>
            /// Enum AmericaMexicoCity for value: America/Mexico_City
            /// </summary>
            [EnumMember(Value = "America/Mexico_City")]
            AmericaMexicoCity = 145,

            /// <summary>
            /// Enum AmericaMiquelon for value: America/Miquelon
            /// </summary>
            [EnumMember(Value = "America/Miquelon")]
            AmericaMiquelon = 146,

            /// <summary>
            /// Enum AmericaMoncton for value: America/Moncton
            /// </summary>
            [EnumMember(Value = "America/Moncton")]
            AmericaMoncton = 147,

            /// <summary>
            /// Enum AmericaMonterrey for value: America/Monterrey
            /// </summary>
            [EnumMember(Value = "America/Monterrey")]
            AmericaMonterrey = 148,

            /// <summary>
            /// Enum AmericaMontevideo for value: America/Montevideo
            /// </summary>
            [EnumMember(Value = "America/Montevideo")]
            AmericaMontevideo = 149,

            /// <summary>
            /// Enum AmericaMontserrat for value: America/Montserrat
            /// </summary>
            [EnumMember(Value = "America/Montserrat")]
            AmericaMontserrat = 150,

            /// <summary>
            /// Enum AmericaNassau for value: America/Nassau
            /// </summary>
            [EnumMember(Value = "America/Nassau")]
            AmericaNassau = 151,

            /// <summary>
            /// Enum AmericaNewYork for value: America/New_York
            /// </summary>
            [EnumMember(Value = "America/New_York")]
            AmericaNewYork = 152,

            /// <summary>
            /// Enum AmericaNipigon for value: America/Nipigon
            /// </summary>
            [EnumMember(Value = "America/Nipigon")]
            AmericaNipigon = 153,

            /// <summary>
            /// Enum AmericaNome for value: America/Nome
            /// </summary>
            [EnumMember(Value = "America/Nome")]
            AmericaNome = 154,

            /// <summary>
            /// Enum AmericaNoronha for value: America/Noronha
            /// </summary>
            [EnumMember(Value = "America/Noronha")]
            AmericaNoronha = 155,

            /// <summary>
            /// Enum AmericaNorthDakotaBeulah for value: America/North_Dakota/Beulah
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/Beulah")]
            AmericaNorthDakotaBeulah = 156,

            /// <summary>
            /// Enum AmericaNorthDakotaCenter for value: America/North_Dakota/Center
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/Center")]
            AmericaNorthDakotaCenter = 157,

            /// <summary>
            /// Enum AmericaNorthDakotaNewSalem for value: America/North_Dakota/New_Salem
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/New_Salem")]
            AmericaNorthDakotaNewSalem = 158,

            /// <summary>
            /// Enum AmericaNuuk for value: America/Nuuk
            /// </summary>
            [EnumMember(Value = "America/Nuuk")]
            AmericaNuuk = 159,

            /// <summary>
            /// Enum AmericaOjinaga for value: America/Ojinaga
            /// </summary>
            [EnumMember(Value = "America/Ojinaga")]
            AmericaOjinaga = 160,

            /// <summary>
            /// Enum AmericaPanama for value: America/Panama
            /// </summary>
            [EnumMember(Value = "America/Panama")]
            AmericaPanama = 161,

            /// <summary>
            /// Enum AmericaPangnirtung for value: America/Pangnirtung
            /// </summary>
            [EnumMember(Value = "America/Pangnirtung")]
            AmericaPangnirtung = 162,

            /// <summary>
            /// Enum AmericaParamaribo for value: America/Paramaribo
            /// </summary>
            [EnumMember(Value = "America/Paramaribo")]
            AmericaParamaribo = 163,

            /// <summary>
            /// Enum AmericaPhoenix for value: America/Phoenix
            /// </summary>
            [EnumMember(Value = "America/Phoenix")]
            AmericaPhoenix = 164,

            /// <summary>
            /// Enum AmericaPortAuPrince for value: America/Port-au-Prince
            /// </summary>
            [EnumMember(Value = "America/Port-au-Prince")]
            AmericaPortAuPrince = 165,

            /// <summary>
            /// Enum AmericaPortOfSpain for value: America/Port_of_Spain
            /// </summary>
            [EnumMember(Value = "America/Port_of_Spain")]
            AmericaPortOfSpain = 166,

            /// <summary>
            /// Enum AmericaPortoVelho for value: America/Porto_Velho
            /// </summary>
            [EnumMember(Value = "America/Porto_Velho")]
            AmericaPortoVelho = 167,

            /// <summary>
            /// Enum AmericaPuertoRico for value: America/Puerto_Rico
            /// </summary>
            [EnumMember(Value = "America/Puerto_Rico")]
            AmericaPuertoRico = 168,

            /// <summary>
            /// Enum AmericaPuntaArenas for value: America/Punta_Arenas
            /// </summary>
            [EnumMember(Value = "America/Punta_Arenas")]
            AmericaPuntaArenas = 169,

            /// <summary>
            /// Enum AmericaRainyRiver for value: America/Rainy_River
            /// </summary>
            [EnumMember(Value = "America/Rainy_River")]
            AmericaRainyRiver = 170,

            /// <summary>
            /// Enum AmericaRankinInlet for value: America/Rankin_Inlet
            /// </summary>
            [EnumMember(Value = "America/Rankin_Inlet")]
            AmericaRankinInlet = 171,

            /// <summary>
            /// Enum AmericaRecife for value: America/Recife
            /// </summary>
            [EnumMember(Value = "America/Recife")]
            AmericaRecife = 172,

            /// <summary>
            /// Enum AmericaRegina for value: America/Regina
            /// </summary>
            [EnumMember(Value = "America/Regina")]
            AmericaRegina = 173,

            /// <summary>
            /// Enum AmericaResolute for value: America/Resolute
            /// </summary>
            [EnumMember(Value = "America/Resolute")]
            AmericaResolute = 174,

            /// <summary>
            /// Enum AmericaRioBranco for value: America/Rio_Branco
            /// </summary>
            [EnumMember(Value = "America/Rio_Branco")]
            AmericaRioBranco = 175,

            /// <summary>
            /// Enum AmericaSantarem for value: America/Santarem
            /// </summary>
            [EnumMember(Value = "America/Santarem")]
            AmericaSantarem = 176,

            /// <summary>
            /// Enum AmericaSantiago for value: America/Santiago
            /// </summary>
            [EnumMember(Value = "America/Santiago")]
            AmericaSantiago = 177,

            /// <summary>
            /// Enum AmericaSantoDomingo for value: America/Santo_Domingo
            /// </summary>
            [EnumMember(Value = "America/Santo_Domingo")]
            AmericaSantoDomingo = 178,

            /// <summary>
            /// Enum AmericaSaoPaulo for value: America/Sao_Paulo
            /// </summary>
            [EnumMember(Value = "America/Sao_Paulo")]
            AmericaSaoPaulo = 179,

            /// <summary>
            /// Enum AmericaScoresbysund for value: America/Scoresbysund
            /// </summary>
            [EnumMember(Value = "America/Scoresbysund")]
            AmericaScoresbysund = 180,

            /// <summary>
            /// Enum AmericaSitka for value: America/Sitka
            /// </summary>
            [EnumMember(Value = "America/Sitka")]
            AmericaSitka = 181,

            /// <summary>
            /// Enum AmericaStBarthelemy for value: America/St_Barthelemy
            /// </summary>
            [EnumMember(Value = "America/St_Barthelemy")]
            AmericaStBarthelemy = 182,

            /// <summary>
            /// Enum AmericaStJohns for value: America/St_Johns
            /// </summary>
            [EnumMember(Value = "America/St_Johns")]
            AmericaStJohns = 183,

            /// <summary>
            /// Enum AmericaStKitts for value: America/St_Kitts
            /// </summary>
            [EnumMember(Value = "America/St_Kitts")]
            AmericaStKitts = 184,

            /// <summary>
            /// Enum AmericaStLucia for value: America/St_Lucia
            /// </summary>
            [EnumMember(Value = "America/St_Lucia")]
            AmericaStLucia = 185,

            /// <summary>
            /// Enum AmericaStThomas for value: America/St_Thomas
            /// </summary>
            [EnumMember(Value = "America/St_Thomas")]
            AmericaStThomas = 186,

            /// <summary>
            /// Enum AmericaStVincent for value: America/St_Vincent
            /// </summary>
            [EnumMember(Value = "America/St_Vincent")]
            AmericaStVincent = 187,

            /// <summary>
            /// Enum AmericaSwiftCurrent for value: America/Swift_Current
            /// </summary>
            [EnumMember(Value = "America/Swift_Current")]
            AmericaSwiftCurrent = 188,

            /// <summary>
            /// Enum AmericaTegucigalpa for value: America/Tegucigalpa
            /// </summary>
            [EnumMember(Value = "America/Tegucigalpa")]
            AmericaTegucigalpa = 189,

            /// <summary>
            /// Enum AmericaThule for value: America/Thule
            /// </summary>
            [EnumMember(Value = "America/Thule")]
            AmericaThule = 190,

            /// <summary>
            /// Enum AmericaThunderBay for value: America/Thunder_Bay
            /// </summary>
            [EnumMember(Value = "America/Thunder_Bay")]
            AmericaThunderBay = 191,

            /// <summary>
            /// Enum AmericaTijuana for value: America/Tijuana
            /// </summary>
            [EnumMember(Value = "America/Tijuana")]
            AmericaTijuana = 192,

            /// <summary>
            /// Enum AmericaToronto for value: America/Toronto
            /// </summary>
            [EnumMember(Value = "America/Toronto")]
            AmericaToronto = 193,

            /// <summary>
            /// Enum AmericaTortola for value: America/Tortola
            /// </summary>
            [EnumMember(Value = "America/Tortola")]
            AmericaTortola = 194,

            /// <summary>
            /// Enum AmericaVancouver for value: America/Vancouver
            /// </summary>
            [EnumMember(Value = "America/Vancouver")]
            AmericaVancouver = 195,

            /// <summary>
            /// Enum AmericaWhitehorse for value: America/Whitehorse
            /// </summary>
            [EnumMember(Value = "America/Whitehorse")]
            AmericaWhitehorse = 196,

            /// <summary>
            /// Enum AmericaWinnipeg for value: America/Winnipeg
            /// </summary>
            [EnumMember(Value = "America/Winnipeg")]
            AmericaWinnipeg = 197,

            /// <summary>
            /// Enum AmericaYakutat for value: America/Yakutat
            /// </summary>
            [EnumMember(Value = "America/Yakutat")]
            AmericaYakutat = 198,

            /// <summary>
            /// Enum AmericaYellowknife for value: America/Yellowknife
            /// </summary>
            [EnumMember(Value = "America/Yellowknife")]
            AmericaYellowknife = 199,

            /// <summary>
            /// Enum AntarcticaCasey for value: Antarctica/Casey
            /// </summary>
            [EnumMember(Value = "Antarctica/Casey")]
            AntarcticaCasey = 200,

            /// <summary>
            /// Enum AntarcticaDavis for value: Antarctica/Davis
            /// </summary>
            [EnumMember(Value = "Antarctica/Davis")]
            AntarcticaDavis = 201,

            /// <summary>
            /// Enum AntarcticaDumontDUrville for value: Antarctica/DumontDUrville
            /// </summary>
            [EnumMember(Value = "Antarctica/DumontDUrville")]
            AntarcticaDumontDUrville = 202,

            /// <summary>
            /// Enum AntarcticaMacquarie for value: Antarctica/Macquarie
            /// </summary>
            [EnumMember(Value = "Antarctica/Macquarie")]
            AntarcticaMacquarie = 203,

            /// <summary>
            /// Enum AntarcticaMawson for value: Antarctica/Mawson
            /// </summary>
            [EnumMember(Value = "Antarctica/Mawson")]
            AntarcticaMawson = 204,

            /// <summary>
            /// Enum AntarcticaMcMurdo for value: Antarctica/McMurdo
            /// </summary>
            [EnumMember(Value = "Antarctica/McMurdo")]
            AntarcticaMcMurdo = 205,

            /// <summary>
            /// Enum AntarcticaPalmer for value: Antarctica/Palmer
            /// </summary>
            [EnumMember(Value = "Antarctica/Palmer")]
            AntarcticaPalmer = 206,

            /// <summary>
            /// Enum AntarcticaRothera for value: Antarctica/Rothera
            /// </summary>
            [EnumMember(Value = "Antarctica/Rothera")]
            AntarcticaRothera = 207,

            /// <summary>
            /// Enum AntarcticaSyowa for value: Antarctica/Syowa
            /// </summary>
            [EnumMember(Value = "Antarctica/Syowa")]
            AntarcticaSyowa = 208,

            /// <summary>
            /// Enum AntarcticaTroll for value: Antarctica/Troll
            /// </summary>
            [EnumMember(Value = "Antarctica/Troll")]
            AntarcticaTroll = 209,

            /// <summary>
            /// Enum AntarcticaVostok for value: Antarctica/Vostok
            /// </summary>
            [EnumMember(Value = "Antarctica/Vostok")]
            AntarcticaVostok = 210,

            /// <summary>
            /// Enum ArcticLongyearbyen for value: Arctic/Longyearbyen
            /// </summary>
            [EnumMember(Value = "Arctic/Longyearbyen")]
            ArcticLongyearbyen = 211,

            /// <summary>
            /// Enum AsiaAden for value: Asia/Aden
            /// </summary>
            [EnumMember(Value = "Asia/Aden")]
            AsiaAden = 212,

            /// <summary>
            /// Enum AsiaAlmaty for value: Asia/Almaty
            /// </summary>
            [EnumMember(Value = "Asia/Almaty")]
            AsiaAlmaty = 213,

            /// <summary>
            /// Enum AsiaAmman for value: Asia/Amman
            /// </summary>
            [EnumMember(Value = "Asia/Amman")]
            AsiaAmman = 214,

            /// <summary>
            /// Enum AsiaAnadyr for value: Asia/Anadyr
            /// </summary>
            [EnumMember(Value = "Asia/Anadyr")]
            AsiaAnadyr = 215,

            /// <summary>
            /// Enum AsiaAqtau for value: Asia/Aqtau
            /// </summary>
            [EnumMember(Value = "Asia/Aqtau")]
            AsiaAqtau = 216,

            /// <summary>
            /// Enum AsiaAqtobe for value: Asia/Aqtobe
            /// </summary>
            [EnumMember(Value = "Asia/Aqtobe")]
            AsiaAqtobe = 217,

            /// <summary>
            /// Enum AsiaAshgabat for value: Asia/Ashgabat
            /// </summary>
            [EnumMember(Value = "Asia/Ashgabat")]
            AsiaAshgabat = 218,

            /// <summary>
            /// Enum AsiaAtyrau for value: Asia/Atyrau
            /// </summary>
            [EnumMember(Value = "Asia/Atyrau")]
            AsiaAtyrau = 219,

            /// <summary>
            /// Enum AsiaBaghdad for value: Asia/Baghdad
            /// </summary>
            [EnumMember(Value = "Asia/Baghdad")]
            AsiaBaghdad = 220,

            /// <summary>
            /// Enum AsiaBahrain for value: Asia/Bahrain
            /// </summary>
            [EnumMember(Value = "Asia/Bahrain")]
            AsiaBahrain = 221,

            /// <summary>
            /// Enum AsiaBaku for value: Asia/Baku
            /// </summary>
            [EnumMember(Value = "Asia/Baku")]
            AsiaBaku = 222,

            /// <summary>
            /// Enum AsiaBangkok for value: Asia/Bangkok
            /// </summary>
            [EnumMember(Value = "Asia/Bangkok")]
            AsiaBangkok = 223,

            /// <summary>
            /// Enum AsiaBarnaul for value: Asia/Barnaul
            /// </summary>
            [EnumMember(Value = "Asia/Barnaul")]
            AsiaBarnaul = 224,

            /// <summary>
            /// Enum AsiaBeirut for value: Asia/Beirut
            /// </summary>
            [EnumMember(Value = "Asia/Beirut")]
            AsiaBeirut = 225,

            /// <summary>
            /// Enum AsiaBishkek for value: Asia/Bishkek
            /// </summary>
            [EnumMember(Value = "Asia/Bishkek")]
            AsiaBishkek = 226,

            /// <summary>
            /// Enum AsiaBrunei for value: Asia/Brunei
            /// </summary>
            [EnumMember(Value = "Asia/Brunei")]
            AsiaBrunei = 227,

            /// <summary>
            /// Enum AsiaChita for value: Asia/Chita
            /// </summary>
            [EnumMember(Value = "Asia/Chita")]
            AsiaChita = 228,

            /// <summary>
            /// Enum AsiaChoibalsan for value: Asia/Choibalsan
            /// </summary>
            [EnumMember(Value = "Asia/Choibalsan")]
            AsiaChoibalsan = 229,

            /// <summary>
            /// Enum AsiaColombo for value: Asia/Colombo
            /// </summary>
            [EnumMember(Value = "Asia/Colombo")]
            AsiaColombo = 230,

            /// <summary>
            /// Enum AsiaDamascus for value: Asia/Damascus
            /// </summary>
            [EnumMember(Value = "Asia/Damascus")]
            AsiaDamascus = 231,

            /// <summary>
            /// Enum AsiaDhaka for value: Asia/Dhaka
            /// </summary>
            [EnumMember(Value = "Asia/Dhaka")]
            AsiaDhaka = 232,

            /// <summary>
            /// Enum AsiaDili for value: Asia/Dili
            /// </summary>
            [EnumMember(Value = "Asia/Dili")]
            AsiaDili = 233,

            /// <summary>
            /// Enum AsiaDubai for value: Asia/Dubai
            /// </summary>
            [EnumMember(Value = "Asia/Dubai")]
            AsiaDubai = 234,

            /// <summary>
            /// Enum AsiaDushanbe for value: Asia/Dushanbe
            /// </summary>
            [EnumMember(Value = "Asia/Dushanbe")]
            AsiaDushanbe = 235,

            /// <summary>
            /// Enum AsiaFamagusta for value: Asia/Famagusta
            /// </summary>
            [EnumMember(Value = "Asia/Famagusta")]
            AsiaFamagusta = 236,

            /// <summary>
            /// Enum AsiaGaza for value: Asia/Gaza
            /// </summary>
            [EnumMember(Value = "Asia/Gaza")]
            AsiaGaza = 237,

            /// <summary>
            /// Enum AsiaHebron for value: Asia/Hebron
            /// </summary>
            [EnumMember(Value = "Asia/Hebron")]
            AsiaHebron = 238,

            /// <summary>
            /// Enum AsiaHoChiMinh for value: Asia/Ho_Chi_Minh
            /// </summary>
            [EnumMember(Value = "Asia/Ho_Chi_Minh")]
            AsiaHoChiMinh = 239,

            /// <summary>
            /// Enum AsiaHongKong for value: Asia/Hong_Kong
            /// </summary>
            [EnumMember(Value = "Asia/Hong_Kong")]
            AsiaHongKong = 240,

            /// <summary>
            /// Enum AsiaHovd for value: Asia/Hovd
            /// </summary>
            [EnumMember(Value = "Asia/Hovd")]
            AsiaHovd = 241,

            /// <summary>
            /// Enum AsiaIrkutsk for value: Asia/Irkutsk
            /// </summary>
            [EnumMember(Value = "Asia/Irkutsk")]
            AsiaIrkutsk = 242,

            /// <summary>
            /// Enum AsiaJakarta for value: Asia/Jakarta
            /// </summary>
            [EnumMember(Value = "Asia/Jakarta")]
            AsiaJakarta = 243,

            /// <summary>
            /// Enum AsiaJayapura for value: Asia/Jayapura
            /// </summary>
            [EnumMember(Value = "Asia/Jayapura")]
            AsiaJayapura = 244,

            /// <summary>
            /// Enum AsiaJerusalem for value: Asia/Jerusalem
            /// </summary>
            [EnumMember(Value = "Asia/Jerusalem")]
            AsiaJerusalem = 245,

            /// <summary>
            /// Enum AsiaKabul for value: Asia/Kabul
            /// </summary>
            [EnumMember(Value = "Asia/Kabul")]
            AsiaKabul = 246,

            /// <summary>
            /// Enum AsiaKamchatka for value: Asia/Kamchatka
            /// </summary>
            [EnumMember(Value = "Asia/Kamchatka")]
            AsiaKamchatka = 247,

            /// <summary>
            /// Enum AsiaKarachi for value: Asia/Karachi
            /// </summary>
            [EnumMember(Value = "Asia/Karachi")]
            AsiaKarachi = 248,

            /// <summary>
            /// Enum AsiaKathmandu for value: Asia/Kathmandu
            /// </summary>
            [EnumMember(Value = "Asia/Kathmandu")]
            AsiaKathmandu = 249,

            /// <summary>
            /// Enum AsiaKhandyga for value: Asia/Khandyga
            /// </summary>
            [EnumMember(Value = "Asia/Khandyga")]
            AsiaKhandyga = 250,

            /// <summary>
            /// Enum AsiaKolkata for value: Asia/Kolkata
            /// </summary>
            [EnumMember(Value = "Asia/Kolkata")]
            AsiaKolkata = 251,

            /// <summary>
            /// Enum AsiaKrasnoyarsk for value: Asia/Krasnoyarsk
            /// </summary>
            [EnumMember(Value = "Asia/Krasnoyarsk")]
            AsiaKrasnoyarsk = 252,

            /// <summary>
            /// Enum AsiaKualaLumpur for value: Asia/Kuala_Lumpur
            /// </summary>
            [EnumMember(Value = "Asia/Kuala_Lumpur")]
            AsiaKualaLumpur = 253,

            /// <summary>
            /// Enum AsiaKuching for value: Asia/Kuching
            /// </summary>
            [EnumMember(Value = "Asia/Kuching")]
            AsiaKuching = 254,

            /// <summary>
            /// Enum AsiaKuwait for value: Asia/Kuwait
            /// </summary>
            [EnumMember(Value = "Asia/Kuwait")]
            AsiaKuwait = 255,

            /// <summary>
            /// Enum AsiaMacau for value: Asia/Macau
            /// </summary>
            [EnumMember(Value = "Asia/Macau")]
            AsiaMacau = 256,

            /// <summary>
            /// Enum AsiaMagadan for value: Asia/Magadan
            /// </summary>
            [EnumMember(Value = "Asia/Magadan")]
            AsiaMagadan = 257,

            /// <summary>
            /// Enum AsiaMakassar for value: Asia/Makassar
            /// </summary>
            [EnumMember(Value = "Asia/Makassar")]
            AsiaMakassar = 258,

            /// <summary>
            /// Enum AsiaManila for value: Asia/Manila
            /// </summary>
            [EnumMember(Value = "Asia/Manila")]
            AsiaManila = 259,

            /// <summary>
            /// Enum AsiaMuscat for value: Asia/Muscat
            /// </summary>
            [EnumMember(Value = "Asia/Muscat")]
            AsiaMuscat = 260,

            /// <summary>
            /// Enum AsiaNicosia for value: Asia/Nicosia
            /// </summary>
            [EnumMember(Value = "Asia/Nicosia")]
            AsiaNicosia = 261,

            /// <summary>
            /// Enum AsiaNovokuznetsk for value: Asia/Novokuznetsk
            /// </summary>
            [EnumMember(Value = "Asia/Novokuznetsk")]
            AsiaNovokuznetsk = 262,

            /// <summary>
            /// Enum AsiaNovosibirsk for value: Asia/Novosibirsk
            /// </summary>
            [EnumMember(Value = "Asia/Novosibirsk")]
            AsiaNovosibirsk = 263,

            /// <summary>
            /// Enum AsiaOmsk for value: Asia/Omsk
            /// </summary>
            [EnumMember(Value = "Asia/Omsk")]
            AsiaOmsk = 264,

            /// <summary>
            /// Enum AsiaOral for value: Asia/Oral
            /// </summary>
            [EnumMember(Value = "Asia/Oral")]
            AsiaOral = 265,

            /// <summary>
            /// Enum AsiaPhnomPenh for value: Asia/Phnom_Penh
            /// </summary>
            [EnumMember(Value = "Asia/Phnom_Penh")]
            AsiaPhnomPenh = 266,

            /// <summary>
            /// Enum AsiaPontianak for value: Asia/Pontianak
            /// </summary>
            [EnumMember(Value = "Asia/Pontianak")]
            AsiaPontianak = 267,

            /// <summary>
            /// Enum AsiaPyongyang for value: Asia/Pyongyang
            /// </summary>
            [EnumMember(Value = "Asia/Pyongyang")]
            AsiaPyongyang = 268,

            /// <summary>
            /// Enum AsiaQatar for value: Asia/Qatar
            /// </summary>
            [EnumMember(Value = "Asia/Qatar")]
            AsiaQatar = 269,

            /// <summary>
            /// Enum AsiaQostanay for value: Asia/Qostanay
            /// </summary>
            [EnumMember(Value = "Asia/Qostanay")]
            AsiaQostanay = 270,

            /// <summary>
            /// Enum AsiaQyzylorda for value: Asia/Qyzylorda
            /// </summary>
            [EnumMember(Value = "Asia/Qyzylorda")]
            AsiaQyzylorda = 271,

            /// <summary>
            /// Enum AsiaRiyadh for value: Asia/Riyadh
            /// </summary>
            [EnumMember(Value = "Asia/Riyadh")]
            AsiaRiyadh = 272,

            /// <summary>
            /// Enum AsiaSakhalin for value: Asia/Sakhalin
            /// </summary>
            [EnumMember(Value = "Asia/Sakhalin")]
            AsiaSakhalin = 273,

            /// <summary>
            /// Enum AsiaSamarkand for value: Asia/Samarkand
            /// </summary>
            [EnumMember(Value = "Asia/Samarkand")]
            AsiaSamarkand = 274,

            /// <summary>
            /// Enum AsiaSeoul for value: Asia/Seoul
            /// </summary>
            [EnumMember(Value = "Asia/Seoul")]
            AsiaSeoul = 275,

            /// <summary>
            /// Enum AsiaShanghai for value: Asia/Shanghai
            /// </summary>
            [EnumMember(Value = "Asia/Shanghai")]
            AsiaShanghai = 276,

            /// <summary>
            /// Enum AsiaSingapore for value: Asia/Singapore
            /// </summary>
            [EnumMember(Value = "Asia/Singapore")]
            AsiaSingapore = 277,

            /// <summary>
            /// Enum AsiaSrednekolymsk for value: Asia/Srednekolymsk
            /// </summary>
            [EnumMember(Value = "Asia/Srednekolymsk")]
            AsiaSrednekolymsk = 278,

            /// <summary>
            /// Enum AsiaTaipei for value: Asia/Taipei
            /// </summary>
            [EnumMember(Value = "Asia/Taipei")]
            AsiaTaipei = 279,

            /// <summary>
            /// Enum AsiaTashkent for value: Asia/Tashkent
            /// </summary>
            [EnumMember(Value = "Asia/Tashkent")]
            AsiaTashkent = 280,

            /// <summary>
            /// Enum AsiaTbilisi for value: Asia/Tbilisi
            /// </summary>
            [EnumMember(Value = "Asia/Tbilisi")]
            AsiaTbilisi = 281,

            /// <summary>
            /// Enum AsiaTehran for value: Asia/Tehran
            /// </summary>
            [EnumMember(Value = "Asia/Tehran")]
            AsiaTehran = 282,

            /// <summary>
            /// Enum AsiaThimphu for value: Asia/Thimphu
            /// </summary>
            [EnumMember(Value = "Asia/Thimphu")]
            AsiaThimphu = 283,

            /// <summary>
            /// Enum AsiaTokyo for value: Asia/Tokyo
            /// </summary>
            [EnumMember(Value = "Asia/Tokyo")]
            AsiaTokyo = 284,

            /// <summary>
            /// Enum AsiaTomsk for value: Asia/Tomsk
            /// </summary>
            [EnumMember(Value = "Asia/Tomsk")]
            AsiaTomsk = 285,

            /// <summary>
            /// Enum AsiaUlaanbaatar for value: Asia/Ulaanbaatar
            /// </summary>
            [EnumMember(Value = "Asia/Ulaanbaatar")]
            AsiaUlaanbaatar = 286,

            /// <summary>
            /// Enum AsiaUrumqi for value: Asia/Urumqi
            /// </summary>
            [EnumMember(Value = "Asia/Urumqi")]
            AsiaUrumqi = 287,

            /// <summary>
            /// Enum AsiaUstNera for value: Asia/Ust-Nera
            /// </summary>
            [EnumMember(Value = "Asia/Ust-Nera")]
            AsiaUstNera = 288,

            /// <summary>
            /// Enum AsiaVientiane for value: Asia/Vientiane
            /// </summary>
            [EnumMember(Value = "Asia/Vientiane")]
            AsiaVientiane = 289,

            /// <summary>
            /// Enum AsiaVladivostok for value: Asia/Vladivostok
            /// </summary>
            [EnumMember(Value = "Asia/Vladivostok")]
            AsiaVladivostok = 290,

            /// <summary>
            /// Enum AsiaYakutsk for value: Asia/Yakutsk
            /// </summary>
            [EnumMember(Value = "Asia/Yakutsk")]
            AsiaYakutsk = 291,

            /// <summary>
            /// Enum AsiaYangon for value: Asia/Yangon
            /// </summary>
            [EnumMember(Value = "Asia/Yangon")]
            AsiaYangon = 292,

            /// <summary>
            /// Enum AsiaYekaterinburg for value: Asia/Yekaterinburg
            /// </summary>
            [EnumMember(Value = "Asia/Yekaterinburg")]
            AsiaYekaterinburg = 293,

            /// <summary>
            /// Enum AsiaYerevan for value: Asia/Yerevan
            /// </summary>
            [EnumMember(Value = "Asia/Yerevan")]
            AsiaYerevan = 294,

            /// <summary>
            /// Enum AtlanticAzores for value: Atlantic/Azores
            /// </summary>
            [EnumMember(Value = "Atlantic/Azores")]
            AtlanticAzores = 295,

            /// <summary>
            /// Enum AtlanticBermuda for value: Atlantic/Bermuda
            /// </summary>
            [EnumMember(Value = "Atlantic/Bermuda")]
            AtlanticBermuda = 296,

            /// <summary>
            /// Enum AtlanticCanary for value: Atlantic/Canary
            /// </summary>
            [EnumMember(Value = "Atlantic/Canary")]
            AtlanticCanary = 297,

            /// <summary>
            /// Enum AtlanticCapeVerde for value: Atlantic/Cape_Verde
            /// </summary>
            [EnumMember(Value = "Atlantic/Cape_Verde")]
            AtlanticCapeVerde = 298,

            /// <summary>
            /// Enum AtlanticFaroe for value: Atlantic/Faroe
            /// </summary>
            [EnumMember(Value = "Atlantic/Faroe")]
            AtlanticFaroe = 299,

            /// <summary>
            /// Enum AtlanticMadeira for value: Atlantic/Madeira
            /// </summary>
            [EnumMember(Value = "Atlantic/Madeira")]
            AtlanticMadeira = 300,

            /// <summary>
            /// Enum AtlanticReykjavik for value: Atlantic/Reykjavik
            /// </summary>
            [EnumMember(Value = "Atlantic/Reykjavik")]
            AtlanticReykjavik = 301,

            /// <summary>
            /// Enum AtlanticSouthGeorgia for value: Atlantic/South_Georgia
            /// </summary>
            [EnumMember(Value = "Atlantic/South_Georgia")]
            AtlanticSouthGeorgia = 302,

            /// <summary>
            /// Enum AtlanticStHelena for value: Atlantic/St_Helena
            /// </summary>
            [EnumMember(Value = "Atlantic/St_Helena")]
            AtlanticStHelena = 303,

            /// <summary>
            /// Enum AtlanticStanley for value: Atlantic/Stanley
            /// </summary>
            [EnumMember(Value = "Atlantic/Stanley")]
            AtlanticStanley = 304,

            /// <summary>
            /// Enum AustraliaAdelaide for value: Australia/Adelaide
            /// </summary>
            [EnumMember(Value = "Australia/Adelaide")]
            AustraliaAdelaide = 305,

            /// <summary>
            /// Enum AustraliaBrisbane for value: Australia/Brisbane
            /// </summary>
            [EnumMember(Value = "Australia/Brisbane")]
            AustraliaBrisbane = 306,

            /// <summary>
            /// Enum AustraliaBrokenHill for value: Australia/Broken_Hill
            /// </summary>
            [EnumMember(Value = "Australia/Broken_Hill")]
            AustraliaBrokenHill = 307,

            /// <summary>
            /// Enum AustraliaDarwin for value: Australia/Darwin
            /// </summary>
            [EnumMember(Value = "Australia/Darwin")]
            AustraliaDarwin = 308,

            /// <summary>
            /// Enum AustraliaEucla for value: Australia/Eucla
            /// </summary>
            [EnumMember(Value = "Australia/Eucla")]
            AustraliaEucla = 309,

            /// <summary>
            /// Enum AustraliaHobart for value: Australia/Hobart
            /// </summary>
            [EnumMember(Value = "Australia/Hobart")]
            AustraliaHobart = 310,

            /// <summary>
            /// Enum AustraliaLindeman for value: Australia/Lindeman
            /// </summary>
            [EnumMember(Value = "Australia/Lindeman")]
            AustraliaLindeman = 311,

            /// <summary>
            /// Enum AustraliaLordHowe for value: Australia/Lord_Howe
            /// </summary>
            [EnumMember(Value = "Australia/Lord_Howe")]
            AustraliaLordHowe = 312,

            /// <summary>
            /// Enum AustraliaMelbourne for value: Australia/Melbourne
            /// </summary>
            [EnumMember(Value = "Australia/Melbourne")]
            AustraliaMelbourne = 313,

            /// <summary>
            /// Enum AustraliaPerth for value: Australia/Perth
            /// </summary>
            [EnumMember(Value = "Australia/Perth")]
            AustraliaPerth = 314,

            /// <summary>
            /// Enum AustraliaSydney for value: Australia/Sydney
            /// </summary>
            [EnumMember(Value = "Australia/Sydney")]
            AustraliaSydney = 315,

            /// <summary>
            /// Enum CanadaAtlantic for value: Canada/Atlantic
            /// </summary>
            [EnumMember(Value = "Canada/Atlantic")]
            CanadaAtlantic = 316,

            /// <summary>
            /// Enum CanadaCentral for value: Canada/Central
            /// </summary>
            [EnumMember(Value = "Canada/Central")]
            CanadaCentral = 317,

            /// <summary>
            /// Enum CanadaEastern for value: Canada/Eastern
            /// </summary>
            [EnumMember(Value = "Canada/Eastern")]
            CanadaEastern = 318,

            /// <summary>
            /// Enum CanadaMountain for value: Canada/Mountain
            /// </summary>
            [EnumMember(Value = "Canada/Mountain")]
            CanadaMountain = 319,

            /// <summary>
            /// Enum CanadaNewfoundland for value: Canada/Newfoundland
            /// </summary>
            [EnumMember(Value = "Canada/Newfoundland")]
            CanadaNewfoundland = 320,

            /// <summary>
            /// Enum CanadaPacific for value: Canada/Pacific
            /// </summary>
            [EnumMember(Value = "Canada/Pacific")]
            CanadaPacific = 321,

            /// <summary>
            /// Enum EuropeAmsterdam for value: Europe/Amsterdam
            /// </summary>
            [EnumMember(Value = "Europe/Amsterdam")]
            EuropeAmsterdam = 322,

            /// <summary>
            /// Enum EuropeAndorra for value: Europe/Andorra
            /// </summary>
            [EnumMember(Value = "Europe/Andorra")]
            EuropeAndorra = 323,

            /// <summary>
            /// Enum EuropeAstrakhan for value: Europe/Astrakhan
            /// </summary>
            [EnumMember(Value = "Europe/Astrakhan")]
            EuropeAstrakhan = 324,

            /// <summary>
            /// Enum EuropeAthens for value: Europe/Athens
            /// </summary>
            [EnumMember(Value = "Europe/Athens")]
            EuropeAthens = 325,

            /// <summary>
            /// Enum EuropeBelgrade for value: Europe/Belgrade
            /// </summary>
            [EnumMember(Value = "Europe/Belgrade")]
            EuropeBelgrade = 326,

            /// <summary>
            /// Enum EuropeBerlin for value: Europe/Berlin
            /// </summary>
            [EnumMember(Value = "Europe/Berlin")]
            EuropeBerlin = 327,

            /// <summary>
            /// Enum EuropeBratislava for value: Europe/Bratislava
            /// </summary>
            [EnumMember(Value = "Europe/Bratislava")]
            EuropeBratislava = 328,

            /// <summary>
            /// Enum EuropeBrussels for value: Europe/Brussels
            /// </summary>
            [EnumMember(Value = "Europe/Brussels")]
            EuropeBrussels = 329,

            /// <summary>
            /// Enum EuropeBucharest for value: Europe/Bucharest
            /// </summary>
            [EnumMember(Value = "Europe/Bucharest")]
            EuropeBucharest = 330,

            /// <summary>
            /// Enum EuropeBudapest for value: Europe/Budapest
            /// </summary>
            [EnumMember(Value = "Europe/Budapest")]
            EuropeBudapest = 331,

            /// <summary>
            /// Enum EuropeBusingen for value: Europe/Busingen
            /// </summary>
            [EnumMember(Value = "Europe/Busingen")]
            EuropeBusingen = 332,

            /// <summary>
            /// Enum EuropeChisinau for value: Europe/Chisinau
            /// </summary>
            [EnumMember(Value = "Europe/Chisinau")]
            EuropeChisinau = 333,

            /// <summary>
            /// Enum EuropeCopenhagen for value: Europe/Copenhagen
            /// </summary>
            [EnumMember(Value = "Europe/Copenhagen")]
            EuropeCopenhagen = 334,

            /// <summary>
            /// Enum EuropeDublin for value: Europe/Dublin
            /// </summary>
            [EnumMember(Value = "Europe/Dublin")]
            EuropeDublin = 335,

            /// <summary>
            /// Enum EuropeGibraltar for value: Europe/Gibraltar
            /// </summary>
            [EnumMember(Value = "Europe/Gibraltar")]
            EuropeGibraltar = 336,

            /// <summary>
            /// Enum EuropeGuernsey for value: Europe/Guernsey
            /// </summary>
            [EnumMember(Value = "Europe/Guernsey")]
            EuropeGuernsey = 337,

            /// <summary>
            /// Enum EuropeHelsinki for value: Europe/Helsinki
            /// </summary>
            [EnumMember(Value = "Europe/Helsinki")]
            EuropeHelsinki = 338,

            /// <summary>
            /// Enum EuropeIsleOfMan for value: Europe/Isle_of_Man
            /// </summary>
            [EnumMember(Value = "Europe/Isle_of_Man")]
            EuropeIsleOfMan = 339,

            /// <summary>
            /// Enum EuropeIstanbul for value: Europe/Istanbul
            /// </summary>
            [EnumMember(Value = "Europe/Istanbul")]
            EuropeIstanbul = 340,

            /// <summary>
            /// Enum EuropeJersey for value: Europe/Jersey
            /// </summary>
            [EnumMember(Value = "Europe/Jersey")]
            EuropeJersey = 341,

            /// <summary>
            /// Enum EuropeKaliningrad for value: Europe/Kaliningrad
            /// </summary>
            [EnumMember(Value = "Europe/Kaliningrad")]
            EuropeKaliningrad = 342,

            /// <summary>
            /// Enum EuropeKiev for value: Europe/Kiev
            /// </summary>
            [EnumMember(Value = "Europe/Kiev")]
            EuropeKiev = 343,

            /// <summary>
            /// Enum EuropeKirov for value: Europe/Kirov
            /// </summary>
            [EnumMember(Value = "Europe/Kirov")]
            EuropeKirov = 344,

            /// <summary>
            /// Enum EuropeLisbon for value: Europe/Lisbon
            /// </summary>
            [EnumMember(Value = "Europe/Lisbon")]
            EuropeLisbon = 345,

            /// <summary>
            /// Enum EuropeLjubljana for value: Europe/Ljubljana
            /// </summary>
            [EnumMember(Value = "Europe/Ljubljana")]
            EuropeLjubljana = 346,

            /// <summary>
            /// Enum EuropeLondon for value: Europe/London
            /// </summary>
            [EnumMember(Value = "Europe/London")]
            EuropeLondon = 347,

            /// <summary>
            /// Enum EuropeLuxembourg for value: Europe/Luxembourg
            /// </summary>
            [EnumMember(Value = "Europe/Luxembourg")]
            EuropeLuxembourg = 348,

            /// <summary>
            /// Enum EuropeMadrid for value: Europe/Madrid
            /// </summary>
            [EnumMember(Value = "Europe/Madrid")]
            EuropeMadrid = 349,

            /// <summary>
            /// Enum EuropeMalta for value: Europe/Malta
            /// </summary>
            [EnumMember(Value = "Europe/Malta")]
            EuropeMalta = 350,

            /// <summary>
            /// Enum EuropeMariehamn for value: Europe/Mariehamn
            /// </summary>
            [EnumMember(Value = "Europe/Mariehamn")]
            EuropeMariehamn = 351,

            /// <summary>
            /// Enum EuropeMinsk for value: Europe/Minsk
            /// </summary>
            [EnumMember(Value = "Europe/Minsk")]
            EuropeMinsk = 352,

            /// <summary>
            /// Enum EuropeMonaco for value: Europe/Monaco
            /// </summary>
            [EnumMember(Value = "Europe/Monaco")]
            EuropeMonaco = 353,

            /// <summary>
            /// Enum EuropeMoscow for value: Europe/Moscow
            /// </summary>
            [EnumMember(Value = "Europe/Moscow")]
            EuropeMoscow = 354,

            /// <summary>
            /// Enum EuropeOslo for value: Europe/Oslo
            /// </summary>
            [EnumMember(Value = "Europe/Oslo")]
            EuropeOslo = 355,

            /// <summary>
            /// Enum EuropeParis for value: Europe/Paris
            /// </summary>
            [EnumMember(Value = "Europe/Paris")]
            EuropeParis = 356,

            /// <summary>
            /// Enum EuropePodgorica for value: Europe/Podgorica
            /// </summary>
            [EnumMember(Value = "Europe/Podgorica")]
            EuropePodgorica = 357,

            /// <summary>
            /// Enum EuropePrague for value: Europe/Prague
            /// </summary>
            [EnumMember(Value = "Europe/Prague")]
            EuropePrague = 358,

            /// <summary>
            /// Enum EuropeRiga for value: Europe/Riga
            /// </summary>
            [EnumMember(Value = "Europe/Riga")]
            EuropeRiga = 359,

            /// <summary>
            /// Enum EuropeRome for value: Europe/Rome
            /// </summary>
            [EnumMember(Value = "Europe/Rome")]
            EuropeRome = 360,

            /// <summary>
            /// Enum EuropeSamara for value: Europe/Samara
            /// </summary>
            [EnumMember(Value = "Europe/Samara")]
            EuropeSamara = 361,

            /// <summary>
            /// Enum EuropeSanMarino for value: Europe/San_Marino
            /// </summary>
            [EnumMember(Value = "Europe/San_Marino")]
            EuropeSanMarino = 362,

            /// <summary>
            /// Enum EuropeSarajevo for value: Europe/Sarajevo
            /// </summary>
            [EnumMember(Value = "Europe/Sarajevo")]
            EuropeSarajevo = 363,

            /// <summary>
            /// Enum EuropeSaratov for value: Europe/Saratov
            /// </summary>
            [EnumMember(Value = "Europe/Saratov")]
            EuropeSaratov = 364,

            /// <summary>
            /// Enum EuropeSimferopol for value: Europe/Simferopol
            /// </summary>
            [EnumMember(Value = "Europe/Simferopol")]
            EuropeSimferopol = 365,

            /// <summary>
            /// Enum EuropeSkopje for value: Europe/Skopje
            /// </summary>
            [EnumMember(Value = "Europe/Skopje")]
            EuropeSkopje = 366,

            /// <summary>
            /// Enum EuropeSofia for value: Europe/Sofia
            /// </summary>
            [EnumMember(Value = "Europe/Sofia")]
            EuropeSofia = 367,

            /// <summary>
            /// Enum EuropeStockholm for value: Europe/Stockholm
            /// </summary>
            [EnumMember(Value = "Europe/Stockholm")]
            EuropeStockholm = 368,

            /// <summary>
            /// Enum EuropeTallinn for value: Europe/Tallinn
            /// </summary>
            [EnumMember(Value = "Europe/Tallinn")]
            EuropeTallinn = 369,

            /// <summary>
            /// Enum EuropeTirane for value: Europe/Tirane
            /// </summary>
            [EnumMember(Value = "Europe/Tirane")]
            EuropeTirane = 370,

            /// <summary>
            /// Enum EuropeUlyanovsk for value: Europe/Ulyanovsk
            /// </summary>
            [EnumMember(Value = "Europe/Ulyanovsk")]
            EuropeUlyanovsk = 371,

            /// <summary>
            /// Enum EuropeUzhgorod for value: Europe/Uzhgorod
            /// </summary>
            [EnumMember(Value = "Europe/Uzhgorod")]
            EuropeUzhgorod = 372,

            /// <summary>
            /// Enum EuropeVaduz for value: Europe/Vaduz
            /// </summary>
            [EnumMember(Value = "Europe/Vaduz")]
            EuropeVaduz = 373,

            /// <summary>
            /// Enum EuropeVatican for value: Europe/Vatican
            /// </summary>
            [EnumMember(Value = "Europe/Vatican")]
            EuropeVatican = 374,

            /// <summary>
            /// Enum EuropeVienna for value: Europe/Vienna
            /// </summary>
            [EnumMember(Value = "Europe/Vienna")]
            EuropeVienna = 375,

            /// <summary>
            /// Enum EuropeVilnius for value: Europe/Vilnius
            /// </summary>
            [EnumMember(Value = "Europe/Vilnius")]
            EuropeVilnius = 376,

            /// <summary>
            /// Enum EuropeVolgograd for value: Europe/Volgograd
            /// </summary>
            [EnumMember(Value = "Europe/Volgograd")]
            EuropeVolgograd = 377,

            /// <summary>
            /// Enum EuropeWarsaw for value: Europe/Warsaw
            /// </summary>
            [EnumMember(Value = "Europe/Warsaw")]
            EuropeWarsaw = 378,

            /// <summary>
            /// Enum EuropeZagreb for value: Europe/Zagreb
            /// </summary>
            [EnumMember(Value = "Europe/Zagreb")]
            EuropeZagreb = 379,

            /// <summary>
            /// Enum EuropeZaporozhye for value: Europe/Zaporozhye
            /// </summary>
            [EnumMember(Value = "Europe/Zaporozhye")]
            EuropeZaporozhye = 380,

            /// <summary>
            /// Enum EuropeZurich for value: Europe/Zurich
            /// </summary>
            [EnumMember(Value = "Europe/Zurich")]
            EuropeZurich = 381,

            /// <summary>
            /// Enum GMT for value: GMT
            /// </summary>
            [EnumMember(Value = "GMT")]
            GMT = 382,

            /// <summary>
            /// Enum IndianAntananarivo for value: Indian/Antananarivo
            /// </summary>
            [EnumMember(Value = "Indian/Antananarivo")]
            IndianAntananarivo = 383,

            /// <summary>
            /// Enum IndianChagos for value: Indian/Chagos
            /// </summary>
            [EnumMember(Value = "Indian/Chagos")]
            IndianChagos = 384,

            /// <summary>
            /// Enum IndianChristmas for value: Indian/Christmas
            /// </summary>
            [EnumMember(Value = "Indian/Christmas")]
            IndianChristmas = 385,

            /// <summary>
            /// Enum IndianCocos for value: Indian/Cocos
            /// </summary>
            [EnumMember(Value = "Indian/Cocos")]
            IndianCocos = 386,

            /// <summary>
            /// Enum IndianComoro for value: Indian/Comoro
            /// </summary>
            [EnumMember(Value = "Indian/Comoro")]
            IndianComoro = 387,

            /// <summary>
            /// Enum IndianKerguelen for value: Indian/Kerguelen
            /// </summary>
            [EnumMember(Value = "Indian/Kerguelen")]
            IndianKerguelen = 388,

            /// <summary>
            /// Enum IndianMahe for value: Indian/Mahe
            /// </summary>
            [EnumMember(Value = "Indian/Mahe")]
            IndianMahe = 389,

            /// <summary>
            /// Enum IndianMaldives for value: Indian/Maldives
            /// </summary>
            [EnumMember(Value = "Indian/Maldives")]
            IndianMaldives = 390,

            /// <summary>
            /// Enum IndianMauritius for value: Indian/Mauritius
            /// </summary>
            [EnumMember(Value = "Indian/Mauritius")]
            IndianMauritius = 391,

            /// <summary>
            /// Enum IndianMayotte for value: Indian/Mayotte
            /// </summary>
            [EnumMember(Value = "Indian/Mayotte")]
            IndianMayotte = 392,

            /// <summary>
            /// Enum IndianReunion for value: Indian/Reunion
            /// </summary>
            [EnumMember(Value = "Indian/Reunion")]
            IndianReunion = 393,

            /// <summary>
            /// Enum PacificApia for value: Pacific/Apia
            /// </summary>
            [EnumMember(Value = "Pacific/Apia")]
            PacificApia = 394,

            /// <summary>
            /// Enum PacificAuckland for value: Pacific/Auckland
            /// </summary>
            [EnumMember(Value = "Pacific/Auckland")]
            PacificAuckland = 395,

            /// <summary>
            /// Enum PacificBougainville for value: Pacific/Bougainville
            /// </summary>
            [EnumMember(Value = "Pacific/Bougainville")]
            PacificBougainville = 396,

            /// <summary>
            /// Enum PacificChatham for value: Pacific/Chatham
            /// </summary>
            [EnumMember(Value = "Pacific/Chatham")]
            PacificChatham = 397,

            /// <summary>
            /// Enum PacificChuuk for value: Pacific/Chuuk
            /// </summary>
            [EnumMember(Value = "Pacific/Chuuk")]
            PacificChuuk = 398,

            /// <summary>
            /// Enum PacificEaster for value: Pacific/Easter
            /// </summary>
            [EnumMember(Value = "Pacific/Easter")]
            PacificEaster = 399,

            /// <summary>
            /// Enum PacificEfate for value: Pacific/Efate
            /// </summary>
            [EnumMember(Value = "Pacific/Efate")]
            PacificEfate = 400,

            /// <summary>
            /// Enum PacificEnderbury for value: Pacific/Enderbury
            /// </summary>
            [EnumMember(Value = "Pacific/Enderbury")]
            PacificEnderbury = 401,

            /// <summary>
            /// Enum PacificFakaofo for value: Pacific/Fakaofo
            /// </summary>
            [EnumMember(Value = "Pacific/Fakaofo")]
            PacificFakaofo = 402,

            /// <summary>
            /// Enum PacificFiji for value: Pacific/Fiji
            /// </summary>
            [EnumMember(Value = "Pacific/Fiji")]
            PacificFiji = 403,

            /// <summary>
            /// Enum PacificFunafuti for value: Pacific/Funafuti
            /// </summary>
            [EnumMember(Value = "Pacific/Funafuti")]
            PacificFunafuti = 404,

            /// <summary>
            /// Enum PacificGalapagos for value: Pacific/Galapagos
            /// </summary>
            [EnumMember(Value = "Pacific/Galapagos")]
            PacificGalapagos = 405,

            /// <summary>
            /// Enum PacificGambier for value: Pacific/Gambier
            /// </summary>
            [EnumMember(Value = "Pacific/Gambier")]
            PacificGambier = 406,

            /// <summary>
            /// Enum PacificGuadalcanal for value: Pacific/Guadalcanal
            /// </summary>
            [EnumMember(Value = "Pacific/Guadalcanal")]
            PacificGuadalcanal = 407,

            /// <summary>
            /// Enum PacificGuam for value: Pacific/Guam
            /// </summary>
            [EnumMember(Value = "Pacific/Guam")]
            PacificGuam = 408,

            /// <summary>
            /// Enum PacificHonolulu for value: Pacific/Honolulu
            /// </summary>
            [EnumMember(Value = "Pacific/Honolulu")]
            PacificHonolulu = 409,

            /// <summary>
            /// Enum PacificKiritimati for value: Pacific/Kiritimati
            /// </summary>
            [EnumMember(Value = "Pacific/Kiritimati")]
            PacificKiritimati = 410,

            /// <summary>
            /// Enum PacificKosrae for value: Pacific/Kosrae
            /// </summary>
            [EnumMember(Value = "Pacific/Kosrae")]
            PacificKosrae = 411,

            /// <summary>
            /// Enum PacificKwajalein for value: Pacific/Kwajalein
            /// </summary>
            [EnumMember(Value = "Pacific/Kwajalein")]
            PacificKwajalein = 412,

            /// <summary>
            /// Enum PacificMajuro for value: Pacific/Majuro
            /// </summary>
            [EnumMember(Value = "Pacific/Majuro")]
            PacificMajuro = 413,

            /// <summary>
            /// Enum PacificMarquesas for value: Pacific/Marquesas
            /// </summary>
            [EnumMember(Value = "Pacific/Marquesas")]
            PacificMarquesas = 414,

            /// <summary>
            /// Enum PacificMidway for value: Pacific/Midway
            /// </summary>
            [EnumMember(Value = "Pacific/Midway")]
            PacificMidway = 415,

            /// <summary>
            /// Enum PacificNauru for value: Pacific/Nauru
            /// </summary>
            [EnumMember(Value = "Pacific/Nauru")]
            PacificNauru = 416,

            /// <summary>
            /// Enum PacificNiue for value: Pacific/Niue
            /// </summary>
            [EnumMember(Value = "Pacific/Niue")]
            PacificNiue = 417,

            /// <summary>
            /// Enum PacificNorfolk for value: Pacific/Norfolk
            /// </summary>
            [EnumMember(Value = "Pacific/Norfolk")]
            PacificNorfolk = 418,

            /// <summary>
            /// Enum PacificNoumea for value: Pacific/Noumea
            /// </summary>
            [EnumMember(Value = "Pacific/Noumea")]
            PacificNoumea = 419,

            /// <summary>
            /// Enum PacificPagoPago for value: Pacific/Pago_Pago
            /// </summary>
            [EnumMember(Value = "Pacific/Pago_Pago")]
            PacificPagoPago = 420,

            /// <summary>
            /// Enum PacificPalau for value: Pacific/Palau
            /// </summary>
            [EnumMember(Value = "Pacific/Palau")]
            PacificPalau = 421,

            /// <summary>
            /// Enum PacificPitcairn for value: Pacific/Pitcairn
            /// </summary>
            [EnumMember(Value = "Pacific/Pitcairn")]
            PacificPitcairn = 422,

            /// <summary>
            /// Enum PacificPohnpei for value: Pacific/Pohnpei
            /// </summary>
            [EnumMember(Value = "Pacific/Pohnpei")]
            PacificPohnpei = 423,

            /// <summary>
            /// Enum PacificPortMoresby for value: Pacific/Port_Moresby
            /// </summary>
            [EnumMember(Value = "Pacific/Port_Moresby")]
            PacificPortMoresby = 424,

            /// <summary>
            /// Enum PacificRarotonga for value: Pacific/Rarotonga
            /// </summary>
            [EnumMember(Value = "Pacific/Rarotonga")]
            PacificRarotonga = 425,

            /// <summary>
            /// Enum PacificSaipan for value: Pacific/Saipan
            /// </summary>
            [EnumMember(Value = "Pacific/Saipan")]
            PacificSaipan = 426,

            /// <summary>
            /// Enum PacificTahiti for value: Pacific/Tahiti
            /// </summary>
            [EnumMember(Value = "Pacific/Tahiti")]
            PacificTahiti = 427,

            /// <summary>
            /// Enum PacificTarawa for value: Pacific/Tarawa
            /// </summary>
            [EnumMember(Value = "Pacific/Tarawa")]
            PacificTarawa = 428,

            /// <summary>
            /// Enum PacificTongatapu for value: Pacific/Tongatapu
            /// </summary>
            [EnumMember(Value = "Pacific/Tongatapu")]
            PacificTongatapu = 429,

            /// <summary>
            /// Enum PacificWake for value: Pacific/Wake
            /// </summary>
            [EnumMember(Value = "Pacific/Wake")]
            PacificWake = 430,

            /// <summary>
            /// Enum PacificWallis for value: Pacific/Wallis
            /// </summary>
            [EnumMember(Value = "Pacific/Wallis")]
            PacificWallis = 431,

            /// <summary>
            /// Enum USAlaska for value: US/Alaska
            /// </summary>
            [EnumMember(Value = "US/Alaska")]
            USAlaska = 432,

            /// <summary>
            /// Enum USArizona for value: US/Arizona
            /// </summary>
            [EnumMember(Value = "US/Arizona")]
            USArizona = 433,

            /// <summary>
            /// Enum USCentral for value: US/Central
            /// </summary>
            [EnumMember(Value = "US/Central")]
            USCentral = 434,

            /// <summary>
            /// Enum USEastern for value: US/Eastern
            /// </summary>
            [EnumMember(Value = "US/Eastern")]
            USEastern = 435,

            /// <summary>
            /// Enum USHawaii for value: US/Hawaii
            /// </summary>
            [EnumMember(Value = "US/Hawaii")]
            USHawaii = 436,

            /// <summary>
            /// Enum USMountain for value: US/Mountain
            /// </summary>
            [EnumMember(Value = "US/Mountain")]
            USMountain = 437,

            /// <summary>
            /// Enum USPacific for value: US/Pacific
            /// </summary>
            [EnumMember(Value = "US/Pacific")]
            USPacific = 438,

            /// <summary>
            /// Enum UTC for value: UTC
            /// </summary>
            [EnumMember(Value = "UTC")]
            UTC = 439
        }


        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name = "timezone", EmitDefaultValue = false)]
        public TimezoneEnum? Timezone { get; set; }
        /// <summary>
        /// Defines EffectiveMembershipLevel
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EffectiveMembershipLevelEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_8 for value: 8
            /// </summary>
            NUMBER_8 = 8,

            /// <summary>
            /// Enum NUMBER_15 for value: 15
            /// </summary>
            NUMBER_15 = 15
        }


        /// <summary>
        /// Gets or Sets EffectiveMembershipLevel
        /// </summary>
        [DataMember(Name = "effective_membership_level", IsRequired = true, EmitDefaultValue = true)]
        public EffectiveMembershipLevelEnum EffectiveMembershipLevel { get; set; }

        /// <summary>
        /// Returns false as EffectiveMembershipLevel should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeEffectiveMembershipLevel()
        {
            return false;
        }
        /// <summary>
        /// Defines WeekStartDay
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum WeekStartDayEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1
        }


        /// <summary>
        /// Gets or Sets WeekStartDay
        /// </summary>
        [DataMember(Name = "week_start_day", EmitDefaultValue = true)]
        public WeekStartDayEnum? WeekStartDay { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostHogTeam" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PostHogTeam() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostHogTeam" /> class.
        /// </summary>
        /// <param name="appUrls">appUrls.</param>
        /// <param name="name">name.</param>
        /// <param name="slackIncomingWebhook">slackIncomingWebhook.</param>
        /// <param name="anonymizeIps">anonymizeIps.</param>
        /// <param name="completedSnippetOnboarding">completedSnippetOnboarding.</param>
        /// <param name="testAccountFilters">testAccountFilters.</param>
        /// <param name="testAccountFiltersDefaultChecked">testAccountFiltersDefaultChecked.</param>
        /// <param name="pathCleaningFilters">pathCleaningFilters.</param>
        /// <param name="isDemo">isDemo.</param>
        /// <param name="timezone">timezone.</param>
        /// <param name="dataAttributes">dataAttributes.</param>
        /// <param name="personDisplayNameProperties">personDisplayNameProperties.</param>
        /// <param name="correlationConfig">correlationConfig.</param>
        /// <param name="autocaptureOptOut">autocaptureOptOut.</param>
        /// <param name="autocaptureExceptionsOptIn">autocaptureExceptionsOptIn.</param>
        /// <param name="autocaptureExceptionsErrorsToIgnore">autocaptureExceptionsErrorsToIgnore.</param>
        /// <param name="captureConsoleLogOptIn">captureConsoleLogOptIn.</param>
        /// <param name="capturePerformanceOptIn">capturePerformanceOptIn.</param>
        /// <param name="sessionRecordingOptIn">sessionRecordingOptIn.</param>
        /// <param name="sessionRecordingSampleRate">sessionRecordingSampleRate.</param>
        /// <param name="sessionRecordingMinimumDurationMilliseconds">sessionRecordingMinimumDurationMilliseconds.</param>
        /// <param name="sessionRecordingLinkedFlag">sessionRecordingLinkedFlag.</param>
        /// <param name="sessionRecordingNetworkPayloadCaptureConfig">sessionRecordingNetworkPayloadCaptureConfig.</param>
        /// <param name="accessControl">accessControl.</param>
        /// <param name="weekStartDay">weekStartDay.</param>
        /// <param name="primaryDashboard">primaryDashboard.</param>
        /// <param name="liveEventsColumns">liveEventsColumns.</param>
        /// <param name="recordingDomains">recordingDomains.</param>
        /// <param name="injectWebApps">injectWebApps.</param>
        /// <param name="extraSettings">extraSettings.</param>
        /// <param name="hasCompletedOnboardingFor">hasCompletedOnboardingFor.</param>
        /// <param name="surveysOptIn">surveysOptIn.</param>
        public PostHogTeam(List<string> appUrls = default(List<string>), string name = default(string), string slackIncomingWebhook = default(string), bool anonymizeIps = default(bool), bool completedSnippetOnboarding = default(bool), Dictionary<string, Object> testAccountFilters = default(Dictionary<string, Object>), bool? testAccountFiltersDefaultChecked = default(bool?), Dictionary<string, Object> pathCleaningFilters = default(Dictionary<string, Object>), bool isDemo = default(bool), TimezoneEnum? timezone = default(TimezoneEnum?), Dictionary<string, Object> dataAttributes = default(Dictionary<string, Object>), List<string> personDisplayNameProperties = default(List<string>), Dictionary<string, Object> correlationConfig = default(Dictionary<string, Object>), bool? autocaptureOptOut = default(bool?), bool? autocaptureExceptionsOptIn = default(bool?), Dictionary<string, Object> autocaptureExceptionsErrorsToIgnore = default(Dictionary<string, Object>), bool? captureConsoleLogOptIn = default(bool?), bool? capturePerformanceOptIn = default(bool?), bool sessionRecordingOptIn = default(bool), decimal? sessionRecordingSampleRate = default(decimal?), int? sessionRecordingMinimumDurationMilliseconds = default(int?), Dictionary<string, Object> sessionRecordingLinkedFlag = default(Dictionary<string, Object>), Dictionary<string, Object> sessionRecordingNetworkPayloadCaptureConfig = default(Dictionary<string, Object>), bool accessControl = default(bool), WeekStartDayEnum? weekStartDay = default(WeekStartDayEnum?), int? primaryDashboard = default(int?), List<string> liveEventsColumns = default(List<string>), List<string> recordingDomains = default(List<string>), bool? injectWebApps = default(bool?), Dictionary<string, Object> extraSettings = default(Dictionary<string, Object>), Dictionary<string, Object> hasCompletedOnboardingFor = default(Dictionary<string, Object>), bool? surveysOptIn = default(bool?))
        {
            this.AppUrls = appUrls;
            this.Name = name;
            this.SlackIncomingWebhook = slackIncomingWebhook;
            this.AnonymizeIps = anonymizeIps;
            this.CompletedSnippetOnboarding = completedSnippetOnboarding;
            this.TestAccountFilters = testAccountFilters;
            this.TestAccountFiltersDefaultChecked = testAccountFiltersDefaultChecked;
            this.PathCleaningFilters = pathCleaningFilters;
            this.IsDemo = isDemo;
            this.Timezone = timezone;
            this.DataAttributes = dataAttributes;
            this.PersonDisplayNameProperties = personDisplayNameProperties;
            this.CorrelationConfig = correlationConfig;
            this.AutocaptureOptOut = autocaptureOptOut;
            this.AutocaptureExceptionsOptIn = autocaptureExceptionsOptIn;
            this.AutocaptureExceptionsErrorsToIgnore = autocaptureExceptionsErrorsToIgnore;
            this.CaptureConsoleLogOptIn = captureConsoleLogOptIn;
            this.CapturePerformanceOptIn = capturePerformanceOptIn;
            this.SessionRecordingOptIn = sessionRecordingOptIn;
            this.SessionRecordingSampleRate = sessionRecordingSampleRate;
            this.SessionRecordingMinimumDurationMilliseconds = sessionRecordingMinimumDurationMilliseconds;
            this.SessionRecordingLinkedFlag = sessionRecordingLinkedFlag;
            this.SessionRecordingNetworkPayloadCaptureConfig = sessionRecordingNetworkPayloadCaptureConfig;
            this.AccessControl = accessControl;
            this.WeekStartDay = weekStartDay;
            this.PrimaryDashboard = primaryDashboard;
            this.LiveEventsColumns = liveEventsColumns;
            this.RecordingDomains = recordingDomains;
            this.InjectWebApps = injectWebApps;
            this.ExtraSettings = extraSettings;
            this.HasCompletedOnboardingFor = hasCompletedOnboardingFor;
            this.SurveysOptIn = surveysOptIn;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public int Id { get; private set; }

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Uuid
        /// </summary>
        [DataMember(Name = "uuid", IsRequired = true, EmitDefaultValue = true)]
        public Guid Uuid { get; private set; }

        /// <summary>
        /// Returns false as Uuid should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUuid()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Organization
        /// </summary>
        [DataMember(Name = "organization", IsRequired = true, EmitDefaultValue = true)]
        public Guid Organization { get; private set; }

        /// <summary>
        /// Returns false as Organization should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOrganization()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets ApiToken
        /// </summary>
        [DataMember(Name = "api_token", IsRequired = true, EmitDefaultValue = true)]
        public string ApiToken { get; private set; }

        /// <summary>
        /// Returns false as ApiToken should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeApiToken()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets AppUrls
        /// </summary>
        [DataMember(Name = "app_urls", EmitDefaultValue = false)]
        public List<string> AppUrls { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets SlackIncomingWebhook
        /// </summary>
        [DataMember(Name = "slack_incoming_webhook", EmitDefaultValue = true)]
        public string SlackIncomingWebhook { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedAt { get; private set; }

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updated_at", IsRequired = true, EmitDefaultValue = true)]
        public DateTime UpdatedAt { get; private set; }

        /// <summary>
        /// Returns false as UpdatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUpdatedAt()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets AnonymizeIps
        /// </summary>
        [DataMember(Name = "anonymize_ips", EmitDefaultValue = true)]
        public bool AnonymizeIps { get; set; }

        /// <summary>
        /// Gets or Sets CompletedSnippetOnboarding
        /// </summary>
        [DataMember(Name = "completed_snippet_onboarding", EmitDefaultValue = true)]
        public bool CompletedSnippetOnboarding { get; set; }

        /// <summary>
        /// Gets or Sets IngestedEvent
        /// </summary>
        [DataMember(Name = "ingested_event", IsRequired = true, EmitDefaultValue = true)]
        public bool IngestedEvent { get; private set; }

        /// <summary>
        /// Returns false as IngestedEvent should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIngestedEvent()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets TestAccountFilters
        /// </summary>
        [DataMember(Name = "test_account_filters", EmitDefaultValue = false)]
        public Dictionary<string, Object> TestAccountFilters { get; set; }

        /// <summary>
        /// Gets or Sets TestAccountFiltersDefaultChecked
        /// </summary>
        [DataMember(Name = "test_account_filters_default_checked", EmitDefaultValue = true)]
        public bool? TestAccountFiltersDefaultChecked { get; set; }

        /// <summary>
        /// Gets or Sets PathCleaningFilters
        /// </summary>
        [DataMember(Name = "path_cleaning_filters", EmitDefaultValue = true)]
        public Dictionary<string, Object> PathCleaningFilters { get; set; }

        /// <summary>
        /// Gets or Sets IsDemo
        /// </summary>
        [DataMember(Name = "is_demo", EmitDefaultValue = true)]
        public bool IsDemo { get; set; }

        /// <summary>
        /// Gets or Sets DataAttributes
        /// </summary>
        [DataMember(Name = "data_attributes", EmitDefaultValue = false)]
        public Dictionary<string, Object> DataAttributes { get; set; }

        /// <summary>
        /// Gets or Sets PersonDisplayNameProperties
        /// </summary>
        [DataMember(Name = "person_display_name_properties", EmitDefaultValue = true)]
        public List<string> PersonDisplayNameProperties { get; set; }

        /// <summary>
        /// Gets or Sets CorrelationConfig
        /// </summary>
        [DataMember(Name = "correlation_config", EmitDefaultValue = true)]
        public Dictionary<string, Object> CorrelationConfig { get; set; }

        /// <summary>
        /// Gets or Sets AutocaptureOptOut
        /// </summary>
        [DataMember(Name = "autocapture_opt_out", EmitDefaultValue = true)]
        public bool? AutocaptureOptOut { get; set; }

        /// <summary>
        /// Gets or Sets AutocaptureExceptionsOptIn
        /// </summary>
        [DataMember(Name = "autocapture_exceptions_opt_in", EmitDefaultValue = true)]
        public bool? AutocaptureExceptionsOptIn { get; set; }

        /// <summary>
        /// Gets or Sets AutocaptureExceptionsErrorsToIgnore
        /// </summary>
        [DataMember(Name = "autocapture_exceptions_errors_to_ignore", EmitDefaultValue = true)]
        public Dictionary<string, Object> AutocaptureExceptionsErrorsToIgnore { get; set; }

        /// <summary>
        /// Gets or Sets CaptureConsoleLogOptIn
        /// </summary>
        [DataMember(Name = "capture_console_log_opt_in", EmitDefaultValue = true)]
        public bool? CaptureConsoleLogOptIn { get; set; }

        /// <summary>
        /// Gets or Sets CapturePerformanceOptIn
        /// </summary>
        [DataMember(Name = "capture_performance_opt_in", EmitDefaultValue = true)]
        public bool? CapturePerformanceOptIn { get; set; }

        /// <summary>
        /// Gets or Sets SessionRecordingOptIn
        /// </summary>
        [DataMember(Name = "session_recording_opt_in", EmitDefaultValue = true)]
        public bool SessionRecordingOptIn { get; set; }

        /// <summary>
        /// Gets or Sets SessionRecordingSampleRate
        /// </summary>
        [DataMember(Name = "session_recording_sample_rate", EmitDefaultValue = true)]
        public decimal? SessionRecordingSampleRate { get; set; }

        /// <summary>
        /// Gets or Sets SessionRecordingMinimumDurationMilliseconds
        /// </summary>
        [DataMember(Name = "session_recording_minimum_duration_milliseconds", EmitDefaultValue = true)]
        public int? SessionRecordingMinimumDurationMilliseconds { get; set; }

        /// <summary>
        /// Gets or Sets SessionRecordingLinkedFlag
        /// </summary>
        [DataMember(Name = "session_recording_linked_flag", EmitDefaultValue = true)]
        public Dictionary<string, Object> SessionRecordingLinkedFlag { get; set; }

        /// <summary>
        /// Gets or Sets SessionRecordingNetworkPayloadCaptureConfig
        /// </summary>
        [DataMember(Name = "session_recording_network_payload_capture_config", EmitDefaultValue = true)]
        public Dictionary<string, Object> SessionRecordingNetworkPayloadCaptureConfig { get; set; }

        /// <summary>
        /// Gets or Sets AccessControl
        /// </summary>
        [DataMember(Name = "access_control", EmitDefaultValue = true)]
        public bool AccessControl { get; set; }

        /// <summary>
        /// Gets or Sets HasGroupTypes
        /// </summary>
        [DataMember(Name = "has_group_types", IsRequired = true, EmitDefaultValue = true)]
        public bool HasGroupTypes { get; private set; }

        /// <summary>
        /// Returns false as HasGroupTypes should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeHasGroupTypes()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets PrimaryDashboard
        /// </summary>
        [DataMember(Name = "primary_dashboard", EmitDefaultValue = true)]
        public int? PrimaryDashboard { get; set; }

        /// <summary>
        /// Gets or Sets LiveEventsColumns
        /// </summary>
        [DataMember(Name = "live_events_columns", EmitDefaultValue = true)]
        public List<string> LiveEventsColumns { get; set; }

        /// <summary>
        /// Gets or Sets RecordingDomains
        /// </summary>
        [DataMember(Name = "recording_domains", EmitDefaultValue = true)]
        public List<string> RecordingDomains { get; set; }

        /// <summary>
        /// Gets or Sets PersonOnEventsQueryingEnabled
        /// </summary>
        [DataMember(Name = "person_on_events_querying_enabled", IsRequired = true, EmitDefaultValue = true)]
        public bool PersonOnEventsQueryingEnabled { get; private set; }

        /// <summary>
        /// Returns false as PersonOnEventsQueryingEnabled should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializePersonOnEventsQueryingEnabled()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets GroupsOnEventsQueryingEnabled
        /// </summary>
        [DataMember(Name = "groups_on_events_querying_enabled", IsRequired = true, EmitDefaultValue = true)]
        public bool GroupsOnEventsQueryingEnabled { get; private set; }

        /// <summary>
        /// Returns false as GroupsOnEventsQueryingEnabled should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeGroupsOnEventsQueryingEnabled()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets InjectWebApps
        /// </summary>
        [DataMember(Name = "inject_web_apps", EmitDefaultValue = true)]
        public bool? InjectWebApps { get; set; }

        /// <summary>
        /// Gets or Sets ExtraSettings
        /// </summary>
        [DataMember(Name = "extra_settings", EmitDefaultValue = true)]
        public Dictionary<string, Object> ExtraSettings { get; set; }

        /// <summary>
        /// Gets or Sets HasCompletedOnboardingFor
        /// </summary>
        [DataMember(Name = "has_completed_onboarding_for", EmitDefaultValue = true)]
        public Dictionary<string, Object> HasCompletedOnboardingFor { get; set; }

        /// <summary>
        /// Gets or Sets SurveysOptIn
        /// </summary>
        [DataMember(Name = "surveys_opt_in", EmitDefaultValue = true)]
        public bool? SurveysOptIn { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostHogTeam {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("  ApiToken: ").Append(ApiToken).Append("\n");
            sb.Append("  AppUrls: ").Append(AppUrls).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SlackIncomingWebhook: ").Append(SlackIncomingWebhook).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  AnonymizeIps: ").Append(AnonymizeIps).Append("\n");
            sb.Append("  CompletedSnippetOnboarding: ").Append(CompletedSnippetOnboarding).Append("\n");
            sb.Append("  IngestedEvent: ").Append(IngestedEvent).Append("\n");
            sb.Append("  TestAccountFilters: ").Append(TestAccountFilters).Append("\n");
            sb.Append("  TestAccountFiltersDefaultChecked: ").Append(TestAccountFiltersDefaultChecked).Append("\n");
            sb.Append("  PathCleaningFilters: ").Append(PathCleaningFilters).Append("\n");
            sb.Append("  IsDemo: ").Append(IsDemo).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  DataAttributes: ").Append(DataAttributes).Append("\n");
            sb.Append("  PersonDisplayNameProperties: ").Append(PersonDisplayNameProperties).Append("\n");
            sb.Append("  CorrelationConfig: ").Append(CorrelationConfig).Append("\n");
            sb.Append("  AutocaptureOptOut: ").Append(AutocaptureOptOut).Append("\n");
            sb.Append("  AutocaptureExceptionsOptIn: ").Append(AutocaptureExceptionsOptIn).Append("\n");
            sb.Append("  AutocaptureExceptionsErrorsToIgnore: ").Append(AutocaptureExceptionsErrorsToIgnore).Append("\n");
            sb.Append("  CaptureConsoleLogOptIn: ").Append(CaptureConsoleLogOptIn).Append("\n");
            sb.Append("  CapturePerformanceOptIn: ").Append(CapturePerformanceOptIn).Append("\n");
            sb.Append("  SessionRecordingOptIn: ").Append(SessionRecordingOptIn).Append("\n");
            sb.Append("  SessionRecordingSampleRate: ").Append(SessionRecordingSampleRate).Append("\n");
            sb.Append("  SessionRecordingMinimumDurationMilliseconds: ").Append(SessionRecordingMinimumDurationMilliseconds).Append("\n");
            sb.Append("  SessionRecordingLinkedFlag: ").Append(SessionRecordingLinkedFlag).Append("\n");
            sb.Append("  SessionRecordingNetworkPayloadCaptureConfig: ").Append(SessionRecordingNetworkPayloadCaptureConfig).Append("\n");
            sb.Append("  EffectiveMembershipLevel: ").Append(EffectiveMembershipLevel).Append("\n");
            sb.Append("  AccessControl: ").Append(AccessControl).Append("\n");
            sb.Append("  WeekStartDay: ").Append(WeekStartDay).Append("\n");
            sb.Append("  HasGroupTypes: ").Append(HasGroupTypes).Append("\n");
            sb.Append("  PrimaryDashboard: ").Append(PrimaryDashboard).Append("\n");
            sb.Append("  LiveEventsColumns: ").Append(LiveEventsColumns).Append("\n");
            sb.Append("  RecordingDomains: ").Append(RecordingDomains).Append("\n");
            sb.Append("  PersonOnEventsQueryingEnabled: ").Append(PersonOnEventsQueryingEnabled).Append("\n");
            sb.Append("  GroupsOnEventsQueryingEnabled: ").Append(GroupsOnEventsQueryingEnabled).Append("\n");
            sb.Append("  InjectWebApps: ").Append(InjectWebApps).Append("\n");
            sb.Append("  ExtraSettings: ").Append(ExtraSettings).Append("\n");
            sb.Append("  HasCompletedOnboardingFor: ").Append(HasCompletedOnboardingFor).Append("\n");
            sb.Append("  SurveysOptIn: ").Append(SurveysOptIn).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PostHogTeam);
        }

        /// <summary>
        /// Returns true if PostHogTeam instances are equal
        /// </summary>
        /// <param name="input">Instance of PostHogTeam to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PostHogTeam input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.Uuid == input.Uuid ||
                    (this.Uuid != null &&
                    this.Uuid.Equals(input.Uuid))
                ) && 
                (
                    this.Organization == input.Organization ||
                    (this.Organization != null &&
                    this.Organization.Equals(input.Organization))
                ) && 
                (
                    this.ApiToken == input.ApiToken ||
                    (this.ApiToken != null &&
                    this.ApiToken.Equals(input.ApiToken))
                ) && 
                (
                    this.AppUrls == input.AppUrls ||
                    this.AppUrls != null &&
                    input.AppUrls != null &&
                    this.AppUrls.SequenceEqual(input.AppUrls)
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.SlackIncomingWebhook == input.SlackIncomingWebhook ||
                    (this.SlackIncomingWebhook != null &&
                    this.SlackIncomingWebhook.Equals(input.SlackIncomingWebhook))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.AnonymizeIps == input.AnonymizeIps ||
                    this.AnonymizeIps.Equals(input.AnonymizeIps)
                ) && 
                (
                    this.CompletedSnippetOnboarding == input.CompletedSnippetOnboarding ||
                    this.CompletedSnippetOnboarding.Equals(input.CompletedSnippetOnboarding)
                ) && 
                (
                    this.IngestedEvent == input.IngestedEvent ||
                    this.IngestedEvent.Equals(input.IngestedEvent)
                ) && 
                (
                    this.TestAccountFilters == input.TestAccountFilters ||
                    this.TestAccountFilters != null &&
                    input.TestAccountFilters != null &&
                    this.TestAccountFilters.SequenceEqual(input.TestAccountFilters)
                ) && 
                (
                    this.TestAccountFiltersDefaultChecked == input.TestAccountFiltersDefaultChecked ||
                    (this.TestAccountFiltersDefaultChecked != null &&
                    this.TestAccountFiltersDefaultChecked.Equals(input.TestAccountFiltersDefaultChecked))
                ) && 
                (
                    this.PathCleaningFilters == input.PathCleaningFilters ||
                    this.PathCleaningFilters != null &&
                    input.PathCleaningFilters != null &&
                    this.PathCleaningFilters.SequenceEqual(input.PathCleaningFilters)
                ) && 
                (
                    this.IsDemo == input.IsDemo ||
                    this.IsDemo.Equals(input.IsDemo)
                ) && 
                (
                    this.Timezone == input.Timezone ||
                    this.Timezone.Equals(input.Timezone)
                ) && 
                (
                    this.DataAttributes == input.DataAttributes ||
                    this.DataAttributes != null &&
                    input.DataAttributes != null &&
                    this.DataAttributes.SequenceEqual(input.DataAttributes)
                ) && 
                (
                    this.PersonDisplayNameProperties == input.PersonDisplayNameProperties ||
                    this.PersonDisplayNameProperties != null &&
                    input.PersonDisplayNameProperties != null &&
                    this.PersonDisplayNameProperties.SequenceEqual(input.PersonDisplayNameProperties)
                ) && 
                (
                    this.CorrelationConfig == input.CorrelationConfig ||
                    this.CorrelationConfig != null &&
                    input.CorrelationConfig != null &&
                    this.CorrelationConfig.SequenceEqual(input.CorrelationConfig)
                ) && 
                (
                    this.AutocaptureOptOut == input.AutocaptureOptOut ||
                    (this.AutocaptureOptOut != null &&
                    this.AutocaptureOptOut.Equals(input.AutocaptureOptOut))
                ) && 
                (
                    this.AutocaptureExceptionsOptIn == input.AutocaptureExceptionsOptIn ||
                    (this.AutocaptureExceptionsOptIn != null &&
                    this.AutocaptureExceptionsOptIn.Equals(input.AutocaptureExceptionsOptIn))
                ) && 
                (
                    this.AutocaptureExceptionsErrorsToIgnore == input.AutocaptureExceptionsErrorsToIgnore ||
                    this.AutocaptureExceptionsErrorsToIgnore != null &&
                    input.AutocaptureExceptionsErrorsToIgnore != null &&
                    this.AutocaptureExceptionsErrorsToIgnore.SequenceEqual(input.AutocaptureExceptionsErrorsToIgnore)
                ) && 
                (
                    this.CaptureConsoleLogOptIn == input.CaptureConsoleLogOptIn ||
                    (this.CaptureConsoleLogOptIn != null &&
                    this.CaptureConsoleLogOptIn.Equals(input.CaptureConsoleLogOptIn))
                ) && 
                (
                    this.CapturePerformanceOptIn == input.CapturePerformanceOptIn ||
                    (this.CapturePerformanceOptIn != null &&
                    this.CapturePerformanceOptIn.Equals(input.CapturePerformanceOptIn))
                ) && 
                (
                    this.SessionRecordingOptIn == input.SessionRecordingOptIn ||
                    this.SessionRecordingOptIn.Equals(input.SessionRecordingOptIn)
                ) && 
                (
                    this.SessionRecordingSampleRate == input.SessionRecordingSampleRate ||
                    (this.SessionRecordingSampleRate != null &&
                    this.SessionRecordingSampleRate.Equals(input.SessionRecordingSampleRate))
                ) && 
                (
                    this.SessionRecordingMinimumDurationMilliseconds == input.SessionRecordingMinimumDurationMilliseconds ||
                    (this.SessionRecordingMinimumDurationMilliseconds != null &&
                    this.SessionRecordingMinimumDurationMilliseconds.Equals(input.SessionRecordingMinimumDurationMilliseconds))
                ) && 
                (
                    this.SessionRecordingLinkedFlag == input.SessionRecordingLinkedFlag ||
                    this.SessionRecordingLinkedFlag != null &&
                    input.SessionRecordingLinkedFlag != null &&
                    this.SessionRecordingLinkedFlag.SequenceEqual(input.SessionRecordingLinkedFlag)
                ) && 
                (
                    this.SessionRecordingNetworkPayloadCaptureConfig == input.SessionRecordingNetworkPayloadCaptureConfig ||
                    this.SessionRecordingNetworkPayloadCaptureConfig != null &&
                    input.SessionRecordingNetworkPayloadCaptureConfig != null &&
                    this.SessionRecordingNetworkPayloadCaptureConfig.SequenceEqual(input.SessionRecordingNetworkPayloadCaptureConfig)
                ) && 
                (
                    this.EffectiveMembershipLevel == input.EffectiveMembershipLevel ||
                    this.EffectiveMembershipLevel.Equals(input.EffectiveMembershipLevel)
                ) && 
                (
                    this.AccessControl == input.AccessControl ||
                    this.AccessControl.Equals(input.AccessControl)
                ) && 
                (
                    this.WeekStartDay == input.WeekStartDay ||
                    this.WeekStartDay.Equals(input.WeekStartDay)
                ) && 
                (
                    this.HasGroupTypes == input.HasGroupTypes ||
                    this.HasGroupTypes.Equals(input.HasGroupTypes)
                ) && 
                (
                    this.PrimaryDashboard == input.PrimaryDashboard ||
                    (this.PrimaryDashboard != null &&
                    this.PrimaryDashboard.Equals(input.PrimaryDashboard))
                ) && 
                (
                    this.LiveEventsColumns == input.LiveEventsColumns ||
                    this.LiveEventsColumns != null &&
                    input.LiveEventsColumns != null &&
                    this.LiveEventsColumns.SequenceEqual(input.LiveEventsColumns)
                ) && 
                (
                    this.RecordingDomains == input.RecordingDomains ||
                    this.RecordingDomains != null &&
                    input.RecordingDomains != null &&
                    this.RecordingDomains.SequenceEqual(input.RecordingDomains)
                ) && 
                (
                    this.PersonOnEventsQueryingEnabled == input.PersonOnEventsQueryingEnabled ||
                    this.PersonOnEventsQueryingEnabled.Equals(input.PersonOnEventsQueryingEnabled)
                ) && 
                (
                    this.GroupsOnEventsQueryingEnabled == input.GroupsOnEventsQueryingEnabled ||
                    this.GroupsOnEventsQueryingEnabled.Equals(input.GroupsOnEventsQueryingEnabled)
                ) && 
                (
                    this.InjectWebApps == input.InjectWebApps ||
                    (this.InjectWebApps != null &&
                    this.InjectWebApps.Equals(input.InjectWebApps))
                ) && 
                (
                    this.ExtraSettings == input.ExtraSettings ||
                    this.ExtraSettings != null &&
                    input.ExtraSettings != null &&
                    this.ExtraSettings.SequenceEqual(input.ExtraSettings)
                ) && 
                (
                    this.HasCompletedOnboardingFor == input.HasCompletedOnboardingFor ||
                    this.HasCompletedOnboardingFor != null &&
                    input.HasCompletedOnboardingFor != null &&
                    this.HasCompletedOnboardingFor.SequenceEqual(input.HasCompletedOnboardingFor)
                ) && 
                (
                    this.SurveysOptIn == input.SurveysOptIn ||
                    (this.SurveysOptIn != null &&
                    this.SurveysOptIn.Equals(input.SurveysOptIn))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Id.GetHashCode();
                if (this.Uuid != null)
                {
                    hashCode = (hashCode * 59) + this.Uuid.GetHashCode();
                }
                if (this.Organization != null)
                {
                    hashCode = (hashCode * 59) + this.Organization.GetHashCode();
                }
                if (this.ApiToken != null)
                {
                    hashCode = (hashCode * 59) + this.ApiToken.GetHashCode();
                }
                if (this.AppUrls != null)
                {
                    hashCode = (hashCode * 59) + this.AppUrls.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.SlackIncomingWebhook != null)
                {
                    hashCode = (hashCode * 59) + this.SlackIncomingWebhook.GetHashCode();
                }
                if (this.CreatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                }
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.AnonymizeIps.GetHashCode();
                hashCode = (hashCode * 59) + this.CompletedSnippetOnboarding.GetHashCode();
                hashCode = (hashCode * 59) + this.IngestedEvent.GetHashCode();
                if (this.TestAccountFilters != null)
                {
                    hashCode = (hashCode * 59) + this.TestAccountFilters.GetHashCode();
                }
                if (this.TestAccountFiltersDefaultChecked != null)
                {
                    hashCode = (hashCode * 59) + this.TestAccountFiltersDefaultChecked.GetHashCode();
                }
                if (this.PathCleaningFilters != null)
                {
                    hashCode = (hashCode * 59) + this.PathCleaningFilters.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.IsDemo.GetHashCode();
                hashCode = (hashCode * 59) + this.Timezone.GetHashCode();
                if (this.DataAttributes != null)
                {
                    hashCode = (hashCode * 59) + this.DataAttributes.GetHashCode();
                }
                if (this.PersonDisplayNameProperties != null)
                {
                    hashCode = (hashCode * 59) + this.PersonDisplayNameProperties.GetHashCode();
                }
                if (this.CorrelationConfig != null)
                {
                    hashCode = (hashCode * 59) + this.CorrelationConfig.GetHashCode();
                }
                if (this.AutocaptureOptOut != null)
                {
                    hashCode = (hashCode * 59) + this.AutocaptureOptOut.GetHashCode();
                }
                if (this.AutocaptureExceptionsOptIn != null)
                {
                    hashCode = (hashCode * 59) + this.AutocaptureExceptionsOptIn.GetHashCode();
                }
                if (this.AutocaptureExceptionsErrorsToIgnore != null)
                {
                    hashCode = (hashCode * 59) + this.AutocaptureExceptionsErrorsToIgnore.GetHashCode();
                }
                if (this.CaptureConsoleLogOptIn != null)
                {
                    hashCode = (hashCode * 59) + this.CaptureConsoleLogOptIn.GetHashCode();
                }
                if (this.CapturePerformanceOptIn != null)
                {
                    hashCode = (hashCode * 59) + this.CapturePerformanceOptIn.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.SessionRecordingOptIn.GetHashCode();
                if (this.SessionRecordingSampleRate != null)
                {
                    hashCode = (hashCode * 59) + this.SessionRecordingSampleRate.GetHashCode();
                }
                if (this.SessionRecordingMinimumDurationMilliseconds != null)
                {
                    hashCode = (hashCode * 59) + this.SessionRecordingMinimumDurationMilliseconds.GetHashCode();
                }
                if (this.SessionRecordingLinkedFlag != null)
                {
                    hashCode = (hashCode * 59) + this.SessionRecordingLinkedFlag.GetHashCode();
                }
                if (this.SessionRecordingNetworkPayloadCaptureConfig != null)
                {
                    hashCode = (hashCode * 59) + this.SessionRecordingNetworkPayloadCaptureConfig.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.EffectiveMembershipLevel.GetHashCode();
                hashCode = (hashCode * 59) + this.AccessControl.GetHashCode();
                hashCode = (hashCode * 59) + this.WeekStartDay.GetHashCode();
                hashCode = (hashCode * 59) + this.HasGroupTypes.GetHashCode();
                if (this.PrimaryDashboard != null)
                {
                    hashCode = (hashCode * 59) + this.PrimaryDashboard.GetHashCode();
                }
                if (this.LiveEventsColumns != null)
                {
                    hashCode = (hashCode * 59) + this.LiveEventsColumns.GetHashCode();
                }
                if (this.RecordingDomains != null)
                {
                    hashCode = (hashCode * 59) + this.RecordingDomains.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PersonOnEventsQueryingEnabled.GetHashCode();
                hashCode = (hashCode * 59) + this.GroupsOnEventsQueryingEnabled.GetHashCode();
                if (this.InjectWebApps != null)
                {
                    hashCode = (hashCode * 59) + this.InjectWebApps.GetHashCode();
                }
                if (this.ExtraSettings != null)
                {
                    hashCode = (hashCode * 59) + this.ExtraSettings.GetHashCode();
                }
                if (this.HasCompletedOnboardingFor != null)
                {
                    hashCode = (hashCode * 59) + this.HasCompletedOnboardingFor.GetHashCode();
                }
                if (this.SurveysOptIn != null)
                {
                    hashCode = (hashCode * 59) + this.SurveysOptIn.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 200)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Name, length must be less than 200.", new [] { "Name" });
            }

            // Name (string) minLength
            if (this.Name != null && this.Name.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Name, length must be greater than 1.", new [] { "Name" });
            }

            // SlackIncomingWebhook (string) maxLength
            if (this.SlackIncomingWebhook != null && this.SlackIncomingWebhook.Length > 500)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SlackIncomingWebhook, length must be less than 500.", new [] { "SlackIncomingWebhook" });
            }

            if (this.SessionRecordingSampleRate != null) {
                // SessionRecordingSampleRate (decimal?) pattern
                Regex regexSessionRecordingSampleRate = new Regex(@"^-?\d{0,1}(?:\.\d{0,2})?$", RegexOptions.CultureInvariant);
                if (!regexSessionRecordingSampleRate.Match(this.SessionRecordingSampleRate.GetValueOrDefault().ToString()).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SessionRecordingSampleRate, must match a pattern of " + regexSessionRecordingSampleRate, new [] { "SessionRecordingSampleRate" });
                }
            }

            // SessionRecordingMinimumDurationMilliseconds (int?) maximum
            if (this.SessionRecordingMinimumDurationMilliseconds > (int?)15000)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SessionRecordingMinimumDurationMilliseconds, must be a value less than or equal to 15000.", new [] { "SessionRecordingMinimumDurationMilliseconds" });
            }

            // SessionRecordingMinimumDurationMilliseconds (int?) minimum
            if (this.SessionRecordingMinimumDurationMilliseconds < (int?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SessionRecordingMinimumDurationMilliseconds, must be a value greater than or equal to 0.", new [] { "SessionRecordingMinimumDurationMilliseconds" });
            }

            yield break;
        }
    }

}
