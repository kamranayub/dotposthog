/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DotPostHog.Client.OpenAPIDateConverter;

namespace DotPostHog.Model
{
    /// <summary>
    /// PostHogFunnelExclusion
    /// </summary>
    [DataContract(Name = "FunnelExclusion")]
    public partial class PostHogFunnelExclusion : IEquatable<PostHogFunnelExclusion>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostHogFunnelExclusion" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PostHogFunnelExclusion() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostHogFunnelExclusion" /> class.
        /// </summary>
        /// <param name="id">Name of the event to filter on. For example &#x60;$pageview&#x60; or &#x60;user sign up&#x60;. (required).</param>
        /// <param name="properties">properties.</param>
        /// <param name="funnelFromStep">funnelFromStep (default to 0).</param>
        /// <param name="funnelToStep">funnelToStep (default to 1).</param>
        public PostHogFunnelExclusion(string id = default(string), PostHogProperty properties = default(PostHogProperty), int funnelFromStep = 0, int funnelToStep = 1)
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for PostHogFunnelExclusion and cannot be null");
            }
            this.Id = id;
            this.Properties = properties;
            this.FunnelFromStep = funnelFromStep;
            this.FunnelToStep = funnelToStep;
        }

        /// <summary>
        /// Name of the event to filter on. For example &#x60;$pageview&#x60; or &#x60;user sign up&#x60;.
        /// </summary>
        /// <value>Name of the event to filter on. For example &#x60;$pageview&#x60; or &#x60;user sign up&#x60;.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Properties
        /// </summary>
        [DataMember(Name = "properties", EmitDefaultValue = false)]
        public PostHogProperty Properties { get; set; }

        /// <summary>
        /// Gets or Sets FunnelFromStep
        /// </summary>
        [DataMember(Name = "funnel_from_step", EmitDefaultValue = false)]
        public int FunnelFromStep { get; set; }

        /// <summary>
        /// Gets or Sets FunnelToStep
        /// </summary>
        [DataMember(Name = "funnel_to_step", EmitDefaultValue = false)]
        public int FunnelToStep { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostHogFunnelExclusion {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Properties: ").Append(Properties).Append("\n");
            sb.Append("  FunnelFromStep: ").Append(FunnelFromStep).Append("\n");
            sb.Append("  FunnelToStep: ").Append(FunnelToStep).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PostHogFunnelExclusion);
        }

        /// <summary>
        /// Returns true if PostHogFunnelExclusion instances are equal
        /// </summary>
        /// <param name="input">Instance of PostHogFunnelExclusion to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PostHogFunnelExclusion input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Properties == input.Properties ||
                    (this.Properties != null &&
                    this.Properties.Equals(input.Properties))
                ) && 
                (
                    this.FunnelFromStep == input.FunnelFromStep ||
                    this.FunnelFromStep.Equals(input.FunnelFromStep)
                ) && 
                (
                    this.FunnelToStep == input.FunnelToStep ||
                    this.FunnelToStep.Equals(input.FunnelToStep)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.Properties != null)
                {
                    hashCode = (hashCode * 59) + this.Properties.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.FunnelFromStep.GetHashCode();
                hashCode = (hashCode * 59) + this.FunnelToStep.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
