/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DotPostHog.Client;
using DotPostHog.Model;

namespace DotPostHog.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPipelineTransformationsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsActivityRetrieve(string parentLookupOrganizationId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsActivityRetrieveWithHttpInfo(string parentLookupOrganizationId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsCheckForUpdatesRetrieve(int id, string parentLookupOrganizationId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsCheckForUpdatesRetrieveWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsCreate(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsCreateWithHttpInfo(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void PipelineTransformationsDestroy(int id, string parentLookupOrganizationId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> PipelineTransformationsDestroyWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPaginatedPluginList</returns>
        PostHogPaginatedPluginList PipelineTransformationsList(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPaginatedPluginList</returns>
        ApiResponse<PostHogPaginatedPluginList> PipelineTransformationsListWithHttpInfo(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsPartialUpdate(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsPartialUpdateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsRepositoryRetrieve(string parentLookupOrganizationId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsRepositoryRetrieveWithHttpInfo(string parentLookupOrganizationId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsRetrieve(int id, string parentLookupOrganizationId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsRetrieveWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsSourceRetrieve(int id, string parentLookupOrganizationId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsSourceRetrieveWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsUnusedRetrieve(string parentLookupOrganizationId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsUnusedRetrieveWithHttpInfo(string parentLookupOrganizationId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsUpdate(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsUpdateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsUpdateSourcePartialUpdate(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsUpdateSourcePartialUpdateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        PostHogPlugin PipelineTransformationsUpgradeCreate(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        ApiResponse<PostHogPlugin> PipelineTransformationsUpgradeCreateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPipelineTransformationsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsActivityRetrieveAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsActivityRetrieveWithHttpInfoAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsCheckForUpdatesRetrieveAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsCheckForUpdatesRetrieveWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsCreateAsync(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsCreateWithHttpInfoAsync(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task PipelineTransformationsDestroyAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> PipelineTransformationsDestroyWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPaginatedPluginList</returns>
        System.Threading.Tasks.Task<PostHogPaginatedPluginList> PipelineTransformationsListAsync(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPaginatedPluginList)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPaginatedPluginList>> PipelineTransformationsListWithHttpInfoAsync(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsPartialUpdateAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsPartialUpdateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsRepositoryRetrieveAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsRepositoryRetrieveWithHttpInfoAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsRetrieveAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsRetrieveWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsSourceRetrieveAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsSourceRetrieveWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUnusedRetrieveAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsUnusedRetrieveWithHttpInfoAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUpdateAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsUpdateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUpdateSourcePartialUpdateAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsUpdateSourcePartialUpdateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUpgradeCreateAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        System.Threading.Tasks.Task<ApiResponse<PostHogPlugin>> PipelineTransformationsUpgradeCreateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPipelineTransformationsApi : IPipelineTransformationsApiSync, IPipelineTransformationsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PipelineTransformationsApi : IPipelineTransformationsApi
    {
        private DotPostHog.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineTransformationsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PipelineTransformationsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineTransformationsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PipelineTransformationsApi(string basePath)
        {
            this.Configuration = DotPostHog.Client.Configuration.MergeConfigurations(
                DotPostHog.Client.GlobalConfiguration.Instance,
                new DotPostHog.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DotPostHog.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DotPostHog.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DotPostHog.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineTransformationsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PipelineTransformationsApi(DotPostHog.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DotPostHog.Client.Configuration.MergeConfigurations(
                DotPostHog.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DotPostHog.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DotPostHog.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DotPostHog.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineTransformationsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PipelineTransformationsApi(DotPostHog.Client.ISynchronousClient client, DotPostHog.Client.IAsynchronousClient asyncClient, DotPostHog.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DotPostHog.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DotPostHog.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DotPostHog.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DotPostHog.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DotPostHog.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsActivityRetrieve(string parentLookupOrganizationId, int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsActivityRetrieveWithHttpInfo(parentLookupOrganizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsActivityRetrieveWithHttpInfo(string parentLookupOrganizationId, int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsActivityRetrieve");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsActivityRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/activity/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsActivityRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsActivityRetrieveAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsActivityRetrieveWithHttpInfoAsync(parentLookupOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsActivityRetrieveWithHttpInfoAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsActivityRetrieve");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsActivityRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/activity/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsActivityRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsCheckForUpdatesRetrieve(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsCheckForUpdatesRetrieveWithHttpInfo(id, parentLookupOrganizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsCheckForUpdatesRetrieveWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsCheckForUpdatesRetrieve");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsCheckForUpdatesRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/check_for_updates/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsCheckForUpdatesRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsCheckForUpdatesRetrieveAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsCheckForUpdatesRetrieveWithHttpInfoAsync(id, parentLookupOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsCheckForUpdatesRetrieveWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsCheckForUpdatesRetrieve");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsCheckForUpdatesRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/check_for_updates/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsCheckForUpdatesRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsCreate(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsCreateWithHttpInfo(parentLookupOrganizationId, postHogPlugin);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsCreateWithHttpInfo(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsCreate");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsCreate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsCreateAsync(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsCreateWithHttpInfoAsync(parentLookupOrganizationId, postHogPlugin, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsCreateWithHttpInfoAsync(string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsCreate");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsCreate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void PipelineTransformationsDestroy(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            PipelineTransformationsDestroyWithHttpInfo(id, parentLookupOrganizationId);
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public DotPostHog.Client.ApiResponse<Object> PipelineTransformationsDestroyWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsDestroy");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsDestroy";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsDestroy", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task PipelineTransformationsDestroyAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await PipelineTransformationsDestroyWithHttpInfoAsync(id, parentLookupOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<Object>> PipelineTransformationsDestroyWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsDestroy");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsDestroy";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsDestroy", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPaginatedPluginList</returns>
        public PostHogPaginatedPluginList PipelineTransformationsList(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPaginatedPluginList> localVarResponse = PipelineTransformationsListWithHttpInfo(parentLookupOrganizationId, limit, offset);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPaginatedPluginList</returns>
        public DotPostHog.Client.ApiResponse<PostHogPaginatedPluginList> PipelineTransformationsListWithHttpInfo(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsList");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(DotPostHog.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(DotPostHog.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsList";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<PostHogPaginatedPluginList>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPaginatedPluginList</returns>
        public async System.Threading.Tasks.Task<PostHogPaginatedPluginList> PipelineTransformationsListAsync(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPaginatedPluginList> localVarResponse = await PipelineTransformationsListWithHttpInfoAsync(parentLookupOrganizationId, limit, offset, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="limit">Number of results to return per page. (optional)</param>
        /// <param name="offset">The initial index from which to return the results. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPaginatedPluginList)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPaginatedPluginList>> PipelineTransformationsListWithHttpInfoAsync(string parentLookupOrganizationId, int? limit = default(int?), int? offset = default(int?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsList");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(DotPostHog.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(DotPostHog.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsList";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PostHogPaginatedPluginList>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsPartialUpdate(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsPartialUpdateWithHttpInfo(id, parentLookupOrganizationId, postHogPatchedPlugin);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsPartialUpdateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsPartialUpdate");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPatchedPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsPartialUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Patch<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsPartialUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsPartialUpdateAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsPartialUpdateWithHttpInfoAsync(id, parentLookupOrganizationId, postHogPatchedPlugin, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsPartialUpdateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsPartialUpdate");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPatchedPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsPartialUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsPartialUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsRepositoryRetrieve(string parentLookupOrganizationId, int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsRepositoryRetrieveWithHttpInfo(parentLookupOrganizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsRepositoryRetrieveWithHttpInfo(string parentLookupOrganizationId, int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsRepositoryRetrieve");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsRepositoryRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/repository/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsRepositoryRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsRepositoryRetrieveAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsRepositoryRetrieveWithHttpInfoAsync(parentLookupOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsRepositoryRetrieveWithHttpInfoAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsRepositoryRetrieve");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsRepositoryRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/repository/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsRepositoryRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsRetrieve(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsRetrieveWithHttpInfo(id, parentLookupOrganizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsRetrieveWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsRetrieve");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsRetrieveAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsRetrieveWithHttpInfoAsync(id, parentLookupOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsRetrieveWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsRetrieve");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsSourceRetrieve(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsSourceRetrieveWithHttpInfo(id, parentLookupOrganizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsSourceRetrieveWithHttpInfo(int id, string parentLookupOrganizationId, int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsSourceRetrieve");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsSourceRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/source/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsSourceRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsSourceRetrieveAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsSourceRetrieveWithHttpInfoAsync(id, parentLookupOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsSourceRetrieveWithHttpInfoAsync(int id, string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsSourceRetrieve");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsSourceRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/source/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsSourceRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsUnusedRetrieve(string parentLookupOrganizationId, int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsUnusedRetrieveWithHttpInfo(parentLookupOrganizationId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsUnusedRetrieveWithHttpInfo(string parentLookupOrganizationId, int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUnusedRetrieve");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUnusedRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/unused/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUnusedRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUnusedRetrieveAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsUnusedRetrieveWithHttpInfoAsync(parentLookupOrganizationId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsUnusedRetrieveWithHttpInfoAsync(string parentLookupOrganizationId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUnusedRetrieve");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUnusedRetrieve";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/unused/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUnusedRetrieve", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsUpdate(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsUpdateWithHttpInfo(id, parentLookupOrganizationId, postHogPlugin);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsUpdateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUpdate");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUpdateAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsUpdateWithHttpInfoAsync(id, parentLookupOrganizationId, postHogPlugin, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsUpdateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUpdate");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsUpdateSourcePartialUpdate(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsUpdateSourcePartialUpdateWithHttpInfo(id, parentLookupOrganizationId, postHogPatchedPlugin);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsUpdateSourcePartialUpdateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUpdateSourcePartialUpdate");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPatchedPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUpdateSourcePartialUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Patch<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/update_source/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUpdateSourcePartialUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUpdateSourcePartialUpdateAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsUpdateSourcePartialUpdateWithHttpInfoAsync(id, parentLookupOrganizationId, postHogPatchedPlugin, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPatchedPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsUpdateSourcePartialUpdateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPatchedPlugin postHogPatchedPlugin = default(PostHogPatchedPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUpdateSourcePartialUpdate");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPatchedPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUpdateSourcePartialUpdate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/update_source/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUpdateSourcePartialUpdate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PostHogPlugin</returns>
        public PostHogPlugin PipelineTransformationsUpgradeCreate(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0)
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = PipelineTransformationsUpgradeCreateWithHttpInfo(id, parentLookupOrganizationId, postHogPlugin);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PostHogPlugin</returns>
        public DotPostHog.Client.ApiResponse<PostHogPlugin> PipelineTransformationsUpgradeCreateWithHttpInfo(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0)
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUpgradeCreate");
            }

            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUpgradeCreate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/upgrade/", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUpgradeCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PostHogPlugin</returns>
        public async System.Threading.Tasks.Task<PostHogPlugin> PipelineTransformationsUpgradeCreateAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            DotPostHog.Client.ApiResponse<PostHogPlugin> localVarResponse = await PipelineTransformationsUpgradeCreateWithHttpInfoAsync(id, parentLookupOrganizationId, postHogPlugin, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="DotPostHog.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A unique integer value identifying this plugin.</param>
        /// <param name="parentLookupOrganizationId"></param>
        /// <param name="postHogPlugin"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PostHogPlugin)</returns>
        public async System.Threading.Tasks.Task<DotPostHog.Client.ApiResponse<PostHogPlugin>> PipelineTransformationsUpgradeCreateWithHttpInfoAsync(int id, string parentLookupOrganizationId, PostHogPlugin postHogPlugin = default(PostHogPlugin), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentLookupOrganizationId' is set
            if (parentLookupOrganizationId == null)
            {
                throw new DotPostHog.Client.ApiException(400, "Missing required parameter 'parentLookupOrganizationId' when calling PipelineTransformationsApi->PipelineTransformationsUpgradeCreate");
            }


            DotPostHog.Client.RequestOptions localVarRequestOptions = new DotPostHog.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = DotPostHog.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = DotPostHog.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", DotPostHog.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.PathParameters.Add("parent_lookup_organization_id", DotPostHog.Client.ClientUtils.ParameterToString(parentLookupOrganizationId)); // path parameter
            localVarRequestOptions.Data = postHogPlugin;

            localVarRequestOptions.Operation = "PipelineTransformationsApi.PipelineTransformationsUpgradeCreate";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PostHogPlugin>("/api/organizations/{parent_lookup_organization_id}/pipeline_transformations/{id}/upgrade/", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PipelineTransformationsUpgradeCreate", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
