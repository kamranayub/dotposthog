/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DotPostHog.Model;
using DotPostHog.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DotPostHog.Test.Model
{
    /// <summary>
    ///  Class for testing SessionRecording
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SessionRecordingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SessionRecording
        //private SessionRecording instance;

        public SessionRecordingTests()
        {
            // TODO uncomment below to create an instance of SessionRecording
            //instance = new SessionRecording();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SessionRecording
        /// </summary>
        [Fact]
        public void SessionRecordingInstanceTest()
        {
            // TODO uncomment below to test "IsType" SessionRecording
            //Assert.IsType<SessionRecording>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'DistinctId'
        /// </summary>
        [Fact]
        public void DistinctIdTest()
        {
            // TODO unit test for the property 'DistinctId'
        }

        /// <summary>
        /// Test the property 'Viewed'
        /// </summary>
        [Fact]
        public void ViewedTest()
        {
            // TODO unit test for the property 'Viewed'
        }

        /// <summary>
        /// Test the property 'RecordingDuration'
        /// </summary>
        [Fact]
        public void RecordingDurationTest()
        {
            // TODO unit test for the property 'RecordingDuration'
        }

        /// <summary>
        /// Test the property 'ActiveSeconds'
        /// </summary>
        [Fact]
        public void ActiveSecondsTest()
        {
            // TODO unit test for the property 'ActiveSeconds'
        }

        /// <summary>
        /// Test the property 'InactiveSeconds'
        /// </summary>
        [Fact]
        public void InactiveSecondsTest()
        {
            // TODO unit test for the property 'InactiveSeconds'
        }

        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Fact]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }

        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Fact]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }

        /// <summary>
        /// Test the property 'ClickCount'
        /// </summary>
        [Fact]
        public void ClickCountTest()
        {
            // TODO unit test for the property 'ClickCount'
        }

        /// <summary>
        /// Test the property 'KeypressCount'
        /// </summary>
        [Fact]
        public void KeypressCountTest()
        {
            // TODO unit test for the property 'KeypressCount'
        }

        /// <summary>
        /// Test the property 'MouseActivityCount'
        /// </summary>
        [Fact]
        public void MouseActivityCountTest()
        {
            // TODO unit test for the property 'MouseActivityCount'
        }

        /// <summary>
        /// Test the property 'ConsoleLogCount'
        /// </summary>
        [Fact]
        public void ConsoleLogCountTest()
        {
            // TODO unit test for the property 'ConsoleLogCount'
        }

        /// <summary>
        /// Test the property 'ConsoleWarnCount'
        /// </summary>
        [Fact]
        public void ConsoleWarnCountTest()
        {
            // TODO unit test for the property 'ConsoleWarnCount'
        }

        /// <summary>
        /// Test the property 'ConsoleErrorCount'
        /// </summary>
        [Fact]
        public void ConsoleErrorCountTest()
        {
            // TODO unit test for the property 'ConsoleErrorCount'
        }

        /// <summary>
        /// Test the property 'StartUrl'
        /// </summary>
        [Fact]
        public void StartUrlTest()
        {
            // TODO unit test for the property 'StartUrl'
        }

        /// <summary>
        /// Test the property 'Person'
        /// </summary>
        [Fact]
        public void PersonTest()
        {
            // TODO unit test for the property 'Person'
        }

        /// <summary>
        /// Test the property 'Storage'
        /// </summary>
        [Fact]
        public void StorageTest()
        {
            // TODO unit test for the property 'Storage'
        }
    }
}
