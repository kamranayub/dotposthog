/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DotPostHog.Model;
using DotPostHog.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DotPostHog.Test.Model
{
    /// <summary>
    ///  Class for testing SurveySerializerCreateUpdateOnly
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SurveySerializerCreateUpdateOnlyTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SurveySerializerCreateUpdateOnly
        //private SurveySerializerCreateUpdateOnly instance;

        public SurveySerializerCreateUpdateOnlyTests()
        {
            // TODO uncomment below to create an instance of SurveySerializerCreateUpdateOnly
            //instance = new SurveySerializerCreateUpdateOnly();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SurveySerializerCreateUpdateOnly
        /// </summary>
        [Fact]
        public void SurveySerializerCreateUpdateOnlyInstanceTest()
        {
            // TODO uncomment below to test "IsType" SurveySerializerCreateUpdateOnly
            //Assert.IsType<SurveySerializerCreateUpdateOnly>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'LinkedFlag'
        /// </summary>
        [Fact]
        public void LinkedFlagTest()
        {
            // TODO unit test for the property 'LinkedFlag'
        }

        /// <summary>
        /// Test the property 'LinkedFlagId'
        /// </summary>
        [Fact]
        public void LinkedFlagIdTest()
        {
            // TODO unit test for the property 'LinkedFlagId'
        }

        /// <summary>
        /// Test the property 'TargetingFlagId'
        /// </summary>
        [Fact]
        public void TargetingFlagIdTest()
        {
            // TODO unit test for the property 'TargetingFlagId'
        }

        /// <summary>
        /// Test the property 'TargetingFlag'
        /// </summary>
        [Fact]
        public void TargetingFlagTest()
        {
            // TODO unit test for the property 'TargetingFlag'
        }

        /// <summary>
        /// Test the property 'TargetingFlagFilters'
        /// </summary>
        [Fact]
        public void TargetingFlagFiltersTest()
        {
            // TODO unit test for the property 'TargetingFlagFilters'
        }

        /// <summary>
        /// Test the property 'RemoveTargetingFlag'
        /// </summary>
        [Fact]
        public void RemoveTargetingFlagTest()
        {
            // TODO unit test for the property 'RemoveTargetingFlag'
        }

        /// <summary>
        /// Test the property 'Questions'
        /// </summary>
        [Fact]
        public void QuestionsTest()
        {
            // TODO unit test for the property 'Questions'
        }

        /// <summary>
        /// Test the property 'Conditions'
        /// </summary>
        [Fact]
        public void ConditionsTest()
        {
            // TODO unit test for the property 'Conditions'
        }

        /// <summary>
        /// Test the property 'Appearance'
        /// </summary>
        [Fact]
        public void AppearanceTest()
        {
            // TODO unit test for the property 'Appearance'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }

        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Fact]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }

        /// <summary>
        /// Test the property 'EndDate'
        /// </summary>
        [Fact]
        public void EndDateTest()
        {
            // TODO unit test for the property 'EndDate'
        }

        /// <summary>
        /// Test the property 'Archived'
        /// </summary>
        [Fact]
        public void ArchivedTest()
        {
            // TODO unit test for the property 'Archived'
        }
    }
}
