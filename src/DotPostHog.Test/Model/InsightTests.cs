/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DotPostHog.Model;
using DotPostHog.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DotPostHog.Test.Model
{
    /// <summary>
    ///  Class for testing Insight
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InsightTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Insight
        //private Insight instance;

        public InsightTests()
        {
            // TODO uncomment below to create an instance of Insight
            //instance = new Insight();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Insight
        /// </summary>
        [Fact]
        public void InsightInstanceTest()
        {
            // TODO uncomment below to test "IsType" Insight
            //Assert.IsType<Insight>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'ShortId'
        /// </summary>
        [Fact]
        public void ShortIdTest()
        {
            // TODO unit test for the property 'ShortId'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'DerivedName'
        /// </summary>
        [Fact]
        public void DerivedNameTest()
        {
            // TODO unit test for the property 'DerivedName'
        }

        /// <summary>
        /// Test the property 'Filters'
        /// </summary>
        [Fact]
        public void FiltersTest()
        {
            // TODO unit test for the property 'Filters'
        }

        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }

        /// <summary>
        /// Test the property 'Order'
        /// </summary>
        [Fact]
        public void OrderTest()
        {
            // TODO unit test for the property 'Order'
        }

        /// <summary>
        /// Test the property 'Deleted'
        /// </summary>
        [Fact]
        public void DeletedTest()
        {
            // TODO unit test for the property 'Deleted'
        }

        /// <summary>
        /// Test the property 'Dashboards'
        /// </summary>
        [Fact]
        public void DashboardsTest()
        {
            // TODO unit test for the property 'Dashboards'
        }

        /// <summary>
        /// Test the property 'DashboardTiles'
        /// </summary>
        [Fact]
        public void DashboardTilesTest()
        {
            // TODO unit test for the property 'DashboardTiles'
        }

        /// <summary>
        /// Test the property 'LastRefresh'
        /// </summary>
        [Fact]
        public void LastRefreshTest()
        {
            // TODO unit test for the property 'LastRefresh'
        }

        /// <summary>
        /// Test the property 'NextAllowedClientRefresh'
        /// </summary>
        [Fact]
        public void NextAllowedClientRefreshTest()
        {
            // TODO unit test for the property 'NextAllowedClientRefresh'
        }

        /// <summary>
        /// Test the property 'Result'
        /// </summary>
        [Fact]
        public void ResultTest()
        {
            // TODO unit test for the property 'Result'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'CreatedBy'
        /// </summary>
        [Fact]
        public void CreatedByTest()
        {
            // TODO unit test for the property 'CreatedBy'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }

        /// <summary>
        /// Test the property 'Favorited'
        /// </summary>
        [Fact]
        public void FavoritedTest()
        {
            // TODO unit test for the property 'Favorited'
        }

        /// <summary>
        /// Test the property 'Saved'
        /// </summary>
        [Fact]
        public void SavedTest()
        {
            // TODO unit test for the property 'Saved'
        }

        /// <summary>
        /// Test the property 'LastModifiedAt'
        /// </summary>
        [Fact]
        public void LastModifiedAtTest()
        {
            // TODO unit test for the property 'LastModifiedAt'
        }

        /// <summary>
        /// Test the property 'LastModifiedBy'
        /// </summary>
        [Fact]
        public void LastModifiedByTest()
        {
            // TODO unit test for the property 'LastModifiedBy'
        }

        /// <summary>
        /// Test the property 'IsSample'
        /// </summary>
        [Fact]
        public void IsSampleTest()
        {
            // TODO unit test for the property 'IsSample'
        }

        /// <summary>
        /// Test the property 'EffectiveRestrictionLevel'
        /// </summary>
        [Fact]
        public void EffectiveRestrictionLevelTest()
        {
            // TODO unit test for the property 'EffectiveRestrictionLevel'
        }

        /// <summary>
        /// Test the property 'EffectivePrivilegeLevel'
        /// </summary>
        [Fact]
        public void EffectivePrivilegeLevelTest()
        {
            // TODO unit test for the property 'EffectivePrivilegeLevel'
        }

        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Fact]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }

        /// <summary>
        /// Test the property 'IsCached'
        /// </summary>
        [Fact]
        public void IsCachedTest()
        {
            // TODO unit test for the property 'IsCached'
        }
    }
}
