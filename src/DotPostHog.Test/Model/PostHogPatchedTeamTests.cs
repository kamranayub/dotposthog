/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DotPostHog.Model;
using DotPostHog.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DotPostHog.Test.Model
{
    /// <summary>
    ///  Class for testing PostHogPatchedTeam
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PostHogPatchedTeamTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PostHogPatchedTeam
        //private PostHogPatchedTeam instance;

        public PostHogPatchedTeamTests()
        {
            // TODO uncomment below to create an instance of PostHogPatchedTeam
            //instance = new PostHogPatchedTeam();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PostHogPatchedTeam
        /// </summary>
        [Fact]
        public void PostHogPatchedTeamInstanceTest()
        {
            // TODO uncomment below to test "IsType" PostHogPatchedTeam
            //Assert.IsType<PostHogPatchedTeam>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Uuid'
        /// </summary>
        [Fact]
        public void UuidTest()
        {
            // TODO unit test for the property 'Uuid'
        }

        /// <summary>
        /// Test the property 'Organization'
        /// </summary>
        [Fact]
        public void OrganizationTest()
        {
            // TODO unit test for the property 'Organization'
        }

        /// <summary>
        /// Test the property 'ApiToken'
        /// </summary>
        [Fact]
        public void ApiTokenTest()
        {
            // TODO unit test for the property 'ApiToken'
        }

        /// <summary>
        /// Test the property 'AppUrls'
        /// </summary>
        [Fact]
        public void AppUrlsTest()
        {
            // TODO unit test for the property 'AppUrls'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'SlackIncomingWebhook'
        /// </summary>
        [Fact]
        public void SlackIncomingWebhookTest()
        {
            // TODO unit test for the property 'SlackIncomingWebhook'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'AnonymizeIps'
        /// </summary>
        [Fact]
        public void AnonymizeIpsTest()
        {
            // TODO unit test for the property 'AnonymizeIps'
        }

        /// <summary>
        /// Test the property 'CompletedSnippetOnboarding'
        /// </summary>
        [Fact]
        public void CompletedSnippetOnboardingTest()
        {
            // TODO unit test for the property 'CompletedSnippetOnboarding'
        }

        /// <summary>
        /// Test the property 'IngestedEvent'
        /// </summary>
        [Fact]
        public void IngestedEventTest()
        {
            // TODO unit test for the property 'IngestedEvent'
        }

        /// <summary>
        /// Test the property 'TestAccountFilters'
        /// </summary>
        [Fact]
        public void TestAccountFiltersTest()
        {
            // TODO unit test for the property 'TestAccountFilters'
        }

        /// <summary>
        /// Test the property 'TestAccountFiltersDefaultChecked'
        /// </summary>
        [Fact]
        public void TestAccountFiltersDefaultCheckedTest()
        {
            // TODO unit test for the property 'TestAccountFiltersDefaultChecked'
        }

        /// <summary>
        /// Test the property 'PathCleaningFilters'
        /// </summary>
        [Fact]
        public void PathCleaningFiltersTest()
        {
            // TODO unit test for the property 'PathCleaningFilters'
        }

        /// <summary>
        /// Test the property 'IsDemo'
        /// </summary>
        [Fact]
        public void IsDemoTest()
        {
            // TODO unit test for the property 'IsDemo'
        }

        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Fact]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }

        /// <summary>
        /// Test the property 'DataAttributes'
        /// </summary>
        [Fact]
        public void DataAttributesTest()
        {
            // TODO unit test for the property 'DataAttributes'
        }

        /// <summary>
        /// Test the property 'PersonDisplayNameProperties'
        /// </summary>
        [Fact]
        public void PersonDisplayNamePropertiesTest()
        {
            // TODO unit test for the property 'PersonDisplayNameProperties'
        }

        /// <summary>
        /// Test the property 'CorrelationConfig'
        /// </summary>
        [Fact]
        public void CorrelationConfigTest()
        {
            // TODO unit test for the property 'CorrelationConfig'
        }

        /// <summary>
        /// Test the property 'AutocaptureOptOut'
        /// </summary>
        [Fact]
        public void AutocaptureOptOutTest()
        {
            // TODO unit test for the property 'AutocaptureOptOut'
        }

        /// <summary>
        /// Test the property 'AutocaptureExceptionsOptIn'
        /// </summary>
        [Fact]
        public void AutocaptureExceptionsOptInTest()
        {
            // TODO unit test for the property 'AutocaptureExceptionsOptIn'
        }

        /// <summary>
        /// Test the property 'AutocaptureExceptionsErrorsToIgnore'
        /// </summary>
        [Fact]
        public void AutocaptureExceptionsErrorsToIgnoreTest()
        {
            // TODO unit test for the property 'AutocaptureExceptionsErrorsToIgnore'
        }

        /// <summary>
        /// Test the property 'CaptureConsoleLogOptIn'
        /// </summary>
        [Fact]
        public void CaptureConsoleLogOptInTest()
        {
            // TODO unit test for the property 'CaptureConsoleLogOptIn'
        }

        /// <summary>
        /// Test the property 'CapturePerformanceOptIn'
        /// </summary>
        [Fact]
        public void CapturePerformanceOptInTest()
        {
            // TODO unit test for the property 'CapturePerformanceOptIn'
        }

        /// <summary>
        /// Test the property 'SessionRecordingOptIn'
        /// </summary>
        [Fact]
        public void SessionRecordingOptInTest()
        {
            // TODO unit test for the property 'SessionRecordingOptIn'
        }

        /// <summary>
        /// Test the property 'SessionRecordingSampleRate'
        /// </summary>
        [Fact]
        public void SessionRecordingSampleRateTest()
        {
            // TODO unit test for the property 'SessionRecordingSampleRate'
        }

        /// <summary>
        /// Test the property 'SessionRecordingMinimumDurationMilliseconds'
        /// </summary>
        [Fact]
        public void SessionRecordingMinimumDurationMillisecondsTest()
        {
            // TODO unit test for the property 'SessionRecordingMinimumDurationMilliseconds'
        }

        /// <summary>
        /// Test the property 'SessionRecordingLinkedFlag'
        /// </summary>
        [Fact]
        public void SessionRecordingLinkedFlagTest()
        {
            // TODO unit test for the property 'SessionRecordingLinkedFlag'
        }

        /// <summary>
        /// Test the property 'SessionRecordingNetworkPayloadCaptureConfig'
        /// </summary>
        [Fact]
        public void SessionRecordingNetworkPayloadCaptureConfigTest()
        {
            // TODO unit test for the property 'SessionRecordingNetworkPayloadCaptureConfig'
        }

        /// <summary>
        /// Test the property 'EffectiveMembershipLevel'
        /// </summary>
        [Fact]
        public void EffectiveMembershipLevelTest()
        {
            // TODO unit test for the property 'EffectiveMembershipLevel'
        }

        /// <summary>
        /// Test the property 'AccessControl'
        /// </summary>
        [Fact]
        public void AccessControlTest()
        {
            // TODO unit test for the property 'AccessControl'
        }

        /// <summary>
        /// Test the property 'WeekStartDay'
        /// </summary>
        [Fact]
        public void WeekStartDayTest()
        {
            // TODO unit test for the property 'WeekStartDay'
        }

        /// <summary>
        /// Test the property 'HasGroupTypes'
        /// </summary>
        [Fact]
        public void HasGroupTypesTest()
        {
            // TODO unit test for the property 'HasGroupTypes'
        }

        /// <summary>
        /// Test the property 'PrimaryDashboard'
        /// </summary>
        [Fact]
        public void PrimaryDashboardTest()
        {
            // TODO unit test for the property 'PrimaryDashboard'
        }

        /// <summary>
        /// Test the property 'LiveEventsColumns'
        /// </summary>
        [Fact]
        public void LiveEventsColumnsTest()
        {
            // TODO unit test for the property 'LiveEventsColumns'
        }

        /// <summary>
        /// Test the property 'RecordingDomains'
        /// </summary>
        [Fact]
        public void RecordingDomainsTest()
        {
            // TODO unit test for the property 'RecordingDomains'
        }

        /// <summary>
        /// Test the property 'PersonOnEventsQueryingEnabled'
        /// </summary>
        [Fact]
        public void PersonOnEventsQueryingEnabledTest()
        {
            // TODO unit test for the property 'PersonOnEventsQueryingEnabled'
        }

        /// <summary>
        /// Test the property 'GroupsOnEventsQueryingEnabled'
        /// </summary>
        [Fact]
        public void GroupsOnEventsQueryingEnabledTest()
        {
            // TODO unit test for the property 'GroupsOnEventsQueryingEnabled'
        }

        /// <summary>
        /// Test the property 'InjectWebApps'
        /// </summary>
        [Fact]
        public void InjectWebAppsTest()
        {
            // TODO unit test for the property 'InjectWebApps'
        }

        /// <summary>
        /// Test the property 'ExtraSettings'
        /// </summary>
        [Fact]
        public void ExtraSettingsTest()
        {
            // TODO unit test for the property 'ExtraSettings'
        }

        /// <summary>
        /// Test the property 'HasCompletedOnboardingFor'
        /// </summary>
        [Fact]
        public void HasCompletedOnboardingForTest()
        {
            // TODO unit test for the property 'HasCompletedOnboardingFor'
        }

        /// <summary>
        /// Test the property 'SurveysOptIn'
        /// </summary>
        [Fact]
        public void SurveysOptInTest()
        {
            // TODO unit test for the property 'SurveysOptIn'
        }
    }
}
