/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DotPostHog.Model;
using DotPostHog.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DotPostHog.Test.Model
{
    /// <summary>
    ///  Class for testing PatchedGroupType
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PatchedGroupTypeTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PatchedGroupType
        //private PatchedGroupType instance;

        public PatchedGroupTypeTests()
        {
            // TODO uncomment below to create an instance of PatchedGroupType
            //instance = new PatchedGroupType();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PatchedGroupType
        /// </summary>
        [Fact]
        public void PatchedGroupTypeInstanceTest()
        {
            // TODO uncomment below to test "IsType" PatchedGroupType
            //Assert.IsType<PatchedGroupType>(instance);
        }

        /// <summary>
        /// Test the property 'GroupType'
        /// </summary>
        [Fact]
        public void GroupTypeTest()
        {
            // TODO unit test for the property 'GroupType'
        }

        /// <summary>
        /// Test the property 'GroupTypeIndex'
        /// </summary>
        [Fact]
        public void GroupTypeIndexTest()
        {
            // TODO unit test for the property 'GroupTypeIndex'
        }

        /// <summary>
        /// Test the property 'NameSingular'
        /// </summary>
        [Fact]
        public void NameSingularTest()
        {
            // TODO unit test for the property 'NameSingular'
        }

        /// <summary>
        /// Test the property 'NamePlural'
        /// </summary>
        [Fact]
        public void NamePluralTest()
        {
            // TODO unit test for the property 'NamePlural'
        }
    }
}
