/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing SurveysApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SurveysApiTests : IDisposable
    {
        private SurveysApi instance;

        public SurveysApiTests()
        {
            instance = new SurveysApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SurveysApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SurveysApi
            //Assert.IsType<SurveysApi>(instance);
        }

        /// <summary>
        /// Test SurveysCreate
        /// </summary>
        [Fact]
        public void SurveysCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //SurveySerializerCreateUpdateOnly surveySerializerCreateUpdateOnly = null;
            //var response = instance.SurveysCreate(projectId, surveySerializerCreateUpdateOnly);
            //Assert.IsType<SurveySerializerCreateUpdateOnly>(response);
        }

        /// <summary>
        /// Test SurveysDestroy
        /// </summary>
        [Fact]
        public void SurveysDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //instance.SurveysDestroy(id, projectId);
        }

        /// <summary>
        /// Test SurveysList
        /// </summary>
        [Fact]
        public void SurveysListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.SurveysList(projectId, limit, offset);
            //Assert.IsType<PaginatedSurveyList>(response);
        }

        /// <summary>
        /// Test SurveysPartialUpdate
        /// </summary>
        [Fact]
        public void SurveysPartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PatchedSurveySerializerCreateUpdateOnly patchedSurveySerializerCreateUpdateOnly = null;
            //var response = instance.SurveysPartialUpdate(id, projectId, patchedSurveySerializerCreateUpdateOnly);
            //Assert.IsType<SurveySerializerCreateUpdateOnly>(response);
        }

        /// <summary>
        /// Test SurveysResponsesCountRetrieve
        /// </summary>
        [Fact]
        public void SurveysResponsesCountRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //var response = instance.SurveysResponsesCountRetrieve(projectId);
            //Assert.IsType<Survey>(response);
        }

        /// <summary>
        /// Test SurveysRetrieve
        /// </summary>
        [Fact]
        public void SurveysRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //var response = instance.SurveysRetrieve(id, projectId);
            //Assert.IsType<Survey>(response);
        }

        /// <summary>
        /// Test SurveysUpdate
        /// </summary>
        [Fact]
        public void SurveysUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //Survey survey = null;
            //var response = instance.SurveysUpdate(id, projectId, survey);
            //Assert.IsType<Survey>(response);
        }
    }
}
