/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing GroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GroupsApiTests : IDisposable
    {
        private GroupsApi instance;

        public GroupsApiTests()
        {
            instance = new GroupsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GroupsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GroupsApi
            //Assert.IsType<GroupsApi>(instance);
        }

        /// <summary>
        /// Test GroupsFindRetrieve
        /// </summary>
        [Fact]
        public void GroupsFindRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupKey = null;
            //int groupTypeIndex = null;
            //string projectId = null;
            //var response = instance.GroupsFindRetrieve(groupKey, groupTypeIndex, projectId);
            //Assert.IsType<PostHogGroup>(response);
        }

        /// <summary>
        /// Test GroupsList
        /// </summary>
        [Fact]
        public void GroupsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int groupTypeIndex = null;
            //string projectId = null;
            //string search = null;
            //string cursor = null;
            //var response = instance.GroupsList(groupTypeIndex, projectId, search, cursor);
            //Assert.IsType<PostHogPaginatedGroupList>(response);
        }

        /// <summary>
        /// Test GroupsPropertyDefinitionsRetrieve
        /// </summary>
        [Fact]
        public void GroupsPropertyDefinitionsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //var response = instance.GroupsPropertyDefinitionsRetrieve(projectId);
            //Assert.IsType<PostHogGroup>(response);
        }

        /// <summary>
        /// Test GroupsPropertyValuesRetrieve
        /// </summary>
        [Fact]
        public void GroupsPropertyValuesRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int groupTypeIndex = null;
            //string key = null;
            //string projectId = null;
            //var response = instance.GroupsPropertyValuesRetrieve(groupTypeIndex, key, projectId);
            //Assert.IsType<PostHogGroup>(response);
        }

        /// <summary>
        /// Test GroupsRelatedRetrieve
        /// </summary>
        [Fact]
        public void GroupsRelatedRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int groupTypeIndex = null;
            //string id = null;
            //string projectId = null;
            //var response = instance.GroupsRelatedRetrieve(groupTypeIndex, id, projectId);
            //Assert.IsType<PostHogGroup>(response);
        }
    }
}
