/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing ProjectsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProjectsApiTests : IDisposable
    {
        private ProjectsApi instance;

        public ProjectsApiTests()
        {
            instance = new ProjectsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProjectsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProjectsApi
            //Assert.IsType<ProjectsApi>(instance);
        }

        /// <summary>
        /// Test Create
        /// </summary>
        [Fact]
        public void CreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PostHogTeam postHogTeam = null;
            //var response = instance.Create(postHogTeam);
            //Assert.IsType<PostHogTeam>(response);
        }

        /// <summary>
        /// Test Destroy
        /// </summary>
        [Fact]
        public void DestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //instance.Destroy(id);
        }

        /// <summary>
        /// Test List
        /// </summary>
        [Fact]
        public void ListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //var response = instance.List(limit, offset);
            //Assert.IsType<PostHogPaginatedTeamBasicList>(response);
        }

        /// <summary>
        /// Test PartialUpdate
        /// </summary>
        [Fact]
        public void PartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //PostHogPatchedTeam postHogPatchedTeam = null;
            //var response = instance.PartialUpdate(id, postHogPatchedTeam);
            //Assert.IsType<PostHogTeam>(response);
        }

        /// <summary>
        /// Test Retrieve
        /// </summary>
        [Fact]
        public void RetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.Retrieve(id);
            //Assert.IsType<PostHogTeam>(response);
        }

        /// <summary>
        /// Test Update
        /// </summary>
        [Fact]
        public void UpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //PostHogTeam postHogTeam = null;
            //var response = instance.Update(id, postHogTeam);
            //Assert.IsType<PostHogTeam>(response);
        }
    }
}
