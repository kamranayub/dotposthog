/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing PropertyDefinitionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PropertyDefinitionsApiTests : IDisposable
    {
        private PropertyDefinitionsApi instance;

        public PropertyDefinitionsApiTests()
        {
            instance = new PropertyDefinitionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PropertyDefinitionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PropertyDefinitionsApi
            //Assert.IsType<PropertyDefinitionsApi>(instance);
        }

        /// <summary>
        /// Test PropertyDefinitionsDestroy
        /// </summary>
        [Fact]
        public void PropertyDefinitionsDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string projectId = null;
            //instance.PropertyDefinitionsDestroy(id, projectId);
        }

        /// <summary>
        /// Test PropertyDefinitionsList
        /// </summary>
        [Fact]
        public void PropertyDefinitionsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string eventNames = null;
            //string excludedProperties = null;
            //bool? filterByEventNames = null;
            //int? groupTypeIndex = null;
            //bool? isFeatureFlag = null;
            //bool? isNumerical = null;
            //int? limit = null;
            //int? offset = null;
            //string properties = null;
            //string search = null;
            //string type = null;
            //var response = instance.PropertyDefinitionsList(projectId, eventNames, excludedProperties, filterByEventNames, groupTypeIndex, isFeatureFlag, isNumerical, limit, offset, properties, search, type);
            //Assert.IsType<PostHogPaginatedEnterprisePropertyDefinitionList>(response);
        }

        /// <summary>
        /// Test PropertyDefinitionsPartialUpdate
        /// </summary>
        [Fact]
        public void PropertyDefinitionsPartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string projectId = null;
            //PostHogPatchedEnterprisePropertyDefinition postHogPatchedEnterprisePropertyDefinition = null;
            //var response = instance.PropertyDefinitionsPartialUpdate(id, projectId, postHogPatchedEnterprisePropertyDefinition);
            //Assert.IsType<PostHogEnterprisePropertyDefinition>(response);
        }

        /// <summary>
        /// Test PropertyDefinitionsRetrieve
        /// </summary>
        [Fact]
        public void PropertyDefinitionsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string projectId = null;
            //var response = instance.PropertyDefinitionsRetrieve(id, projectId);
            //Assert.IsType<PostHogEnterprisePropertyDefinition>(response);
        }

        /// <summary>
        /// Test PropertyDefinitionsSeenTogetherRetrieve
        /// </summary>
        [Fact]
        public void PropertyDefinitionsSeenTogetherRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //var response = instance.PropertyDefinitionsSeenTogetherRetrieve(projectId);
            //Assert.IsType<PostHogEnterprisePropertyDefinition>(response);
        }

        /// <summary>
        /// Test PropertyDefinitionsUpdate
        /// </summary>
        [Fact]
        public void PropertyDefinitionsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string projectId = null;
            //PostHogEnterprisePropertyDefinition postHogEnterprisePropertyDefinition = null;
            //var response = instance.PropertyDefinitionsUpdate(id, projectId, postHogEnterprisePropertyDefinition);
            //Assert.IsType<PostHogEnterprisePropertyDefinition>(response);
        }
    }
}
