/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing PersonsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PersonsApiTests : IDisposable
    {
        private PersonsApi instance;

        public PersonsApiTests()
        {
            instance = new PersonsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PersonsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PersonsApi
            //Assert.IsType<PersonsApi>(instance);
        }

        /// <summary>
        /// Test PersonsActivityRetrieve
        /// </summary>
        [Fact]
        public void PersonsActivityRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsActivityRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsActivityRetrieve2
        /// </summary>
        [Fact]
        public void PersonsActivityRetrieve2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsActivityRetrieve2(id, projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsCohortsRetrieve
        /// </summary>
        [Fact]
        public void PersonsCohortsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsCohortsRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsDeletePropertyCreate
        /// </summary>
        [Fact]
        public void PersonsDeletePropertyCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string unset = null;
            //int id = null;
            //string projectId = null;
            //string format = null;
            //PostHogPerson postHogPerson = null;
            //var response = instance.PersonsDeletePropertyCreate(unset, id, projectId, format, postHogPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsDestroy
        /// </summary>
        [Fact]
        public void PersonsDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //bool? deleteEvents = null;
            //string format = null;
            //instance.PersonsDestroy(id, projectId, deleteEvents, format);
        }

        /// <summary>
        /// Test PersonsFunnelCorrelationCreate
        /// </summary>
        [Fact]
        public void PersonsFunnelCorrelationCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //PostHogPerson postHogPerson = null;
            //var response = instance.PersonsFunnelCorrelationCreate(projectId, format, postHogPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsFunnelCorrelationRetrieve
        /// </summary>
        [Fact]
        public void PersonsFunnelCorrelationRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsFunnelCorrelationRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsFunnelCreate
        /// </summary>
        [Fact]
        public void PersonsFunnelCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //PostHogPerson postHogPerson = null;
            //var response = instance.PersonsFunnelCreate(projectId, format, postHogPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsFunnelRetrieve
        /// </summary>
        [Fact]
        public void PersonsFunnelRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsFunnelRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsLifecycleRetrieve
        /// </summary>
        [Fact]
        public void PersonsLifecycleRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsLifecycleRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsList
        /// </summary>
        [Fact]
        public void PersonsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string distinctId = null;
            //string email = null;
            //string format = null;
            //int? limit = null;
            //int? offset = null;
            //List<PostHogProperty> properties = null;
            //string search = null;
            //var response = instance.PersonsList(projectId, distinctId, email, format, limit, offset, properties, search);
            //Assert.IsType<PostHogPaginatedPersonList>(response);
        }

        /// <summary>
        /// Test PersonsPartialUpdate
        /// </summary>
        [Fact]
        public void PersonsPartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //string format = null;
            //PostHogPatchedPerson postHogPatchedPerson = null;
            //var response = instance.PersonsPartialUpdate(id, projectId, format, postHogPatchedPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsPathCreate
        /// </summary>
        [Fact]
        public void PersonsPathCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //PostHogPerson postHogPerson = null;
            //var response = instance.PersonsPathCreate(projectId, format, postHogPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsPathRetrieve
        /// </summary>
        [Fact]
        public void PersonsPathRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsPathRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsPropertiesTimelineRetrieve
        /// </summary>
        [Fact]
        public void PersonsPropertiesTimelineRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsPropertiesTimelineRetrieve(id, projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsRetentionRetrieve
        /// </summary>
        [Fact]
        public void PersonsRetentionRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsRetentionRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsRetrieve
        /// </summary>
        [Fact]
        public void PersonsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsRetrieve(id, projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsSplitCreate
        /// </summary>
        [Fact]
        public void PersonsSplitCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //string format = null;
            //PostHogPerson postHogPerson = null;
            //var response = instance.PersonsSplitCreate(id, projectId, format, postHogPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsStickinessRetrieve
        /// </summary>
        [Fact]
        public void PersonsStickinessRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsStickinessRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsTrendsRetrieve
        /// </summary>
        [Fact]
        public void PersonsTrendsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsTrendsRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsUpdate
        /// </summary>
        [Fact]
        public void PersonsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //string format = null;
            //PostHogPerson postHogPerson = null;
            //var response = instance.PersonsUpdate(id, projectId, format, postHogPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsUpdatePropertyCreate
        /// </summary>
        [Fact]
        public void PersonsUpdatePropertyCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string key = null;
            //string projectId = null;
            //Object value = null;
            //string format = null;
            //PostHogPerson postHogPerson = null;
            //var response = instance.PersonsUpdatePropertyCreate(id, key, projectId, value, format, postHogPerson);
            //Assert.IsType<PostHogPerson>(response);
        }

        /// <summary>
        /// Test PersonsValuesRetrieve
        /// </summary>
        [Fact]
        public void PersonsValuesRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //string format = null;
            //var response = instance.PersonsValuesRetrieve(projectId, format);
            //Assert.IsType<PostHogPerson>(response);
        }
    }
}
