/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing EarlyAccessFeatureApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EarlyAccessFeatureApiTests : IDisposable
    {
        private EarlyAccessFeatureApi instance;

        public EarlyAccessFeatureApiTests()
        {
            instance = new EarlyAccessFeatureApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EarlyAccessFeatureApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EarlyAccessFeatureApi
            //Assert.IsType<EarlyAccessFeatureApi>(instance);
        }

        /// <summary>
        /// Test EarlyAccessFeatureCreate
        /// </summary>
        [Fact]
        public void EarlyAccessFeatureCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //PostHogEarlyAccessFeatureSerializerCreateOnly postHogEarlyAccessFeatureSerializerCreateOnly = null;
            //var response = instance.EarlyAccessFeatureCreate(projectId, postHogEarlyAccessFeatureSerializerCreateOnly);
            //Assert.IsType<PostHogEarlyAccessFeatureSerializerCreateOnly>(response);
        }

        /// <summary>
        /// Test EarlyAccessFeatureDestroy
        /// </summary>
        [Fact]
        public void EarlyAccessFeatureDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //instance.EarlyAccessFeatureDestroy(id, projectId);
        }

        /// <summary>
        /// Test EarlyAccessFeatureList
        /// </summary>
        [Fact]
        public void EarlyAccessFeatureListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.EarlyAccessFeatureList(projectId, limit, offset);
            //Assert.IsType<PostHogPaginatedEarlyAccessFeatureList>(response);
        }

        /// <summary>
        /// Test EarlyAccessFeaturePartialUpdate
        /// </summary>
        [Fact]
        public void EarlyAccessFeaturePartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PostHogPatchedEarlyAccessFeature postHogPatchedEarlyAccessFeature = null;
            //var response = instance.EarlyAccessFeaturePartialUpdate(id, projectId, postHogPatchedEarlyAccessFeature);
            //Assert.IsType<PostHogEarlyAccessFeature>(response);
        }

        /// <summary>
        /// Test EarlyAccessFeatureRetrieve
        /// </summary>
        [Fact]
        public void EarlyAccessFeatureRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //var response = instance.EarlyAccessFeatureRetrieve(id, projectId);
            //Assert.IsType<PostHogEarlyAccessFeature>(response);
        }

        /// <summary>
        /// Test EarlyAccessFeatureUpdate
        /// </summary>
        [Fact]
        public void EarlyAccessFeatureUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PostHogEarlyAccessFeature postHogEarlyAccessFeature = null;
            //var response = instance.EarlyAccessFeatureUpdate(id, projectId, postHogEarlyAccessFeature);
            //Assert.IsType<PostHogEarlyAccessFeature>(response);
        }
    }
}
