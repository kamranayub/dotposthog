/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing BatchExportsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BatchExportsApiTests : IDisposable
    {
        private BatchExportsApi instance;

        public BatchExportsApiTests()
        {
            instance = new BatchExportsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BatchExportsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BatchExportsApi
            //Assert.IsType<BatchExportsApi>(instance);
        }

        /// <summary>
        /// Test BatchExportsBackfillCreate
        /// </summary>
        [Fact]
        public void BatchExportsBackfillCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PostHogBatchExport postHogBatchExport = null;
            //var response = instance.BatchExportsBackfillCreate(id, projectId, postHogBatchExport);
            //Assert.IsType<PostHogBatchExport>(response);
        }

        /// <summary>
        /// Test BatchExportsCreate
        /// </summary>
        [Fact]
        public void BatchExportsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //PostHogBatchExport postHogBatchExport = null;
            //var response = instance.BatchExportsCreate(projectId, postHogBatchExport);
            //Assert.IsType<PostHogBatchExport>(response);
        }

        /// <summary>
        /// Test BatchExportsDestroy
        /// </summary>
        [Fact]
        public void BatchExportsDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //instance.BatchExportsDestroy(id, projectId);
        }

        /// <summary>
        /// Test BatchExportsList
        /// </summary>
        [Fact]
        public void BatchExportsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.BatchExportsList(projectId, limit, offset);
            //Assert.IsType<PostHogPaginatedBatchExportList>(response);
        }

        /// <summary>
        /// Test BatchExportsLogsList
        /// </summary>
        [Fact]
        public void BatchExportsLogsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentLookupBatchExportId = null;
            //string projectId = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.BatchExportsLogsList(parentLookupBatchExportId, projectId, limit, offset);
            //Assert.IsType<PostHogPaginatedBatchExportLogEntryList>(response);
        }

        /// <summary>
        /// Test BatchExportsPartialUpdate
        /// </summary>
        [Fact]
        public void BatchExportsPartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PostHogPatchedBatchExport postHogPatchedBatchExport = null;
            //var response = instance.BatchExportsPartialUpdate(id, projectId, postHogPatchedBatchExport);
            //Assert.IsType<PostHogBatchExport>(response);
        }

        /// <summary>
        /// Test BatchExportsPauseCreate
        /// </summary>
        [Fact]
        public void BatchExportsPauseCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PostHogBatchExport postHogBatchExport = null;
            //var response = instance.BatchExportsPauseCreate(id, projectId, postHogBatchExport);
            //Assert.IsType<PostHogBatchExport>(response);
        }

        /// <summary>
        /// Test BatchExportsRetrieve
        /// </summary>
        [Fact]
        public void BatchExportsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //var response = instance.BatchExportsRetrieve(id, projectId);
            //Assert.IsType<PostHogBatchExport>(response);
        }

        /// <summary>
        /// Test BatchExportsRunsList
        /// </summary>
        [Fact]
        public void BatchExportsRunsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentLookupBatchExportId = null;
            //string projectId = null;
            //string cursor = null;
            //var response = instance.BatchExportsRunsList(parentLookupBatchExportId, projectId, cursor);
            //Assert.IsType<PostHogPaginatedBatchExportRunList>(response);
        }

        /// <summary>
        /// Test BatchExportsRunsLogsList
        /// </summary>
        [Fact]
        public void BatchExportsRunsLogsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentLookupBatchExportId = null;
            //string parentLookupRunId = null;
            //string projectId = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.BatchExportsRunsLogsList(parentLookupBatchExportId, parentLookupRunId, projectId, limit, offset);
            //Assert.IsType<PostHogPaginatedBatchExportLogEntryList>(response);
        }

        /// <summary>
        /// Test BatchExportsRunsRetrieve
        /// </summary>
        [Fact]
        public void BatchExportsRunsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string parentLookupBatchExportId = null;
            //string projectId = null;
            //var response = instance.BatchExportsRunsRetrieve(id, parentLookupBatchExportId, projectId);
            //Assert.IsType<PostHogBatchExportRun>(response);
        }

        /// <summary>
        /// Test BatchExportsUnpauseCreate
        /// </summary>
        [Fact]
        public void BatchExportsUnpauseCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PostHogBatchExport postHogBatchExport = null;
            //var response = instance.BatchExportsUnpauseCreate(id, projectId, postHogBatchExport);
            //Assert.IsType<PostHogBatchExport>(response);
        }

        /// <summary>
        /// Test BatchExportsUpdate
        /// </summary>
        [Fact]
        public void BatchExportsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string projectId = null;
            //PostHogBatchExport postHogBatchExport = null;
            //var response = instance.BatchExportsUpdate(id, projectId, postHogBatchExport);
            //Assert.IsType<PostHogBatchExport>(response);
        }
    }
}
