/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing DomainsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DomainsApiTests : IDisposable
    {
        private DomainsApi instance;

        public DomainsApiTests()
        {
            instance = new DomainsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DomainsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DomainsApi
            //Assert.IsType<DomainsApi>(instance);
        }

        /// <summary>
        /// Test DomainsCreate
        /// </summary>
        [Fact]
        public void DomainsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentLookupOrganizationId = null;
            //PostHogOrganizationDomain postHogOrganizationDomain = null;
            //var response = instance.DomainsCreate(parentLookupOrganizationId, postHogOrganizationDomain);
            //Assert.IsType<PostHogOrganizationDomain>(response);
        }

        /// <summary>
        /// Test DomainsDestroy
        /// </summary>
        [Fact]
        public void DomainsDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string parentLookupOrganizationId = null;
            //instance.DomainsDestroy(id, parentLookupOrganizationId);
        }

        /// <summary>
        /// Test DomainsList
        /// </summary>
        [Fact]
        public void DomainsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parentLookupOrganizationId = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.DomainsList(parentLookupOrganizationId, limit, offset);
            //Assert.IsType<PostHogPaginatedOrganizationDomainList>(response);
        }

        /// <summary>
        /// Test DomainsPartialUpdate
        /// </summary>
        [Fact]
        public void DomainsPartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string parentLookupOrganizationId = null;
            //PostHogPatchedOrganizationDomain postHogPatchedOrganizationDomain = null;
            //var response = instance.DomainsPartialUpdate(id, parentLookupOrganizationId, postHogPatchedOrganizationDomain);
            //Assert.IsType<PostHogOrganizationDomain>(response);
        }

        /// <summary>
        /// Test DomainsRetrieve
        /// </summary>
        [Fact]
        public void DomainsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string parentLookupOrganizationId = null;
            //var response = instance.DomainsRetrieve(id, parentLookupOrganizationId);
            //Assert.IsType<PostHogOrganizationDomain>(response);
        }

        /// <summary>
        /// Test DomainsUpdate
        /// </summary>
        [Fact]
        public void DomainsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string parentLookupOrganizationId = null;
            //PostHogOrganizationDomain postHogOrganizationDomain = null;
            //var response = instance.DomainsUpdate(id, parentLookupOrganizationId, postHogOrganizationDomain);
            //Assert.IsType<PostHogOrganizationDomain>(response);
        }

        /// <summary>
        /// Test DomainsVerifyCreate
        /// </summary>
        [Fact]
        public void DomainsVerifyCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //string parentLookupOrganizationId = null;
            //PostHogOrganizationDomain postHogOrganizationDomain = null;
            //var response = instance.DomainsVerifyCreate(id, parentLookupOrganizationId, postHogOrganizationDomain);
            //Assert.IsType<PostHogOrganizationDomain>(response);
        }
    }
}
