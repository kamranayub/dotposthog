/*
 * PostHog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using DotPostHog.Client;
using DotPostHog.Api;
// uncomment below to import models
//using DotPostHog.Model;

namespace DotPostHog.Test.Api
{
    /// <summary>
    ///  Class for testing DashboardsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DashboardsApiTests : IDisposable
    {
        private DashboardsApi instance;

        public DashboardsApiTests()
        {
            instance = new DashboardsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DashboardsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DashboardsApi
            //Assert.IsType<DashboardsApi>(instance);
        }

        /// <summary>
        /// Test DashboardsCreate
        /// </summary>
        [Fact]
        public void DashboardsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //Dashboard dashboard = null;
            //var response = instance.DashboardsCreate(projectId, dashboard);
            //Assert.IsType<Dashboard>(response);
        }

        /// <summary>
        /// Test DashboardsCreateFromTemplateJsonCreate
        /// </summary>
        [Fact]
        public void DashboardsCreateFromTemplateJsonCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //Dashboard dashboard = null;
            //var response = instance.DashboardsCreateFromTemplateJsonCreate(projectId, dashboard);
            //Assert.IsType<Dashboard>(response);
        }

        /// <summary>
        /// Test DashboardsDestroy
        /// </summary>
        [Fact]
        public void DashboardsDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //instance.DashboardsDestroy(id, projectId);
        }

        /// <summary>
        /// Test DashboardsList
        /// </summary>
        [Fact]
        public void DashboardsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.DashboardsList(projectId, limit, offset);
            //Assert.IsType<PaginatedDashboardBasicList>(response);
        }

        /// <summary>
        /// Test DashboardsMoveTilePartialUpdate
        /// </summary>
        [Fact]
        public void DashboardsMoveTilePartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //PatchedDashboard patchedDashboard = null;
            //var response = instance.DashboardsMoveTilePartialUpdate(id, projectId, patchedDashboard);
            //Assert.IsType<Dashboard>(response);
        }

        /// <summary>
        /// Test DashboardsPartialUpdate
        /// </summary>
        [Fact]
        public void DashboardsPartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //PatchedDashboard patchedDashboard = null;
            //var response = instance.DashboardsPartialUpdate(id, projectId, patchedDashboard);
            //Assert.IsType<Dashboard>(response);
        }

        /// <summary>
        /// Test DashboardsRetrieve
        /// </summary>
        [Fact]
        public void DashboardsRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //var response = instance.DashboardsRetrieve(id, projectId);
            //Assert.IsType<Dashboard>(response);
        }

        /// <summary>
        /// Test DashboardsUpdate
        /// </summary>
        [Fact]
        public void DashboardsUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string projectId = null;
            //Dashboard dashboard = null;
            //var response = instance.DashboardsUpdate(id, projectId, dashboard);
            //Assert.IsType<Dashboard>(response);
        }
    }
}
